
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Lab1(

	//////////// CLOCK //////////
	CLOCK_50,
	CLOCK2_50,
	CLOCK3_50,

	//////////// LED //////////
	LEDG,
	LEDR,

	//////////// KEY //////////
	KEY,

	//////////// SEG7 //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// LED //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY //////////
input 		     [3:0]		KEY;

//////////// SEG7 //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
inout 		    [31:0]		DRAM_DQ;
output		     [3:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;


//=======================================================
//  REG/WIRE declarations
//=======================================================
wire clk_50, clk_100;
wire [31:0] hex_wire;

//=======================================================
//  Structural coding
//=======================================================
syspll syspll_inst (
	.areset (0),
	.inclk0 (CLOCK_50),
	.c0 (clk_50),
	.c1 (clk_100),
	.c2 (DRAM_CLK),
	.locked ()
);

niosII u0 (
	.clk_50_clk       (clk_50),
	.reset_50_reset_n (1'b1),
	.clk_100_clk      (clk_100),
	.reset_100_reset_n(1'b1),
	.hex_export       (hex_wire),
	.led_export       (LEDG),
	.sdram_wire_addr  (DRAM_ADDR),
	.sdram_wire_ba    (DRAM_BA),
	.sdram_wire_cas_n (DRAM_CAS_N),
	.sdram_wire_cke   (DRAM_CKE),
	.sdram_wire_cs_n  (DRAM_CS_N),
	.sdram_wire_dq    (DRAM_DQ),
	.sdram_wire_dqm   (DRAM_DQM),
	.sdram_wire_ras_n (DRAM_RAS_N),
	.sdram_wire_we_n  (DRAM_WE_N),
	.btn_export       (KEY)
);

assign HEX0 = hex_wire[6:0];
assign HEX1 = hex_wire[14:8];
assign HEX2 = hex_wire[22:16];
assign HEX3 = hex_wire[30:24];
assign HEX4 = 7'h7F;
assign HEX5 = 7'h7F;
assign HEX6 = 7'h7F;
assign HEX7 = 7'h7F;
assign LEDR = 0;



endmodule
