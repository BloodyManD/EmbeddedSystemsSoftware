
niosII_training.elf:     file format elf32-littlenios2
niosII_training.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001a8

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0001235c memsz 0x000125dc flags rwx
    LOAD off    0x00014000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000040 memsz 0x00000040 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000000  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000188  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .interrupt_handler_section 00000040  10000000  10000000  00014000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text         0000f664  000001a8  000001a8  000011a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000f70  0000f80c  0000f80c  0001080c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .rwdata       00001c00  0001077c  0001077c  0001177c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  6 .bss          00000280  0001237c  0001237c  0001337c  2**2
                  ALLOC, SMALL_DATA
  7 .sdram        00000000  000125fc  000125fc  00014040  2**0
                  CONTENTS
  8 .instruction_tcm 00000000  10000040  10000040  00014040  2**0
                  CONTENTS
  9 .comment      0000002d  00000000  00000000  00014040  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 000010e8  00000000  00000000  00014070  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_info   0002f619  00000000  00000000  00015158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev 0000c316  00000000  00000000  00044771  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line   000183e4  00000000  00000000  00050a87  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_frame  00002124  00000000  00000000  00068e6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00004113  00000000  00000000  0006af90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_loc    00020c92  00000000  00000000  0006f0a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_alt_sim_info 00000020  00000000  00000000  0008fd38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_ranges 000028d8  00000000  00000000  0008fd58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  00095ba1  2**0
                  CONTENTS, READONLY
 20 .cpu          00000003  00000000  00000000  00095ba4  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  00095ba7  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  00095ba8  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  00095ba9  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  00095bad  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  00095bb1  2**0
                  CONTENTS, READONLY
 26 .profiling_enabled 00000001  00000000  00000000  00095bb5  2**0
                  CONTENTS, READONLY
 27 .stderr_dev   00000009  00000000  00000000  00095bb6  2**0
                  CONTENTS, READONLY
 28 .stdin_dev    00000009  00000000  00000000  00095bbf  2**0
                  CONTENTS, READONLY
 29 .stdout_dev   00000009  00000000  00000000  00095bc8  2**0
                  CONTENTS, READONLY
 30 .sopc_system_name 00000006  00000000  00000000  00095bd1  2**0
                  CONTENTS, READONLY
 31 .quartus_project_dir 00000030  00000000  00000000  00095bd7  2**0
                  CONTENTS, READONLY
 32 .jdi          0000440b  00000000  00000000  00095c07  2**0
                  CONTENTS, READONLY
 33 .sopcinfo     0006a5e8  00000000  00000000  0009a012  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
10000000 l    d  .interrupt_handler_section	00000000 .interrupt_handler_section
000001a8 l    d  .text	00000000 .text
0000f80c l    d  .rodata	00000000 .rodata
0001077c l    d  .rwdata	00000000 .rwdata
0001237c l    d  .bss	00000000 .bss
000125fc l    d  .sdram	00000000 .sdram
10000040 l    d  .instruction_tcm	00000000 .instruction_tcm
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../niosII_training_bsp//obj/HAL/src/crt0.o
000001ec l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 simple.c
10000000 l     F .interrupt_handler_section	00000034 handle_button_interrupts
00000000 l    df *ABS*	00000000 specs.c
00000000 l    df *ABS*	00000000 specs.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
0001077c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00002938 l     F .text	000000cc __sbprintf
00010094 l     O .rodata	00000010 blanks.1
00010084 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 dtoa.c
00002ca0 l     F .text	00000208 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0000492c l     F .text	00000014 __fp_lock
00004958 l     F .text	00000014 __fp_unlock
0000496c l     F .text	00000174 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00010148 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007edc l     F .text	00000100 __sprint_r.part.0
00009368 l     F .text	000000cc __sbprintf
0001027c l     O .rodata	00000010 blanks.1
0001026c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00009658 l     F .text	000000cc _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000dae0 l     F .text	00000014 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_gmon.c
0000dbd0 l     F .text	00000048 nios2_pcsample
0001239c l     O .bss	00000004 s_pcsamples
00012368 l     O .rwdata	00000004 pcsample_need_init
00012394 l     O .bss	00000004 mcount_slab_size
00012398 l     O .bss	00000004 mcount_slab_ptr
000123e4 l     O .bss	00000018 s_nios2_pcsample_alarm
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
00000000 l    df *ABS*	00000000 alt_kill.c
00000000 l    df *ABS*	00000000 alt_lseek.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00012370 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
000112e0 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000e6ac l     F .text	00000054 altera_avalon_jtag_uart_timeout
0000e700 l     F .text	00000114 altera_avalon_jtag_uart_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000ec78 l     F .text	00000048 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 perf_print_formatted_report.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 altera_avalon_performance_counter.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 libgcc2.c
000123b8 g     O .bss	00000004 alt_instruction_exception_handler
0000761c g     F .text	0000007c _mprec_log10
00007720 g     F .text	0000006c __any_on
00009b1c g     F .text	00000064 _isatty_r
00010154 g     O .rodata	00000028 __mprec_tinytens
0000e120 g     F .text	0000006c alt_main
00000678 g     F .text	000000d8 _puts_r
000124fc g     O .bss	00000100 alt_irq
00009c98 g     F .text	00000070 _lseek_r
0000c594 g     F .text	0000008c .hidden __eqdf2
000125fc g       *ABS*	00000000 __alt_heap_start
0000a6f4 g     F .text	0000006c _kill_r
00000634 g     F .text	00000044 printf
0000a024 g     F .text	00000078 _wcrtomb_r
0000a210 g     F .text	000000a4 _signal_r
00007e60 g     F .text	00000068 __sseek
00004cd4 g     F .text	0000001c __sinit
0000f4b0 g     F .text	00000018 alt_get_cpu_freq
00009eac g     F .text	00000154 __swbuf_r
00009b80 g     F .text	00000080 _setlocale_r
00004ae0 g     F .text	00000074 __sfmoreglue
0000e19c g     F .text	00000010 __malloc_unlock
00006324 g     F .text	00000130 memmove
0000ed14 g     F .text	000001f8 perf_print_formatted_report
00004cb4 g     F .text	00000020 _cleanup
00006550 g     F .text	000000b0 _Balloc
0000c620 g     F .text	000000f4 .hidden __gtdf2
0000f418 g     F .text	00000014 altera_nios2_gen2_irq_init
10000000 g       *ABS*	00000000 __alt_mem_instruction_tcm
00000000 g     F .entry	00000000 __reset
000057bc g     F .text	00000014 __localeconv_l
0001237c g     O .bss	00000004 edge_capture
00009ab0 g     F .text	0000006c _fstat_r
0001238c g     O .bss	00000004 errno
00007dc0 g     F .text	00000014 __seofread
000123a8 g     O .bss	00000004 alt_argv
0001a340 g       *ABS*	00000000 _gp
0000dbbc g     F .text	00000014 getpid
00011114 g     O .rwdata	00000180 alt_fd_list
0000f4c8 g     F .text	00000084 alt_find_dev
000004ec g     F .text	0000010c memcpy
00004940 g     F .text	00000018 _cleanup_r
0000d834 g     F .text	000000c4 .hidden __floatsidf
0000f190 g     F .text	0000011c alt_io_redirect
0000c714 g     F .text	000000f4 .hidden __ltdf2
0000f80c g       *ABS*	00000000 __DTOR_END__
00000750 g     F .text	0000001c puts
0000f114 g     F .text	0000007c alt_exception_cause_generated_bad_addr
00007568 g     F .text	000000b4 __ratio
00009340 g     F .text	00000028 __vfiprintf_internal
0000e978 g     F .text	00000150 altera_avalon_jtag_uart_read
000005f8 g     F .text	0000003c _printf_r
0000b358 g     F .text	00000070 .hidden __udivsi3
0000df00 g     F .text	00000090 isatty
0000a2b4 g     F .text	000000d0 _raise_r
00009508 g     F .text	00000070 __assert_func
000101a4 g     O .rodata	000000c8 __mprec_tens
0000f0b8 g     F .text	0000005c alt_icache_flush
00012388 g     O .bss	00000004 __malloc_top_pad
0000a760 g     F .text	00000010 _getpid_r
0000f478 g     F .text	00000020 perf_get_num_starts
000057d0 g     F .text	00000018 _localeconv_r
000069e4 g     F .text	000000bc __i2b
000051a0 g     F .text	000004c4 __sfvwrite_r
0000a384 g     F .text	000000c8 __sigtramp_r
00007cfc g     F .text	00000064 _sbrk_r
00009d70 g     F .text	00000070 _read_r
00012350 g     O .rwdata	00000004 alt_max_fd
00009724 g     F .text	0000007c _fclose_r
0000489c g     F .text	00000090 fflush
00012384 g     O .bss	00000004 __malloc_max_sbrked_mem
0000b430 g     F .text	000008fc .hidden __adddf3
000072e4 g     F .text	00000114 __b2d
0000ad0c g     F .text	00000540 .hidden __umoddi3
0000e09c g     F .text	00000084 lseek
00012340 g     O .rwdata	00000004 _global_impure_ptr
0000778c g     F .text	00000570 _realloc_r
000125fc g       *ABS*	00000000 __bss_end
0000de8c g     F .text	00000074 alt_iic_isr_register
0000e3d8 g     F .text	00000100 alt_tick
0000a770 g     F .text	0000059c .hidden __udivdi3
000099fc g     F .text	00000030 _fputwc_r
0001017c g     O .rodata	00000028 __mprec_bigtens
00006774 g     F .text	00000144 __s2b
0000a184 g     F .text	00000024 abort
0000d8f8 g     F .text	0000009c .hidden __floatunsidf
00006fe8 g     F .text	00000060 __mcmp
00004d30 g     F .text	00000020 __fp_lock_all
0000de68 g     F .text	00000024 alt_ic_irq_enabled
0000e39c g     F .text	0000003c alt_alarm_stop
000123a0 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	00000074 alt_irq_handler
00011294 g     O .rwdata	00000028 alt_dev_null
0000dabc g     F .text	00000024 alt_dcache_flush_all
000068b8 g     F .text	00000070 __hi0bits
0000d7a8 g     F .text	0000008c .hidden __fixdfsi
000001a8 g       *ABS*	00000000 stext
0000dc18 g     F .text	000001a0 __mcount_record
00012354 g     O .rwdata	00000008 alt_dev_list
0000e4d8 g     F .text	000000d4 write
0000db38 g     F .text	00000084 fstat
0000df90 g     F .text	0000010c kill
0000c714 g     F .text	000000f4 .hidden __ledf2
00006d00 g     F .text	00000154 __pow5mult
00008000 g     F .text	00001340 ___vfiprintf_internal_r
0000b3c8 g     F .text	00000068 .hidden __umodsi3
000125fc g       *ABS*	00000000 end
0000e814 g     F .text	00000084 altera_avalon_jtag_uart_init
00000170 g     F .exceptions	00000038 alt_instruction_exception_entry
0000f80c g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0000ecc0 g     F .text	00000054 alt_avalon_timer_sc_init
0000d994 g     F .text	00000060 .hidden __clzsi2
0000eac8 g     F .text	000001b0 altera_avalon_jtag_uart_write
00004cf0 g     F .text	00000010 __sfp_lock_acquire
0000f80c g       *ABS*	00000000 etext
0000624c g     F .text	000000d8 memchr
00000810 g     F .text	00002100 ___vfprintf_internal_r
00004e98 g     F .text	00000308 _free_r
000103e0 g     O .rodata	00000180 _ctype_b
00009c00 g     F .text	00000018 __locale_mb_cur_max
00002b74 g     F .text	0000012c __call_exitprocs
00012348 g     O .rwdata	00000004 __malloc_sbrk_base
000001a8 g     F .text	00000048 _start
000123b4 g     O .bss	00000004 _alt_tick_rate
0000f790 g     F .text	0000007c .hidden __floatundidf
00006e54 g     F .text	00000194 __lshift
000123b0 g     O .bss	00000004 _alt_nticks
0000a514 g     F .text	000000ac signal
0000e248 g     F .text	000000d8 read
0000e5d8 g     F .text	00000068 alt_sys_init
0000f6f4 g     F .text	0000009c __register_exitproc
000112bc g     O .rwdata	00000024 alt_gmon_data
00006aa0 g     F .text	00000260 __multiply
0000e1ac g       .text	00000000 mcount
0000e898 g     F .text	00000054 altera_avalon_jtag_uart_close
000123bc g     O .bss	00000028 __malloc_current_mallinfo
000073f8 g     F .text	00000170 __d2b
0000e640 g     F .text	0000001c altera_avalon_jtag_uart_read_fd
0000f5f4 g     F .text	0000005c alt_get_fd
000094a4 g     F .text	00000064 _close_r
0000f42c g     F .text	00000030 perf_get_section_time
0000f670 g     F .text	00000084 memcmp
0000e678 g     F .text	0000001c altera_avalon_jtag_uart_close_fd
000125fc g       *ABS*	00000000 __alt_stack_base
0000e694 g     F .text	00000018 altera_avalon_jtag_uart_ioctl_fd
00002a04 g     F .text	00000170 __swsetup_r
0000bd2c g     F .text	00000868 .hidden __divdf3
00004b54 g     F .text	00000160 __sfp
00007698 g     F .text	00000088 __copybits
0000f45c g     F .text	0000001c perf_get_total_time
00010ba0 g     O .rwdata	00000408 __malloc_av_
00004d20 g     F .text	00000010 __sinit_lock_release
0000c808 g     F .text	00000680 .hidden __muldf3
00007d60 g     F .text	00000060 __sread
0000f54c g     F .text	000000a8 alt_find_file
0000ef98 g     F .text	00000078 alt_dev_llist_insert
0000e18c g     F .text	00000010 __malloc_lock
0000e350 g     F .text	0000004c sbrk
00004830 g     F .text	0000006c _fflush_r
00009598 g     F .text	000000c0 _calloc_r
0001237c g       *ABS*	00000000 __bss_start
00006454 g     F .text	000000fc memset
000002f8 g     F .text	000001b4 main
00000238 g     F .text	000000c0 same_adjacent4x
000123a4 g     O .bss	00000004 alt_envp
00012380 g     O .bss	00000004 __malloc_max_total_mem
0000e65c g     F .text	0000001c altera_avalon_jtag_uart_write_fd
0000a000 g     F .text	00000024 __swbuf
00007ec8 g     F .text	00000014 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
000097a0 g     F .text	0000007c fclose
00002ea8 g     F .text	00001754 _dtoa_r
00005a60 g     F .text	000007ec _malloc_r
0000a148 g     F .text	0000003c __ascii_wctomb
00012364 g     O .rwdata	00000004 alt_errno
0000981c g     F .text	0000002c _fiprintf_r
0000a5c0 g     F .text	0000006c _init_signal
00005664 g     F .text	000000a4 _fwalk
00009d08 g     F .text	00000018 _mbtowc_r
0000b24c g     F .text	0000008c .hidden __divsi3
00004d70 g     F .text	00000128 _malloc_trim_r
0000f80c g       *ABS*	00000000 __CTOR_END__
00009de0 g     F .text	000000bc strcmp
0000f80c g       *ABS*	00000000 __DTOR_LIST__
000001f0 g     F .text	00000048 same_adjacent
0000c594 g     F .text	0000008c .hidden __nedf2
0000e5ac g     F .text	0000002c alt_irq_init
0000e320 g     F .text	00000030 alt_release_fd
00010560 g     O .rodata	00000100 .hidden __clz_tab
00012390 g     O .bss	00000004 _PathLocale
0000f650 g     F .text	00000020 atexit
00009434 g     F .text	00000070 _write_r
00009c18 g     F .text	00000080 setlocale
00012344 g     O .rwdata	00000004 _impure_ptr
000123ac g     O .bss	00000004 alt_argc
000045fc g     F .text	00000234 __sflush_r
0000f064 g     F .text	00000054 _do_dtors
00000020 g       .exceptions	00000000 alt_irq_entry
00009d20 g     F .text	00000050 __ascii_mbtowc
00007280 g     F .text	00000064 __ulp
00004d50 g     F .text	00000020 __fp_unlock_all
0001235c g     O .rwdata	00000008 alt_fs_list
000057e8 g     F .text	00000018 localeconv
000059bc g     F .text	000000a4 __swhatbuf_r
0000ddd0 g     F .text	00000010 alt_ic_isr_register
0001237c g       *ABS*	00000000 _edata
000125fc g       *ABS*	00000000 _end
0000988c g     F .text	00000170 __fputwc
0000e8ec g     F .text	0000008c altera_avalon_jtag_uart_ioctl
0000de24 g     F .text	00000044 alt_ic_irq_disable
00007dd4 g     F .text	0000008c __swrite
0001234c g     O .rwdata	00000004 __malloc_trim_threshold
0000f498 g     F .text	00000018 alt_get_performance_counter_base
000004ac g     F .text	00000040 exit
00009848 g     F .text	00000044 fiprintf
00009e9c g     F .text	00000010 _vfiprintf_r
00005708 g     F .text	000000b4 _fwalk_reent
00007048 g     F .text	00000238 __mdiff
0000b2d8 g     F .text	00000080 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004d00 g     F .text	00000010 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
000102dc g     O .rodata	00000101 _ctype_
0000d748 g     F .text	00000060 .hidden __unorddf2
0000daf4 g     F .text	00000044 _exit
0000ef0c g     F .text	0000008c alt_alarm_start
000123fc g     O .bss	00000100 __mcount_fn_head
00005800 g     F .text	000001bc __smakebuf_r
0000076c g     F .text	000000a4 strlen
0000a1a8 g     F .text	00000068 _init_signal_r
0000f2ac g     F .text	0000016c open
0000c620 g     F .text	000000f4 .hidden __gedf2
00009578 g     F .text	00000020 __assert
00007fdc g     F .text	00000024 __sprint_r
0000ddb8 g     F .text	00000018 alt_icache_flush_all
0001236c g     O .rwdata	00000004 alt_priority_mask
0000dde0 g     F .text	00000044 alt_ic_irq_enable
00002910 g     F .text	00000028 __vfprintf_internal
0000a130 g     F .text	00000018 _wctomb_r
0000ce88 g     F .text	000008c0 .hidden __subdf3
00006928 g     F .text	000000bc __lo0bits
0000e1ac g       .text	00000000 _mcount
00012374 g     O .rwdata	00000008 alt_alarm_list
0000f010 g     F .text	00000054 _do_ctors
0000a62c g     F .text	000000c8 __sigtramp
0000a09c g     F .text	00000094 wcrtomb
0000d9f4 g     F .text	000000c8 close
00010fa8 g     O .rwdata	0000016c __global_locale
00009a2c g     F .text	00000084 fputwc
0000a44c g     F .text	000000c8 raise
00004d10 g     F .text	00000010 __sinit_lock_acquire
00006630 g     F .text	00000144 __multadd
00006600 g     F .text	00000030 _Bfree



Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001700 	call	170 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	f811883a 	mov	r8,ra
 100:	000e1ac0 	call	e1ac <_mcount>
 104:	403f883a 	mov	ra,r8
 108:	defffe04 	addi	sp,sp,-8
 10c:	dfc00115 	stw	ra,4(sp)
 110:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 114:	000b313a 	rdctl	r5,ipending

  return active;
 118:	04000074 	movhi	r16,1
 11c:	84093f04 	addi	r16,r16,9468
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 120:	28c0004c 	andi	r3,r5,1
    mask = 1;
 124:	00800044 	movi	r2,1
      if (active & mask)
 128:	18000f1e 	bne	r3,zero,168 <alt_irq_handler+0x6c>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 12c:	1085883a 	add	r2,r2,r2
      if (active & mask)
 130:	2888703a 	and	r4,r5,r2
      i++;
 134:	18c00044 	addi	r3,r3,1
      if (active & mask)
 138:	203ffc26 	beq	r4,zero,12c <alt_irq_handler+0x30>
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	180690fa 	slli	r3,r3,3
 140:	80c7883a 	add	r3,r16,r3
 144:	18800017 	ldw	r2,0(r3)
 148:	19000117 	ldw	r4,4(r3)
 14c:	103ee83a 	callr	r2
  NIOS2_READ_IPENDING (active);
 150:	000b313a 	rdctl	r5,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
 154:	283ff21e 	bne	r5,zero,120 <alt_irq_handler+0x24>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 158:	dfc00117 	ldw	ra,4(sp)
 15c:	dc000017 	ldw	r16,0(sp)
 160:	dec00204 	addi	sp,sp,8
 164:	f800283a 	ret
    i = 0;
 168:	0007883a 	mov	r3,zero
 16c:	003ff306 	br	13c <alt_irq_handler+0x40>

00000170 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 170:	f811883a 	mov	r8,ra
 174:	000e1ac0 	call	e1ac <_mcount>
 178:	403f883a 	mov	ra,r8
 17c:	200b883a 	mov	r5,r4
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 180:	000931fa 	rdctl	r4,exception
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 184:	000d333a 	rdctl	r6,badaddr
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 188:	d0a01e17 	ldw	r2,-32648(gp)
 18c:	10000326 	beq	r2,zero,19c <alt_instruction_exception_entry+0x2c>
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 190:	2008d0ba 	srli	r4,r4,2
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 194:	210007cc 	andi	r4,r4,31
 198:	1000683a 	jmp	r2
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 19c:	003da03a 	break	0
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
}
 1a0:	0005883a 	mov	r2,zero
 1a4:	f800283a 	ret

Disassembly of section .interrupt_handler_section:

10000000 <handle_button_interrupts>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void handle_button_interrupts(void* context)
#else
static void handle_button_interrupts(void* context, alt_u32 id)
#endif
{
10000000:	f811883a 	mov	r8,ra
10000004:	00000340 	call	10000034 <handle_button_interrupts+0x34>
10000008:	403f883a 	mov	ra,r8
PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 1);
1000000c:	00820034 	movhi	r2,2048
10000010:	10040535 	stwio	zero,4116(r2)
/*
* Read the edge capture register on the button PIO.
* Store value.
*/
*edge_capture_ptr =
IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTONS_BASE);
10000014:	10841b37 	ldwio	r2,4204(r2)
*edge_capture_ptr =
10000018:	20800015 	stw	r2,0(r4)
/* Write to the edge capture register to reset it. */
IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTONS_BASE, 0);
1000001c:	00820034 	movhi	r2,2048
10000020:	10041b35 	stwio	zero,4204(r2)
/* Read the PIO to delay ISR exit. This is done to prevent a
spurious interrupt in systems with high processor -> pio
latency and fast interrupts. */
IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTONS_BASE);
10000024:	10841b37 	ldwio	r2,4204(r2)
PERF_END(PERFORMANCE_COUNTER_0_BASE, 1);
10000028:	00820034 	movhi	r2,2048
1000002c:	10040435 	stwio	zero,4112(r2)
}
10000030:	f800283a 	ret
10000034:	00400074 	movhi	at,1
10000038:	08786b04 	addi	at,at,-7764
1000003c:	0800683a 	jmp	at

Disassembly of section .text:

000001a8 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
     1a8:	00840014 	movui	r2,4096
#endif

0:
    initd 0(r2)
     1ac:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
     1b0:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
     1b4:	00bffd16 	blt	zero,r2,1ac <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1b8:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
     1bc:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     1c0:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1c4:	d6a8d014 	ori	gp,gp,41792
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1c8:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1cc:	1088df14 	ori	r2,r2,9084

    movhi r3, %hi(__bss_end)
     1d0:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1d4:	18c97f14 	ori	r3,r3,9724

    beq r2, r3, 1f
     1d8:	10c00326 	beq	r2,r3,1e8 <_start+0x40>

0:
    stw zero, (r2)
     1dc:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1e0:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1e4:	10fffd36 	bltu	r2,r3,1dc <_start+0x34>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1e8:	000e1200 	call	e120 <alt_main>

000001ec <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1ec:	003fff06 	br	1ec <alt_after_alt_main>

000001f0 <same_adjacent>:
#else
alt_irq_register( BUTTON_PIO_IRQ, edge_capture_ptr, handle_button_interrupts );
#endif
}

int same_adjacent(int* array, int size){
     1f0:	f811883a 	mov	r8,ra
     1f4:	000e1ac0 	call	e1ac <_mcount>
     1f8:	403f883a 	mov	ra,r8
	for(int i = 0; i < size - 1; i++){
     1fc:	297fffc4 	addi	r5,r5,-1
     200:	01400b0e 	bge	zero,r5,230 <same_adjacent+0x40>
     204:	20c00017 	ldw	r3,0(r4)
     208:	0005883a 	mov	r2,zero
     20c:	21000104 	addi	r4,r4,4
     210:	00000206 	br	21c <same_adjacent+0x2c>
     214:	10800044 	addi	r2,r2,1
     218:	11400526 	beq	r2,r5,230 <same_adjacent+0x40>
     21c:	180d883a 	mov	r6,r3
		if(array[i] == array[i+1]){
     220:	20c00017 	ldw	r3,0(r4)
	for(int i = 0; i < size - 1; i++){
     224:	21000104 	addi	r4,r4,4
		if(array[i] == array[i+1]){
     228:	19bffa1e 	bne	r3,r6,214 <same_adjacent+0x24>
			return i;
		}
	}
	return -1;
}
     22c:	f800283a 	ret
	return -1;
     230:	00bfffc4 	movi	r2,-1
}
     234:	f800283a 	ret

00000238 <same_adjacent4x>:

int same_adjacent4x(int* array, int size){
     238:	f811883a 	mov	r8,ra
     23c:	000e1ac0 	call	e1ac <_mcount>
     240:	403f883a 	mov	ra,r8
	int limlong = size >> 2;
     244:	2813d0ba 	srai	r9,r5,2
	int limshort = size - (size & 0x03);
	for(int i = 0; i < limlong; i++){
     248:	0240120e 	bge	zero,r9,294 <same_adjacent4x+0x5c>
     24c:	481290ba 	slli	r9,r9,2
     250:	2007883a 	mov	r3,r4
     254:	000d883a 	mov	r6,zero
     258:	00000806 	br	27c <same_adjacent4x+0x44>
		int j = i * 4;
		if(array[j] == array[j + 1]) return j;
		if(array[j + 1] == array[j + 2]) return j + 1;
     25c:	1a000217 	ldw	r8,8(r3)
     260:	3a001f26 	beq	r7,r8,2e0 <same_adjacent4x+0xa8>
		if(array[j + 2] == array[j + 3]) return j + 2;
     264:	19c00317 	ldw	r7,12(r3)
     268:	41c01f26 	beq	r8,r7,2e8 <same_adjacent4x+0xb0>
		if(array[j + 3] == array[j + 4]) return j + 3;
     26c:	1a000417 	ldw	r8,16(r3)
	for(int i = 0; i < limlong; i++){
     270:	18c00404 	addi	r3,r3,16
		if(array[j + 3] == array[j + 4]) return j + 3;
     274:	3a001e26 	beq	r7,r8,2f0 <same_adjacent4x+0xb8>
	for(int i = 0; i < limlong; i++){
     278:	32400626 	beq	r6,r9,294 <same_adjacent4x+0x5c>
		if(array[j] == array[j + 1]) return j;
     27c:	19c00117 	ldw	r7,4(r3)
     280:	1a000017 	ldw	r8,0(r3)
		int j = i * 4;
     284:	3005883a 	mov	r2,r6
	for(int i = 0; i < limlong; i++){
     288:	31800104 	addi	r6,r6,4
		if(array[j] == array[j + 1]) return j;
     28c:	41fff31e 	bne	r8,r7,25c <same_adjacent4x+0x24>
	}
	for(int i = limshort; i < size - 1; i++){
		if(array[i] == array[i + 1]) return i;
	}
	return -1;
}
     290:	f800283a 	ret
	int limshort = size - (size & 0x03);
     294:	00bfff04 	movi	r2,-4
     298:	2884703a 	and	r2,r5,r2
	for(int i = limshort; i < size - 1; i++){
     29c:	297fffc4 	addi	r5,r5,-1
     2a0:	11400d0e 	bge	r2,r5,2d8 <same_adjacent4x+0xa0>
     2a4:	100690ba 	slli	r3,r2,2
     2a8:	20cd883a 	add	r6,r4,r3
     2ac:	18c00104 	addi	r3,r3,4
     2b0:	31800017 	ldw	r6,0(r6)
     2b4:	20c7883a 	add	r3,r4,r3
     2b8:	00000206 	br	2c4 <same_adjacent4x+0x8c>
     2bc:	10800044 	addi	r2,r2,1
     2c0:	28800526 	beq	r5,r2,2d8 <same_adjacent4x+0xa0>
     2c4:	3009883a 	mov	r4,r6
		if(array[i] == array[i + 1]) return i;
     2c8:	19800017 	ldw	r6,0(r3)
	for(int i = limshort; i < size - 1; i++){
     2cc:	18c00104 	addi	r3,r3,4
		if(array[i] == array[i + 1]) return i;
     2d0:	313ffa1e 	bne	r6,r4,2bc <same_adjacent4x+0x84>
}
     2d4:	f800283a 	ret
	return -1;
     2d8:	00bfffc4 	movi	r2,-1
}
     2dc:	f800283a 	ret
		if(array[j + 1] == array[j + 2]) return j + 1;
     2e0:	10800044 	addi	r2,r2,1
}
     2e4:	f800283a 	ret
		if(array[j + 2] == array[j + 3]) return j + 2;
     2e8:	10800084 	addi	r2,r2,2
}
     2ec:	f800283a 	ret
		if(array[j + 3] == array[j + 4]) return j + 3;
     2f0:	108000c4 	addi	r2,r2,3
}
     2f4:	f800283a 	ret

000002f8 <main>:




int main(void)
{
     2f8:	f811883a 	mov	r8,ra
     2fc:	000e1ac0 	call	e1ac <_mcount>
     300:	403f883a 	mov	ra,r8
     304:	defdfe04 	addi	sp,sp,-2056
     308:	dfc20115 	stw	ra,2052(sp)
     30c:	dc020015 	stw	r16,2048(sp)
	int arr[510] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 508};
     310:	01400074 	movhi	r5,1
     314:	0181fe04 	movi	r6,2040
     318:	297e1104 	addi	r5,r5,-1980
     31c:	d9000204 	addi	r4,sp,8
     320:	00004ec0 	call	4ec <memcpy>
	alt_icache_flush_all();
     324:	000ddb80 	call	ddb8 <alt_icache_flush_all>
	alt_dcache_flush_all();
     328:	000dabc0 	call	dabc <alt_dcache_flush_all>
	int buttons;  // Use to hold button pressed value
	int led = 0x01;  // Use to write to led
	int number_of_runs = 10;

	int accumulator = 0;
	printf("Simple\n");   // print a message to show that program is running
     32c:	01000074 	movhi	r4,1
     330:	213e0304 	addi	r4,r4,-2036
     334:	00007500 	call	750 <puts>

	IOWR_ALTERA_AVALON_PIO_DATA(GREEN_LED_BASE,led); // write initial value to pio
     338:	04000044 	movi	r16,1
     33c:	00820034 	movhi	r2,2048
     340:	14041c35 	stwio	r16,4208(r2)
IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTONS_BASE, 0xf);
     344:	00c003c4 	movi	r3,15
     348:	10c41a35 	stwio	r3,4200(r2)
IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTONS_BASE, 0x0);
     34c:	10041b35 	stwio	zero,4204(r2)
alt_ic_isr_register(BUTTONS_IRQ_INTERRUPT_CONTROLLER_ID, BUTTONS_IRQ, handle_button_interrupts, edge_capture_ptr, 0x0);
     350:	01840034 	movhi	r6,4096
     354:	d8000015 	stw	zero,0(sp)
     358:	d1e00f04 	addi	r7,gp,-32708
     35c:	31800004 	addi	r6,r6,0
     360:	01400084 	movi	r5,2
     364:	0009883a 	mov	r4,zero
     368:	000ddd00 	call	ddd0 <alt_ic_isr_register>
	init_button_pio();

	PERF_RESET(PERFORMANCE_COUNTER_0_BASE);
     36c:	00820034 	movhi	r2,2048
     370:	14040035 	stwio	r16,4096(r2)
	PERF_START_MEASURING (PERFORMANCE_COUNTER_0_BASE);
     374:	10040135 	stwio	zero,4100(r2)
     378:	01c01904 	movi	r7,100
	int accumulator = 0;
     37c:	000b883a 	mov	r5,zero
	for(int i = 0; i < 100; i++){
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 2);
     380:	00820034 	movhi	r2,2048
     384:	10040935 	stwio	zero,4132(r2)
     388:	d9000304 	addi	r4,sp,12
     38c:	0007883a 	mov	r3,zero
	for(int i = 0; i < size - 1; i++){
     390:	0005883a 	mov	r2,zero
		if(array[i] == array[i+1]){
     394:	180d883a 	mov	r6,r3
     398:	20c00017 	ldw	r3,0(r4)
     39c:	19800526 	beq	r3,r6,3b4 <main+0xbc>
	for(int i = 0; i < size - 1; i++){
     3a0:	10800044 	addi	r2,r2,1
     3a4:	11807f58 	cmpnei	r6,r2,509
     3a8:	21000104 	addi	r4,r4,4
     3ac:	303ff91e 	bne	r6,zero,394 <main+0x9c>
	return -1;
     3b0:	00bfffc4 	movi	r2,-1
		accumulator += same_adjacent(arr, ARRAY_SIZE);
     3b4:	288b883a 	add	r5,r5,r2
		PERF_END(PERFORMANCE_COUNTER_0_BASE, 2);
     3b8:	00820034 	movhi	r2,2048
     3bc:	10040835 	stwio	zero,4128(r2)
	for(int i = 0; i < 100; i++){
     3c0:	39ffffc4 	addi	r7,r7,-1
     3c4:	383fee1e 	bne	r7,zero,380 <main+0x88>
	}
	printf("%d\n", accumulator);
     3c8:	01000074 	movhi	r4,1
     3cc:	213e0504 	addi	r4,r4,-2028
     3d0:	00006340 	call	634 <printf>
	alt_icache_flush_all();
     3d4:	000ddb80 	call	ddb8 <alt_icache_flush_all>
	alt_dcache_flush_all();
     3d8:	000dabc0 	call	dabc <alt_dcache_flush_all>
     3dc:	02001904 	movi	r8,100
	accumulator = 0;
     3e0:	000b883a 	mov	r5,zero
     3e4:	d9c1ff04 	addi	r7,sp,2044
	for(int i = 0; i < 100; i++){
		PERF_BEGIN(PERFORMANCE_COUNTER_0_BASE, 3);
     3e8:	00820034 	movhi	r2,2048
     3ec:	10040d35 	stwio	zero,4148(r2)
     3f0:	d8800304 	addi	r2,sp,12
     3f4:	0007883a 	mov	r3,zero
     3f8:	000d883a 	mov	r6,zero
		if(array[j] == array[j + 1]) return j;
     3fc:	11000017 	ldw	r4,0(r2)
     400:	31000a26 	beq	r6,r4,42c <main+0x134>
		if(array[j + 1] == array[j + 2]) return j + 1;
     404:	11800117 	ldw	r6,4(r2)
     408:	21802226 	beq	r4,r6,494 <main+0x19c>
		if(array[j + 2] == array[j + 3]) return j + 2;
     40c:	11000217 	ldw	r4,8(r2)
     410:	31002226 	beq	r6,r4,49c <main+0x1a4>
		if(array[j + 3] == array[j + 4]) return j + 3;
     414:	11800317 	ldw	r6,12(r2)
     418:	21802226 	beq	r4,r6,4a4 <main+0x1ac>
	for(int i = 0; i < limlong; i++){
     41c:	10800404 	addi	r2,r2,16
     420:	18c00104 	addi	r3,r3,4
     424:	38bff51e 	bne	r7,r2,3fc <main+0x104>
     428:	00c07f04 	movi	r3,508
		accumulator += same_adjacent4x(arr, ARRAY_SIZE);
     42c:	28cb883a 	add	r5,r5,r3
		PERF_END(PERFORMANCE_COUNTER_0_BASE, 3);
     430:	00820034 	movhi	r2,2048
     434:	10040c35 	stwio	zero,4144(r2)
	for(int i = 0; i < 100; i++){
     438:	423fffc4 	addi	r8,r8,-1
     43c:	403fea1e 	bne	r8,zero,3e8 <main+0xf0>
	}
	printf("%d\n", accumulator);
     440:	01000074 	movhi	r4,1
     444:	213e0504 	addi	r4,r4,-2028
     448:	00006340 	call	634 <printf>

	PERF_STOP_MEASURING(PERFORMANCE_COUNTER_0_BASE);
     44c:	00820034 	movhi	r2,2048
     450:	10040035 	stwio	zero,4096(r2)
	perf_print_formatted_report(PERFORMANCE_COUNTER_0_BASE, ALT_CPU_FREQ, 3, "interrupt", "same_adjacent", "same_adjacent4x");
     454:	00c00074 	movhi	r3,1
     458:	00800074 	movhi	r2,1
     45c:	18fe0904 	addi	r3,r3,-2012
     460:	10be0d04 	addi	r2,r2,-1996
     464:	01c00074 	movhi	r7,1
     468:	0140bef4 	movhi	r5,763
     46c:	01020034 	movhi	r4,2048
     470:	21040004 	addi	r4,r4,4096
     474:	d8c00115 	stw	r3,4(sp)
     478:	d8800015 	stw	r2,0(sp)
     47c:	39fe0604 	addi	r7,r7,-2024
     480:	018000c4 	movi	r6,3
     484:	297c2004 	addi	r5,r5,-3968
     488:	000ed140 	call	ed14 <perf_print_formatted_report>

	exit(0);
     48c:	0009883a 	mov	r4,zero
     490:	00004ac0 	call	4ac <exit>
		if(array[j + 1] == array[j + 2]) return j + 1;
     494:	18c00044 	addi	r3,r3,1
     498:	003fe406 	br	42c <main+0x134>
		if(array[j + 2] == array[j + 3]) return j + 2;
     49c:	18c00084 	addi	r3,r3,2
     4a0:	003fe206 	br	42c <main+0x134>
		if(array[j + 3] == array[j + 4]) return j + 3;
     4a4:	18c000c4 	addi	r3,r3,3
     4a8:	003fe006 	br	42c <main+0x134>

000004ac <exit>:
     4ac:	f811883a 	mov	r8,ra
     4b0:	000e1ac0 	call	e1ac <_mcount>
     4b4:	403f883a 	mov	ra,r8
     4b8:	defffe04 	addi	sp,sp,-8
     4bc:	dfc00115 	stw	ra,4(sp)
     4c0:	dc000015 	stw	r16,0(sp)
     4c4:	000b883a 	mov	r5,zero
     4c8:	2021883a 	mov	r16,r4
     4cc:	0002b740 	call	2b74 <__call_exitprocs>
     4d0:	00800074 	movhi	r2,1
     4d4:	1108d017 	ldw	r4,9024(r2)
     4d8:	20800f17 	ldw	r2,60(r4)
     4dc:	10000126 	beq	r2,zero,4e4 <exit+0x38>
     4e0:	103ee83a 	callr	r2
     4e4:	8009883a 	mov	r4,r16
     4e8:	000daf40 	call	daf4 <_exit>

000004ec <memcpy>:
     4ec:	f811883a 	mov	r8,ra
     4f0:	000e1ac0 	call	e1ac <_mcount>
     4f4:	403f883a 	mov	ra,r8
     4f8:	30c00430 	cmpltui	r3,r6,16
     4fc:	2005883a 	mov	r2,r4
     500:	18002d1e 	bne	r3,zero,5b8 <memcpy+0xcc>
     504:	2906b03a 	or	r3,r5,r4
     508:	18c000cc 	andi	r3,r3,3
     50c:	1800351e 	bne	r3,zero,5e4 <memcpy+0xf8>
     510:	32fffc04 	addi	r11,r6,-16
     514:	5816d13a 	srli	r11,r11,4
     518:	280f883a 	mov	r7,r5
     51c:	2007883a 	mov	r3,r4
     520:	5ac00044 	addi	r11,r11,1
     524:	5816913a 	slli	r11,r11,4
     528:	22d5883a 	add	r10,r4,r11
     52c:	39000117 	ldw	r4,4(r7)
     530:	3a400017 	ldw	r9,0(r7)
     534:	3a000217 	ldw	r8,8(r7)
     538:	19000115 	stw	r4,4(r3)
     53c:	39000317 	ldw	r4,12(r7)
     540:	1a400015 	stw	r9,0(r3)
     544:	1a000215 	stw	r8,8(r3)
     548:	19000315 	stw	r4,12(r3)
     54c:	18c00404 	addi	r3,r3,16
     550:	39c00404 	addi	r7,r7,16
     554:	50fff51e 	bne	r10,r3,52c <memcpy+0x40>
     558:	3100030c 	andi	r4,r6,12
     55c:	2acb883a 	add	r5,r5,r11
     560:	320003cc 	andi	r8,r6,15
     564:	20002226 	beq	r4,zero,5f0 <memcpy+0x104>
     568:	280f883a 	mov	r7,r5
     56c:	1813883a 	mov	r9,r3
     570:	39c00104 	addi	r7,r7,4
     574:	3abfff17 	ldw	r10,-4(r7)
     578:	41c9c83a 	sub	r4,r8,r7
     57c:	2909883a 	add	r4,r5,r4
     580:	4a800015 	stw	r10,0(r9)
     584:	21000128 	cmpgeui	r4,r4,4
     588:	4a400104 	addi	r9,r9,4
     58c:	203ff81e 	bne	r4,zero,570 <memcpy+0x84>
     590:	413fff04 	addi	r4,r8,-4
     594:	2008d0ba 	srli	r4,r4,2
     598:	318000cc 	andi	r6,r6,3
     59c:	31ffffc4 	addi	r7,r6,-1
     5a0:	21000044 	addi	r4,r4,1
     5a4:	200890ba 	slli	r4,r4,2
     5a8:	1907883a 	add	r3,r3,r4
     5ac:	290b883a 	add	r5,r5,r4
     5b0:	3000041e 	bne	r6,zero,5c4 <memcpy+0xd8>
     5b4:	f800283a 	ret
     5b8:	2007883a 	mov	r3,r4
     5bc:	31ffffc4 	addi	r7,r6,-1
     5c0:	303ffc26 	beq	r6,zero,5b4 <memcpy+0xc8>
     5c4:	39c00044 	addi	r7,r7,1
     5c8:	19cf883a 	add	r7,r3,r7
     5cc:	29800003 	ldbu	r6,0(r5)
     5d0:	18c00044 	addi	r3,r3,1
     5d4:	29400044 	addi	r5,r5,1
     5d8:	19bfffc5 	stb	r6,-1(r3)
     5dc:	38fffb1e 	bne	r7,r3,5cc <memcpy+0xe0>
     5e0:	f800283a 	ret
     5e4:	31ffffc4 	addi	r7,r6,-1
     5e8:	2007883a 	mov	r3,r4
     5ec:	003ff506 	br	5c4 <memcpy+0xd8>
     5f0:	400d883a 	mov	r6,r8
     5f4:	003ff106 	br	5bc <memcpy+0xd0>

000005f8 <_printf_r>:
     5f8:	f811883a 	mov	r8,ra
     5fc:	000e1ac0 	call	e1ac <_mcount>
     600:	403f883a 	mov	ra,r8
     604:	defffd04 	addi	sp,sp,-12
     608:	dfc00015 	stw	ra,0(sp)
     60c:	2805883a 	mov	r2,r5
     610:	d9800115 	stw	r6,4(sp)
     614:	d9c00215 	stw	r7,8(sp)
     618:	21400217 	ldw	r5,8(r4)
     61c:	d9c00104 	addi	r7,sp,4
     620:	100d883a 	mov	r6,r2
     624:	00008100 	call	810 <___vfprintf_internal_r>
     628:	dfc00017 	ldw	ra,0(sp)
     62c:	dec00304 	addi	sp,sp,12
     630:	f800283a 	ret

00000634 <printf>:
     634:	f811883a 	mov	r8,ra
     638:	000e1ac0 	call	e1ac <_mcount>
     63c:	403f883a 	mov	ra,r8
     640:	defffc04 	addi	sp,sp,-16
     644:	dfc00015 	stw	ra,0(sp)
     648:	d9400115 	stw	r5,4(sp)
     64c:	d9800215 	stw	r6,8(sp)
     650:	d9c00315 	stw	r7,12(sp)
     654:	00800074 	movhi	r2,1
     658:	1088d117 	ldw	r2,9028(r2)
     65c:	200b883a 	mov	r5,r4
     660:	d9800104 	addi	r6,sp,4
     664:	11000217 	ldw	r4,8(r2)
     668:	00029100 	call	2910 <__vfprintf_internal>
     66c:	dfc00017 	ldw	ra,0(sp)
     670:	dec00404 	addi	sp,sp,16
     674:	f800283a 	ret

00000678 <_puts_r>:
     678:	f811883a 	mov	r8,ra
     67c:	000e1ac0 	call	e1ac <_mcount>
     680:	403f883a 	mov	ra,r8
     684:	defff504 	addi	sp,sp,-44
     688:	dfc00a15 	stw	ra,40(sp)
     68c:	dc400915 	stw	r17,36(sp)
     690:	dc000815 	stw	r16,32(sp)
     694:	2021883a 	mov	r16,r4
     698:	2809883a 	mov	r4,r5
     69c:	2823883a 	mov	r17,r5
     6a0:	000076c0 	call	76c <strlen>
     6a4:	11000044 	addi	r4,r2,1
     6a8:	d8800515 	stw	r2,20(sp)
     6ac:	00800044 	movi	r2,1
     6b0:	00c00074 	movhi	r3,1
     6b4:	d8800715 	stw	r2,28(sp)
     6b8:	d8800404 	addi	r2,sp,16
     6bc:	18c00f04 	addi	r3,r3,60
     6c0:	d8800115 	stw	r2,4(sp)
     6c4:	00800084 	movi	r2,2
     6c8:	dc400415 	stw	r17,16(sp)
     6cc:	d8c00615 	stw	r3,24(sp)
     6d0:	d9000315 	stw	r4,12(sp)
     6d4:	d8800215 	stw	r2,8(sp)
     6d8:	81400217 	ldw	r5,8(r16)
     6dc:	80000226 	beq	r16,zero,6e8 <_puts_r+0x70>
     6e0:	80800e17 	ldw	r2,56(r16)
     6e4:	10001326 	beq	r2,zero,734 <_puts_r+0xbc>
     6e8:	2880030b 	ldhu	r2,12(r5)
     6ec:	10c8000c 	andi	r3,r2,8192
     6f0:	1800061e 	bne	r3,zero,70c <_puts_r+0x94>
     6f4:	28c01917 	ldw	r3,100(r5)
     6f8:	0137ffc4 	movi	r4,-8193
     6fc:	10880014 	ori	r2,r2,8192
     700:	1906703a 	and	r3,r3,r4
     704:	2880030d 	sth	r2,12(r5)
     708:	28c01915 	stw	r3,100(r5)
     70c:	d9800104 	addi	r6,sp,4
     710:	8009883a 	mov	r4,r16
     714:	00051a00 	call	51a0 <__sfvwrite_r>
     718:	10000b1e 	bne	r2,zero,748 <_puts_r+0xd0>
     71c:	00800284 	movi	r2,10
     720:	dfc00a17 	ldw	ra,40(sp)
     724:	dc400917 	ldw	r17,36(sp)
     728:	dc000817 	ldw	r16,32(sp)
     72c:	dec00b04 	addi	sp,sp,44
     730:	f800283a 	ret
     734:	8009883a 	mov	r4,r16
     738:	d9400015 	stw	r5,0(sp)
     73c:	0004cd40 	call	4cd4 <__sinit>
     740:	d9400017 	ldw	r5,0(sp)
     744:	003fe806 	br	6e8 <_puts_r+0x70>
     748:	00bfffc4 	movi	r2,-1
     74c:	003ff406 	br	720 <_puts_r+0xa8>

00000750 <puts>:
     750:	f811883a 	mov	r8,ra
     754:	000e1ac0 	call	e1ac <_mcount>
     758:	403f883a 	mov	ra,r8
     75c:	00800074 	movhi	r2,1
     760:	200b883a 	mov	r5,r4
     764:	1108d117 	ldw	r4,9028(r2)
     768:	00006781 	jmpi	678 <_puts_r>

0000076c <strlen>:
     76c:	f811883a 	mov	r8,ra
     770:	000e1ac0 	call	e1ac <_mcount>
     774:	403f883a 	mov	ra,r8
     778:	208000cc 	andi	r2,r4,3
     77c:	10000926 	beq	r2,zero,7a4 <strlen+0x38>
     780:	2005883a 	mov	r2,r4
     784:	00000306 	br	794 <strlen+0x28>
     788:	10800044 	addi	r2,r2,1
     78c:	10c000cc 	andi	r3,r2,3
     790:	18000526 	beq	r3,zero,7a8 <strlen+0x3c>
     794:	10c00007 	ldb	r3,0(r2)
     798:	183ffb1e 	bne	r3,zero,788 <strlen+0x1c>
     79c:	1105c83a 	sub	r2,r2,r4
     7a0:	f800283a 	ret
     7a4:	2005883a 	mov	r2,r4
     7a8:	11400017 	ldw	r5,0(r2)
     7ac:	01ffbff4 	movhi	r7,65279
     7b0:	39ffbfc4 	addi	r7,r7,-257
     7b4:	29c7883a 	add	r3,r5,r7
     7b8:	01a02074 	movhi	r6,32897
     7bc:	014a303a 	nor	r5,zero,r5
     7c0:	1946703a 	and	r3,r3,r5
     7c4:	31a02004 	addi	r6,r6,-32640
     7c8:	1986703a 	and	r3,r3,r6
     7cc:	1800071e 	bne	r3,zero,7ec <strlen+0x80>
     7d0:	11400117 	ldw	r5,4(r2)
     7d4:	10800104 	addi	r2,r2,4
     7d8:	29c7883a 	add	r3,r5,r7
     7dc:	014a303a 	nor	r5,zero,r5
     7e0:	1946703a 	and	r3,r3,r5
     7e4:	1986703a 	and	r3,r3,r6
     7e8:	183ff926 	beq	r3,zero,7d0 <strlen+0x64>
     7ec:	10c00007 	ldb	r3,0(r2)
     7f0:	183fea26 	beq	r3,zero,79c <strlen+0x30>
     7f4:	10c00047 	ldb	r3,1(r2)
     7f8:	10800044 	addi	r2,r2,1
     7fc:	183fe726 	beq	r3,zero,79c <strlen+0x30>
     800:	10c00047 	ldb	r3,1(r2)
     804:	10800044 	addi	r2,r2,1
     808:	183ffa1e 	bne	r3,zero,7f4 <strlen+0x88>
     80c:	003fe306 	br	79c <strlen+0x30>

00000810 <___vfprintf_internal_r>:
     810:	f811883a 	mov	r8,ra
     814:	000e1ac0 	call	e1ac <_mcount>
     818:	403f883a 	mov	ra,r8
     81c:	deffbf04 	addi	sp,sp,-260
     820:	dfc04015 	stw	ra,256(sp)
     824:	df003f15 	stw	fp,252(sp)
     828:	ddc03e15 	stw	r23,248(sp)
     82c:	dd803d15 	stw	r22,244(sp)
     830:	dd403c15 	stw	r21,240(sp)
     834:	dd003b15 	stw	r20,236(sp)
     838:	dcc03a15 	stw	r19,232(sp)
     83c:	dc803915 	stw	r18,228(sp)
     840:	dc403815 	stw	r17,224(sp)
     844:	dc003715 	stw	r16,220(sp)
     848:	2027883a 	mov	r19,r4
     84c:	2825883a 	mov	r18,r5
     850:	302d883a 	mov	r22,r6
     854:	d9c00615 	stw	r7,24(sp)
     858:	00057d00 	call	57d0 <_localeconv_r>
     85c:	10800017 	ldw	r2,0(r2)
     860:	1009883a 	mov	r4,r2
     864:	d8800d15 	stw	r2,52(sp)
     868:	000076c0 	call	76c <strlen>
     86c:	d8800b15 	stw	r2,44(sp)
     870:	98000226 	beq	r19,zero,87c <___vfprintf_internal_r+0x6c>
     874:	98800e17 	ldw	r2,56(r19)
     878:	1001de26 	beq	r2,zero,ff4 <___vfprintf_internal_r+0x7e4>
     87c:	9080030b 	ldhu	r2,12(r18)
     880:	10c8000c 	andi	r3,r2,8192
     884:	1800061e 	bne	r3,zero,8a0 <___vfprintf_internal_r+0x90>
     888:	90c01917 	ldw	r3,100(r18)
     88c:	0137ffc4 	movi	r4,-8193
     890:	10880014 	ori	r2,r2,8192
     894:	1906703a 	and	r3,r3,r4
     898:	9080030d 	sth	r2,12(r18)
     89c:	90c01915 	stw	r3,100(r18)
     8a0:	10c0020c 	andi	r3,r2,8
     8a4:	1800fa26 	beq	r3,zero,c90 <___vfprintf_internal_r+0x480>
     8a8:	90c00417 	ldw	r3,16(r18)
     8ac:	1800f826 	beq	r3,zero,c90 <___vfprintf_internal_r+0x480>
     8b0:	1080068c 	andi	r2,r2,26
     8b4:	10800298 	cmpnei	r2,r2,10
     8b8:	1000fd26 	beq	r2,zero,cb0 <___vfprintf_internal_r+0x4a0>
     8bc:	d8802704 	addi	r2,sp,156
     8c0:	b02f883a 	mov	r23,r22
     8c4:	d8801a15 	stw	r2,104(sp)
     8c8:	d8001c15 	stw	zero,112(sp)
     8cc:	d8001b15 	stw	zero,108(sp)
     8d0:	d8000815 	stw	zero,32(sp)
     8d4:	d8000915 	stw	zero,36(sp)
     8d8:	d8000a15 	stw	zero,40(sp)
     8dc:	d8000c15 	stw	zero,48(sp)
     8e0:	d8001015 	stw	zero,64(sp)
     8e4:	d8000515 	stw	zero,20(sp)
     8e8:	102d883a 	mov	r22,r2
     8ec:	b8800007 	ldb	r2,0(r23)
     8f0:	1000d526 	beq	r2,zero,c48 <___vfprintf_internal_r+0x438>
     8f4:	b821883a 	mov	r16,r23
     8f8:	00000306 	br	908 <___vfprintf_internal_r+0xf8>
     8fc:	80800047 	ldb	r2,1(r16)
     900:	84000044 	addi	r16,r16,1
     904:	10012026 	beq	r2,zero,d88 <___vfprintf_internal_r+0x578>
     908:	10800958 	cmpnei	r2,r2,37
     90c:	103ffb1e 	bne	r2,zero,8fc <___vfprintf_internal_r+0xec>
     910:	85e3c83a 	sub	r17,r16,r23
     914:	85c11e1e 	bne	r16,r23,d90 <___vfprintf_internal_r+0x580>
     918:	80800003 	ldbu	r2,0(r16)
     91c:	10803fcc 	andi	r2,r2,255
     920:	1080201c 	xori	r2,r2,128
     924:	10bfe004 	addi	r2,r2,-128
     928:	1000c726 	beq	r2,zero,c48 <___vfprintf_internal_r+0x438>
     92c:	82c00047 	ldb	r11,1(r16)
     930:	85c00044 	addi	r23,r16,1
     934:	d8001345 	stb	zero,77(sp)
     938:	0009883a 	mov	r4,zero
     93c:	000b883a 	mov	r5,zero
     940:	023fffc4 	movi	r8,-1
     944:	0021883a 	mov	r16,zero
     948:	0019883a 	mov	r12,zero
     94c:	bdc00044 	addi	r23,r23,1
     950:	5839883a 	mov	fp,r11
     954:	e0bff804 	addi	r2,fp,-32
     958:	10c01668 	cmpgeui	r3,r2,89
     95c:	18006a1e 	bne	r3,zero,b08 <___vfprintf_internal_r+0x2f8>
     960:	100490ba 	slli	r2,r2,2
     964:	00c00034 	movhi	r3,0
     968:	10c7883a 	add	r3,r2,r3
     96c:	18825d17 	ldw	r2,2420(r3)
     970:	1000683a 	jmp	r2
     974:	000012b4 	movhi	zero,74
     978:	00000b08 	cmpgei	zero,zero,44
     97c:	00000b08 	cmpgei	zero,zero,44
     980:	000012a8 	cmpgeui	zero,zero,74
     984:	00000b08 	cmpgei	zero,zero,44
     988:	00000b08 	cmpgei	zero,zero,44
     98c:	00000b08 	cmpgei	zero,zero,44
     990:	00000b08 	cmpgei	zero,zero,44
     994:	00000b08 	cmpgei	zero,zero,44
     998:	00000b08 	cmpgei	zero,zero,44
     99c:	00001280 	call	128 <alt_irq_handler+0x2c>
     9a0:	00001270 	cmpltui	zero,zero,73
     9a4:	00000b08 	cmpgei	zero,zero,44
     9a8:	00001258 	cmpnei	zero,zero,73
     9ac:	00001214 	movui	zero,72
     9b0:	00000b08 	cmpgei	zero,zero,44
     9b4:	00001208 	cmpgei	zero,zero,72
     9b8:	00000ad8 	cmpnei	zero,zero,43
     9bc:	00000ad8 	cmpnei	zero,zero,43
     9c0:	00000ad8 	cmpnei	zero,zero,43
     9c4:	00000ad8 	cmpnei	zero,zero,43
     9c8:	00000ad8 	cmpnei	zero,zero,43
     9cc:	00000ad8 	cmpnei	zero,zero,43
     9d0:	00000ad8 	cmpnei	zero,zero,43
     9d4:	00000ad8 	cmpnei	zero,zero,43
     9d8:	00000ad8 	cmpnei	zero,zero,43
     9dc:	00000b08 	cmpgei	zero,zero,44
     9e0:	00000b08 	cmpgei	zero,zero,44
     9e4:	00000b08 	cmpgei	zero,zero,44
     9e8:	00000b08 	cmpgei	zero,zero,44
     9ec:	00000b08 	cmpgei	zero,zero,44
     9f0:	00000b08 	cmpgei	zero,zero,44
     9f4:	00000b08 	cmpgei	zero,zero,44
     9f8:	00000b08 	cmpgei	zero,zero,44
     9fc:	00000b08 	cmpgei	zero,zero,44
     a00:	00000b08 	cmpgei	zero,zero,44
     a04:	00001120 	cmpeqi	zero,zero,68
     a08:	00000dec 	andhi	zero,zero,55
     a0c:	00000b08 	cmpgei	zero,zero,44
     a10:	00000dec 	andhi	zero,zero,55
     a14:	00000b08 	cmpgei	zero,zero,44
     a18:	00000b08 	cmpgei	zero,zero,44
     a1c:	00000b08 	cmpgei	zero,zero,44
     a20:	00000b08 	cmpgei	zero,zero,44
     a24:	00001114 	movui	zero,68
     a28:	00000b08 	cmpgei	zero,zero,44
     a2c:	00000b08 	cmpgei	zero,zero,44
     a30:	00000d20 	cmpeqi	zero,zero,52
     a34:	00000b08 	cmpgei	zero,zero,44
     a38:	00000b08 	cmpgei	zero,zero,44
     a3c:	00000b08 	cmpgei	zero,zero,44
     a40:	00000b08 	cmpgei	zero,zero,44
     a44:	00000b08 	cmpgei	zero,zero,44
     a48:	00000cf8 	rdprs	zero,zero,51
     a4c:	00000b08 	cmpgei	zero,zero,44
     a50:	00000b08 	cmpgei	zero,zero,44
     a54:	000010cc 	andi	zero,zero,67
     a58:	00000b08 	cmpgei	zero,zero,44
     a5c:	00000b08 	cmpgei	zero,zero,44
     a60:	00000b08 	cmpgei	zero,zero,44
     a64:	00000b08 	cmpgei	zero,zero,44
     a68:	00000b08 	cmpgei	zero,zero,44
     a6c:	00000b08 	cmpgei	zero,zero,44
     a70:	00000b08 	cmpgei	zero,zero,44
     a74:	00000b08 	cmpgei	zero,zero,44
     a78:	00000b08 	cmpgei	zero,zero,44
     a7c:	00000b08 	cmpgei	zero,zero,44
     a80:	000010a4 	muli	zero,zero,66
     a84:	00001000 	call	100 <alt_irq_handler+0x4>
     a88:	00000dec 	andhi	zero,zero,55
     a8c:	00000dec 	andhi	zero,zero,55
     a90:	00000dec 	andhi	zero,zero,55
     a94:	00001098 	cmpnei	zero,zero,66
     a98:	00001000 	call	100 <alt_irq_handler+0x4>
     a9c:	00000b08 	cmpgei	zero,zero,44
     aa0:	00000b08 	cmpgei	zero,zero,44
     aa4:	00001408 	cmpgei	zero,zero,80
     aa8:	00000b08 	cmpgei	zero,zero,44
     aac:	000013cc 	andi	zero,zero,79
     ab0:	00000d24 	muli	zero,zero,52
     ab4:	0000138c 	andi	zero,zero,78
     ab8:	00001380 	call	138 <alt_irq_handler+0x3c>
     abc:	00000b08 	cmpgei	zero,zero,44
     ac0:	00001328 	cmpgeui	zero,zero,76
     ac4:	00000b08 	cmpgei	zero,zero,44
     ac8:	00000cfc 	xorhi	zero,zero,51
     acc:	00000b08 	cmpgei	zero,zero,44
     ad0:	00000b08 	cmpgei	zero,zero,44
     ad4:	000012e0 	cmpeqi	zero,zero,75
     ad8:	0021883a 	mov	r16,zero
     adc:	e0bff404 	addi	r2,fp,-48
     ae0:	bf000007 	ldb	fp,0(r23)
     ae4:	840002a4 	muli	r16,r16,10
     ae8:	bdc00044 	addi	r23,r23,1
     aec:	1421883a 	add	r16,r2,r16
     af0:	e0bff404 	addi	r2,fp,-48
     af4:	10c002b0 	cmpltui	r3,r2,10
     af8:	183ff91e 	bne	r3,zero,ae0 <___vfprintf_internal_r+0x2d0>
     afc:	e0bff804 	addi	r2,fp,-32
     b00:	10c01668 	cmpgeui	r3,r2,89
     b04:	183f9626 	beq	r3,zero,960 <___vfprintf_internal_r+0x150>
     b08:	21003fcc 	andi	r4,r4,255
     b0c:	2006851e 	bne	r4,zero,2524 <___vfprintf_internal_r+0x1d14>
     b10:	e0004d26 	beq	fp,zero,c48 <___vfprintf_internal_r+0x438>
     b14:	df001d05 	stb	fp,116(sp)
     b18:	d8001345 	stb	zero,77(sp)
     b1c:	05000044 	movi	r20,1
     b20:	05400044 	movi	r21,1
     b24:	dc401d04 	addi	r17,sp,116
     b28:	db000415 	stw	r12,16(sp)
     b2c:	0011883a 	mov	r8,zero
     b30:	d8000715 	stw	zero,28(sp)
     b34:	d8800417 	ldw	r2,16(sp)
     b38:	1380008c 	andi	r14,r2,2
     b3c:	70000126 	beq	r14,zero,b44 <___vfprintf_internal_r+0x334>
     b40:	a5000084 	addi	r20,r20,2
     b44:	d8800417 	ldw	r2,16(sp)
     b48:	d8c01c17 	ldw	r3,112(sp)
     b4c:	1340210c 	andi	r13,r2,132
     b50:	6800021e 	bne	r13,zero,b5c <___vfprintf_internal_r+0x34c>
     b54:	850fc83a 	sub	r7,r16,r20
     b58:	01c34316 	blt	zero,r7,1868 <___vfprintf_internal_r+0x1058>
     b5c:	d8801347 	ldb	r2,77(sp)
     b60:	10000c26 	beq	r2,zero,b94 <___vfprintf_internal_r+0x384>
     b64:	d8801b17 	ldw	r2,108(sp)
     b68:	d9001344 	addi	r4,sp,77
     b6c:	18c00044 	addi	r3,r3,1
     b70:	10800044 	addi	r2,r2,1
     b74:	b1000015 	stw	r4,0(r22)
     b78:	01000044 	movi	r4,1
     b7c:	d8801b15 	stw	r2,108(sp)
     b80:	b1000115 	stw	r4,4(r22)
     b84:	d8c01c15 	stw	r3,112(sp)
     b88:	10800208 	cmpgei	r2,r2,8
     b8c:	1003771e 	bne	r2,zero,196c <___vfprintf_internal_r+0x115c>
     b90:	b5800204 	addi	r22,r22,8
     b94:	70000c26 	beq	r14,zero,bc8 <___vfprintf_internal_r+0x3b8>
     b98:	d8801b17 	ldw	r2,108(sp)
     b9c:	d9001384 	addi	r4,sp,78
     ba0:	18c00084 	addi	r3,r3,2
     ba4:	10800044 	addi	r2,r2,1
     ba8:	b1000015 	stw	r4,0(r22)
     bac:	01000084 	movi	r4,2
     bb0:	d8801b15 	stw	r2,108(sp)
     bb4:	b1000115 	stw	r4,4(r22)
     bb8:	d8c01c15 	stw	r3,112(sp)
     bbc:	10800208 	cmpgei	r2,r2,8
     bc0:	1003781e 	bne	r2,zero,19a4 <___vfprintf_internal_r+0x1194>
     bc4:	b5800204 	addi	r22,r22,8
     bc8:	6b402018 	cmpnei	r13,r13,128
     bcc:	68025926 	beq	r13,zero,1534 <___vfprintf_internal_r+0xd24>
     bd0:	4551c83a 	sub	r8,r8,r21
     bd4:	02029116 	blt	zero,r8,161c <___vfprintf_internal_r+0xe0c>
     bd8:	d8800417 	ldw	r2,16(sp)
     bdc:	1080400c 	andi	r2,r2,256
     be0:	10020e1e 	bne	r2,zero,141c <___vfprintf_internal_r+0xc0c>
     be4:	d8801b17 	ldw	r2,108(sp)
     be8:	1d47883a 	add	r3,r3,r21
     bec:	b4400015 	stw	r17,0(r22)
     bf0:	10800044 	addi	r2,r2,1
     bf4:	b5400115 	stw	r21,4(r22)
     bf8:	d8801b15 	stw	r2,108(sp)
     bfc:	d8c01c15 	stw	r3,112(sp)
     c00:	10800208 	cmpgei	r2,r2,8
     c04:	10030e1e 	bne	r2,zero,1840 <___vfprintf_internal_r+0x1030>
     c08:	b5800204 	addi	r22,r22,8
     c0c:	d8800417 	ldw	r2,16(sp)
     c10:	1440010c 	andi	r17,r2,4
     c14:	88000226 	beq	r17,zero,c20 <___vfprintf_internal_r+0x410>
     c18:	8523c83a 	sub	r17,r16,r20
     c1c:	0440c616 	blt	zero,r17,f38 <___vfprintf_internal_r+0x728>
     c20:	8500010e 	bge	r16,r20,c28 <___vfprintf_internal_r+0x418>
     c24:	a021883a 	mov	r16,r20
     c28:	d8800517 	ldw	r2,20(sp)
     c2c:	1405883a 	add	r2,r2,r16
     c30:	d8800515 	stw	r2,20(sp)
     c34:	1802c01e 	bne	r3,zero,1738 <___vfprintf_internal_r+0xf28>
     c38:	b8800007 	ldb	r2,0(r23)
     c3c:	d8001b15 	stw	zero,108(sp)
     c40:	dd802704 	addi	r22,sp,156
     c44:	103f2b1e 	bne	r2,zero,8f4 <___vfprintf_internal_r+0xe4>
     c48:	d8801c17 	ldw	r2,112(sp)
     c4c:	1006371e 	bne	r2,zero,252c <___vfprintf_internal_r+0x1d1c>
     c50:	9080030b 	ldhu	r2,12(r18)
     c54:	1080100c 	andi	r2,r2,64
     c58:	1006cd1e 	bne	r2,zero,2790 <___vfprintf_internal_r+0x1f80>
     c5c:	d8800517 	ldw	r2,20(sp)
     c60:	dfc04017 	ldw	ra,256(sp)
     c64:	df003f17 	ldw	fp,252(sp)
     c68:	ddc03e17 	ldw	r23,248(sp)
     c6c:	dd803d17 	ldw	r22,244(sp)
     c70:	dd403c17 	ldw	r21,240(sp)
     c74:	dd003b17 	ldw	r20,236(sp)
     c78:	dcc03a17 	ldw	r19,232(sp)
     c7c:	dc803917 	ldw	r18,228(sp)
     c80:	dc403817 	ldw	r17,224(sp)
     c84:	dc003717 	ldw	r16,220(sp)
     c88:	dec04104 	addi	sp,sp,260
     c8c:	f800283a 	ret
     c90:	900b883a 	mov	r5,r18
     c94:	9809883a 	mov	r4,r19
     c98:	0002a040 	call	2a04 <__swsetup_r>
     c9c:	1006bc1e 	bne	r2,zero,2790 <___vfprintf_internal_r+0x1f80>
     ca0:	9080030b 	ldhu	r2,12(r18)
     ca4:	1080068c 	andi	r2,r2,26
     ca8:	10800298 	cmpnei	r2,r2,10
     cac:	103f031e 	bne	r2,zero,8bc <___vfprintf_internal_r+0xac>
     cb0:	9080038f 	ldh	r2,14(r18)
     cb4:	103f0116 	blt	r2,zero,8bc <___vfprintf_internal_r+0xac>
     cb8:	d9c00617 	ldw	r7,24(sp)
     cbc:	b00d883a 	mov	r6,r22
     cc0:	900b883a 	mov	r5,r18
     cc4:	9809883a 	mov	r4,r19
     cc8:	dfc04017 	ldw	ra,256(sp)
     ccc:	df003f17 	ldw	fp,252(sp)
     cd0:	ddc03e17 	ldw	r23,248(sp)
     cd4:	dd803d17 	ldw	r22,244(sp)
     cd8:	dd403c17 	ldw	r21,240(sp)
     cdc:	dd003b17 	ldw	r20,236(sp)
     ce0:	dcc03a17 	ldw	r19,232(sp)
     ce4:	dc803917 	ldw	r18,228(sp)
     ce8:	dc403817 	ldw	r17,224(sp)
     cec:	dc003717 	ldw	r16,220(sp)
     cf0:	dec04104 	addi	sp,sp,260
     cf4:	00029381 	jmpi	2938 <__sbprintf>
     cf8:	63000414 	ori	r12,r12,16
     cfc:	6080080c 	andi	r2,r12,32
     d00:	10008126 	beq	r2,zero,f08 <___vfprintf_internal_r+0x6f8>
     d04:	d8c00617 	ldw	r3,24(sp)
     d08:	00800044 	movi	r2,1
     d0c:	1d000017 	ldw	r20,0(r3)
     d10:	1d400117 	ldw	r21,4(r3)
     d14:	18c00204 	addi	r3,r3,8
     d18:	d8c00615 	stw	r3,24(sp)
     d1c:	00000906 	br	d44 <___vfprintf_internal_r+0x534>
     d20:	63000414 	ori	r12,r12,16
     d24:	6080080c 	andi	r2,r12,32
     d28:	10006b26 	beq	r2,zero,ed8 <___vfprintf_internal_r+0x6c8>
     d2c:	d8c00617 	ldw	r3,24(sp)
     d30:	0005883a 	mov	r2,zero
     d34:	1d000017 	ldw	r20,0(r3)
     d38:	1d400117 	ldw	r21,4(r3)
     d3c:	18c00204 	addi	r3,r3,8
     d40:	d8c00615 	stw	r3,24(sp)
     d44:	d8001345 	stb	zero,77(sp)
     d48:	40ffffe0 	cmpeqi	r3,r8,-1
     d4c:	001b883a 	mov	r13,zero
     d50:	18010e1e 	bne	r3,zero,118c <___vfprintf_internal_r+0x97c>
     d54:	047fdfc4 	movi	r17,-129
     d58:	6448703a 	and	r4,r12,r17
     d5c:	a546b03a 	or	r3,r20,r21
     d60:	d9000415 	stw	r4,16(sp)
     d64:	1802be1e 	bne	r3,zero,1860 <___vfprintf_internal_r+0x1050>
     d68:	40025d1e 	bne	r8,zero,16e0 <___vfprintf_internal_r+0xed0>
     d6c:	1003731e 	bne	r2,zero,1b3c <___vfprintf_internal_r+0x132c>
     d70:	6540004c 	andi	r21,r12,1
     d74:	a803ae26 	beq	r21,zero,1c30 <___vfprintf_internal_r+0x1420>
     d78:	00800c04 	movi	r2,48
     d7c:	d88026c5 	stb	r2,155(sp)
     d80:	dc4026c4 	addi	r17,sp,155
     d84:	0000ba06 	br	1070 <___vfprintf_internal_r+0x860>
     d88:	85e3c83a 	sub	r17,r16,r23
     d8c:	85ffae26 	beq	r16,r23,c48 <___vfprintf_internal_r+0x438>
     d90:	d8c01c17 	ldw	r3,112(sp)
     d94:	d8801b17 	ldw	r2,108(sp)
     d98:	b5c00015 	stw	r23,0(r22)
     d9c:	1c47883a 	add	r3,r3,r17
     da0:	10800044 	addi	r2,r2,1
     da4:	d8801b15 	stw	r2,108(sp)
     da8:	b4400115 	stw	r17,4(r22)
     dac:	d8c01c15 	stw	r3,112(sp)
     db0:	10800208 	cmpgei	r2,r2,8
     db4:	1000061e 	bne	r2,zero,dd0 <___vfprintf_internal_r+0x5c0>
     db8:	b5800204 	addi	r22,r22,8
     dbc:	d8c00517 	ldw	r3,20(sp)
     dc0:	80800003 	ldbu	r2,0(r16)
     dc4:	1c47883a 	add	r3,r3,r17
     dc8:	d8c00515 	stw	r3,20(sp)
     dcc:	003ed306 	br	91c <___vfprintf_internal_r+0x10c>
     dd0:	d9801a04 	addi	r6,sp,104
     dd4:	900b883a 	mov	r5,r18
     dd8:	9809883a 	mov	r4,r19
     ddc:	0007fdc0 	call	7fdc <__sprint_r>
     de0:	103f9b1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
     de4:	dd802704 	addi	r22,sp,156
     de8:	003ff406 	br	dbc <___vfprintf_internal_r+0x5ac>
     dec:	21003fcc 	andi	r4,r4,255
     df0:	2006651e 	bne	r4,zero,2788 <___vfprintf_internal_r+0x1f78>
     df4:	d8c00617 	ldw	r3,24(sp)
     df8:	6080020c 	andi	r2,r12,8
     dfc:	19000204 	addi	r4,r3,8
     e00:	d9000e15 	stw	r4,56(sp)
     e04:	1003a51e 	bne	r2,zero,1c9c <___vfprintf_internal_r+0x148c>
     e08:	d8800617 	ldw	r2,24(sp)
     e0c:	10c00017 	ldw	r3,0(r2)
     e10:	10800117 	ldw	r2,4(r2)
     e14:	d8c00915 	stw	r3,36(sp)
     e18:	d8800a15 	stw	r2,40(sp)
     e1c:	dd400a17 	ldw	r21,40(sp)
     e20:	dd000917 	ldw	r20,36(sp)
     e24:	00a00034 	movhi	r2,32768
     e28:	10bfffc4 	addi	r2,r2,-1
     e2c:	a8a2703a 	and	r17,r21,r2
     e30:	01dffc34 	movhi	r7,32752
     e34:	01bfffc4 	movi	r6,-1
     e38:	39ffffc4 	addi	r7,r7,-1
     e3c:	a009883a 	mov	r4,r20
     e40:	880b883a 	mov	r5,r17
     e44:	da000615 	stw	r8,24(sp)
     e48:	db000415 	stw	r12,16(sp)
     e4c:	000d7480 	call	d748 <__unorddf2>
     e50:	db000417 	ldw	r12,16(sp)
     e54:	da000617 	ldw	r8,24(sp)
     e58:	1004621e 	bne	r2,zero,1fe4 <___vfprintf_internal_r+0x17d4>
     e5c:	01dffc34 	movhi	r7,32752
     e60:	01bfffc4 	movi	r6,-1
     e64:	39ffffc4 	addi	r7,r7,-1
     e68:	a009883a 	mov	r4,r20
     e6c:	880b883a 	mov	r5,r17
     e70:	000c7140 	call	c714 <__ledf2>
     e74:	db000417 	ldw	r12,16(sp)
     e78:	da000617 	ldw	r8,24(sp)
     e7c:	0084590e 	bge	zero,r2,1fe4 <___vfprintf_internal_r+0x17d4>
     e80:	000d883a 	mov	r6,zero
     e84:	000f883a 	mov	r7,zero
     e88:	a009883a 	mov	r4,r20
     e8c:	a80b883a 	mov	r5,r21
     e90:	000c7140 	call	c714 <__ledf2>
     e94:	db000417 	ldw	r12,16(sp)
     e98:	10058f16 	blt	r2,zero,24d8 <___vfprintf_internal_r+0x1cc8>
     e9c:	db401343 	ldbu	r13,77(sp)
     ea0:	e0801210 	cmplti	r2,fp,72
     ea4:	1005371e 	bne	r2,zero,2384 <___vfprintf_internal_r+0x1b74>
     ea8:	04400074 	movhi	r17,1
     eac:	8c401104 	addi	r17,r17,68
     eb0:	00bfdfc4 	movi	r2,-129
     eb4:	6084703a 	and	r2,r12,r2
     eb8:	d8800415 	stw	r2,16(sp)
     ebc:	d8800e17 	ldw	r2,56(sp)
     ec0:	050000c4 	movi	r20,3
     ec4:	054000c4 	movi	r21,3
     ec8:	d8800615 	stw	r2,24(sp)
     ecc:	0011883a 	mov	r8,zero
     ed0:	d8000715 	stw	zero,28(sp)
     ed4:	00006a06 	br	1080 <___vfprintf_internal_r+0x870>
     ed8:	d9000617 	ldw	r4,24(sp)
     edc:	6080040c 	andi	r2,r12,16
     ee0:	20c00104 	addi	r3,r4,4
     ee4:	1003681e 	bne	r2,zero,1c88 <___vfprintf_internal_r+0x1478>
     ee8:	6080100c 	andi	r2,r12,64
     eec:	10051f26 	beq	r2,zero,236c <___vfprintf_internal_r+0x1b5c>
     ef0:	d8800617 	ldw	r2,24(sp)
     ef4:	002b883a 	mov	r21,zero
     ef8:	d8c00615 	stw	r3,24(sp)
     efc:	1500000b 	ldhu	r20,0(r2)
     f00:	0005883a 	mov	r2,zero
     f04:	003f8f06 	br	d44 <___vfprintf_internal_r+0x534>
     f08:	d9000617 	ldw	r4,24(sp)
     f0c:	6080040c 	andi	r2,r12,16
     f10:	20c00104 	addi	r3,r4,4
     f14:	10034e1e 	bne	r2,zero,1c50 <___vfprintf_internal_r+0x1440>
     f18:	6080100c 	andi	r2,r12,64
     f1c:	10055726 	beq	r2,zero,247c <___vfprintf_internal_r+0x1c6c>
     f20:	d8800617 	ldw	r2,24(sp)
     f24:	002b883a 	mov	r21,zero
     f28:	d8c00615 	stw	r3,24(sp)
     f2c:	1500000b 	ldhu	r20,0(r2)
     f30:	00800044 	movi	r2,1
     f34:	003f8306 	br	d44 <___vfprintf_internal_r+0x534>
     f38:	03000074 	movhi	r12,1
     f3c:	89000450 	cmplti	r4,r17,17
     f40:	d8801b17 	ldw	r2,108(sp)
     f44:	63002504 	addi	r12,r12,148
     f48:	20001b1e 	bne	r4,zero,fb8 <___vfprintf_internal_r+0x7a8>
     f4c:	05400404 	movi	r21,16
     f50:	6039883a 	mov	fp,r12
     f54:	00000406 	br	f68 <___vfprintf_internal_r+0x758>
     f58:	8c7ffc04 	addi	r17,r17,-16
     f5c:	89000448 	cmpgei	r4,r17,17
     f60:	b5800204 	addi	r22,r22,8
     f64:	20001326 	beq	r4,zero,fb4 <___vfprintf_internal_r+0x7a4>
     f68:	10800044 	addi	r2,r2,1
     f6c:	18c00404 	addi	r3,r3,16
     f70:	b7000015 	stw	fp,0(r22)
     f74:	b5400115 	stw	r21,4(r22)
     f78:	d8c01c15 	stw	r3,112(sp)
     f7c:	d8801b15 	stw	r2,108(sp)
     f80:	11000208 	cmpgei	r4,r2,8
     f84:	203ff426 	beq	r4,zero,f58 <___vfprintf_internal_r+0x748>
     f88:	d9801a04 	addi	r6,sp,104
     f8c:	900b883a 	mov	r5,r18
     f90:	9809883a 	mov	r4,r19
     f94:	0007fdc0 	call	7fdc <__sprint_r>
     f98:	103f2d1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
     f9c:	8c7ffc04 	addi	r17,r17,-16
     fa0:	89000448 	cmpgei	r4,r17,17
     fa4:	d8c01c17 	ldw	r3,112(sp)
     fa8:	d8801b17 	ldw	r2,108(sp)
     fac:	dd802704 	addi	r22,sp,156
     fb0:	203fed1e 	bne	r4,zero,f68 <___vfprintf_internal_r+0x758>
     fb4:	e019883a 	mov	r12,fp
     fb8:	10800044 	addi	r2,r2,1
     fbc:	1c47883a 	add	r3,r3,r17
     fc0:	d8801b15 	stw	r2,108(sp)
     fc4:	b3000015 	stw	r12,0(r22)
     fc8:	b4400115 	stw	r17,4(r22)
     fcc:	d8c01c15 	stw	r3,112(sp)
     fd0:	10800210 	cmplti	r2,r2,8
     fd4:	103f121e 	bne	r2,zero,c20 <___vfprintf_internal_r+0x410>
     fd8:	d9801a04 	addi	r6,sp,104
     fdc:	900b883a 	mov	r5,r18
     fe0:	9809883a 	mov	r4,r19
     fe4:	0007fdc0 	call	7fdc <__sprint_r>
     fe8:	103f191e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
     fec:	d8c01c17 	ldw	r3,112(sp)
     ff0:	003f0b06 	br	c20 <___vfprintf_internal_r+0x410>
     ff4:	9809883a 	mov	r4,r19
     ff8:	0004cd40 	call	4cd4 <__sinit>
     ffc:	003e1f06 	br	87c <___vfprintf_internal_r+0x6c>
    1000:	21003fcc 	andi	r4,r4,255
    1004:	2005dc1e 	bne	r4,zero,2778 <___vfprintf_internal_r+0x1f68>
    1008:	6080080c 	andi	r2,r12,32
    100c:	10004926 	beq	r2,zero,1134 <___vfprintf_internal_r+0x924>
    1010:	d8c00617 	ldw	r3,24(sp)
    1014:	18800117 	ldw	r2,4(r3)
    1018:	1d000017 	ldw	r20,0(r3)
    101c:	18c00204 	addi	r3,r3,8
    1020:	d8c00615 	stw	r3,24(sp)
    1024:	102b883a 	mov	r21,r2
    1028:	10004e16 	blt	r2,zero,1164 <___vfprintf_internal_r+0x954>
    102c:	40bfffd8 	cmpnei	r2,r8,-1
    1030:	db401343 	ldbu	r13,77(sp)
    1034:	10000626 	beq	r2,zero,1050 <___vfprintf_internal_r+0x840>
    1038:	047fdfc4 	movi	r17,-129
    103c:	6446703a 	and	r3,r12,r17
    1040:	a544b03a 	or	r2,r20,r21
    1044:	d8c00415 	stw	r3,16(sp)
    1048:	1002bb26 	beq	r2,zero,1b38 <___vfprintf_internal_r+0x1328>
    104c:	db000417 	ldw	r12,16(sp)
    1050:	a8036e1e 	bne	r21,zero,1e0c <___vfprintf_internal_r+0x15fc>
    1054:	a08002a8 	cmpgeui	r2,r20,10
    1058:	10036c1e 	bne	r2,zero,1e0c <___vfprintf_internal_r+0x15fc>
    105c:	a5000c04 	addi	r20,r20,48
    1060:	dd0026c5 	stb	r20,155(sp)
    1064:	db000415 	stw	r12,16(sp)
    1068:	05400044 	movi	r21,1
    106c:	dc4026c4 	addi	r17,sp,155
    1070:	4029883a 	mov	r20,r8
    1074:	4540010e 	bge	r8,r21,107c <___vfprintf_internal_r+0x86c>
    1078:	a829883a 	mov	r20,r21
    107c:	d8000715 	stw	zero,28(sp)
    1080:	6b403fcc 	andi	r13,r13,255
    1084:	6b40201c 	xori	r13,r13,128
    1088:	6b7fe004 	addi	r13,r13,-128
    108c:	683ea926 	beq	r13,zero,b34 <___vfprintf_internal_r+0x324>
    1090:	a5000044 	addi	r20,r20,1
    1094:	003ea706 	br	b34 <___vfprintf_internal_r+0x324>
    1098:	bac00007 	ldb	r11,0(r23)
    109c:	63001014 	ori	r12,r12,64
    10a0:	003e2a06 	br	94c <___vfprintf_internal_r+0x13c>
    10a4:	d8c00617 	ldw	r3,24(sp)
    10a8:	d8001345 	stb	zero,77(sp)
    10ac:	05000044 	movi	r20,1
    10b0:	18800017 	ldw	r2,0(r3)
    10b4:	18c00104 	addi	r3,r3,4
    10b8:	d8c00615 	stw	r3,24(sp)
    10bc:	d8801d05 	stb	r2,116(sp)
    10c0:	05400044 	movi	r21,1
    10c4:	dc401d04 	addi	r17,sp,116
    10c8:	003e9706 	br	b28 <___vfprintf_internal_r+0x318>
    10cc:	21003fcc 	andi	r4,r4,255
    10d0:	2005a51e 	bne	r4,zero,2768 <___vfprintf_internal_r+0x1f58>
    10d4:	00800074 	movhi	r2,1
    10d8:	10801904 	addi	r2,r2,100
    10dc:	d8800c15 	stw	r2,48(sp)
    10e0:	6080080c 	andi	r2,r12,32
    10e4:	10008526 	beq	r2,zero,12fc <___vfprintf_internal_r+0xaec>
    10e8:	d8800617 	ldw	r2,24(sp)
    10ec:	15000017 	ldw	r20,0(r2)
    10f0:	15400117 	ldw	r21,4(r2)
    10f4:	10800204 	addi	r2,r2,8
    10f8:	d8800615 	stw	r2,24(sp)
    10fc:	6080004c 	andi	r2,r12,1
    1100:	10000226 	beq	r2,zero,110c <___vfprintf_internal_r+0x8fc>
    1104:	a544b03a 	or	r2,r20,r21
    1108:	1002cb1e 	bne	r2,zero,1c38 <___vfprintf_internal_r+0x1428>
    110c:	00800084 	movi	r2,2
    1110:	003f0c06 	br	d44 <___vfprintf_internal_r+0x534>
    1114:	bac00007 	ldb	r11,0(r23)
    1118:	63000214 	ori	r12,r12,8
    111c:	003e0b06 	br	94c <___vfprintf_internal_r+0x13c>
    1120:	21003fcc 	andi	r4,r4,255
    1124:	2005961e 	bne	r4,zero,2780 <___vfprintf_internal_r+0x1f70>
    1128:	63000414 	ori	r12,r12,16
    112c:	6080080c 	andi	r2,r12,32
    1130:	103fb71e 	bne	r2,zero,1010 <___vfprintf_internal_r+0x800>
    1134:	d9000617 	ldw	r4,24(sp)
    1138:	6080040c 	andi	r2,r12,16
    113c:	20c00104 	addi	r3,r4,4
    1140:	1002db1e 	bne	r2,zero,1cb0 <___vfprintf_internal_r+0x14a0>
    1144:	6080100c 	andi	r2,r12,64
    1148:	10048226 	beq	r2,zero,2354 <___vfprintf_internal_r+0x1b44>
    114c:	d8800617 	ldw	r2,24(sp)
    1150:	d8c00615 	stw	r3,24(sp)
    1154:	1500000f 	ldh	r20,0(r2)
    1158:	a02bd7fa 	srai	r21,r20,31
    115c:	a805883a 	mov	r2,r21
    1160:	103fb20e 	bge	r2,zero,102c <___vfprintf_internal_r+0x81c>
    1164:	a004c03a 	cmpne	r2,r20,zero
    1168:	056bc83a 	sub	r21,zero,r21
    116c:	a8abc83a 	sub	r21,r21,r2
    1170:	00800b44 	movi	r2,45
    1174:	d8801345 	stb	r2,77(sp)
    1178:	40ffffe0 	cmpeqi	r3,r8,-1
    117c:	0529c83a 	sub	r20,zero,r20
    1180:	03400b44 	movi	r13,45
    1184:	00800044 	movi	r2,1
    1188:	183ef226 	beq	r3,zero,d54 <___vfprintf_internal_r+0x544>
    118c:	10c00060 	cmpeqi	r3,r2,1
    1190:	183faf1e 	bne	r3,zero,1050 <___vfprintf_internal_r+0x840>
    1194:	108000a0 	cmpeqi	r2,r2,2
    1198:	1001561e 	bne	r2,zero,16f4 <___vfprintf_internal_r+0xee4>
    119c:	dc402704 	addi	r17,sp,156
    11a0:	a006d0fa 	srli	r3,r20,3
    11a4:	a808977a 	slli	r4,r21,29
    11a8:	a82ad0fa 	srli	r21,r21,3
    11ac:	a50001cc 	andi	r20,r20,7
    11b0:	a0800c04 	addi	r2,r20,48
    11b4:	20e8b03a 	or	r20,r4,r3
    11b8:	88bfffc5 	stb	r2,-1(r17)
    11bc:	a546b03a 	or	r3,r20,r21
    11c0:	880b883a 	mov	r5,r17
    11c4:	8c7fffc4 	addi	r17,r17,-1
    11c8:	183ff51e 	bne	r3,zero,11a0 <___vfprintf_internal_r+0x990>
    11cc:	60c0004c 	andi	r3,r12,1
    11d0:	18015526 	beq	r3,zero,1728 <___vfprintf_internal_r+0xf18>
    11d4:	10803fcc 	andi	r2,r2,255
    11d8:	1080201c 	xori	r2,r2,128
    11dc:	10bfe004 	addi	r2,r2,-128
    11e0:	10800c18 	cmpnei	r2,r2,48
    11e4:	10015026 	beq	r2,zero,1728 <___vfprintf_internal_r+0xf18>
    11e8:	00800c04 	movi	r2,48
    11ec:	297fff84 	addi	r5,r5,-2
    11f0:	88bfffc5 	stb	r2,-1(r17)
    11f4:	d8802704 	addi	r2,sp,156
    11f8:	116bc83a 	sub	r21,r2,r5
    11fc:	db000415 	stw	r12,16(sp)
    1200:	2823883a 	mov	r17,r5
    1204:	003f9a06 	br	1070 <___vfprintf_internal_r+0x860>
    1208:	bac00007 	ldb	r11,0(r23)
    120c:	63002014 	ori	r12,r12,128
    1210:	003dce06 	br	94c <___vfprintf_internal_r+0x13c>
    1214:	bf000007 	ldb	fp,0(r23)
    1218:	b8c00044 	addi	r3,r23,1
    121c:	e0800aa0 	cmpeqi	r2,fp,42
    1220:	1005af1e 	bne	r2,zero,28e0 <___vfprintf_internal_r+0x20d0>
    1224:	e0bff404 	addi	r2,fp,-48
    1228:	118002b0 	cmpltui	r6,r2,10
    122c:	182f883a 	mov	r23,r3
    1230:	0011883a 	mov	r8,zero
    1234:	303dc726 	beq	r6,zero,954 <___vfprintf_internal_r+0x144>
    1238:	bf000007 	ldb	fp,0(r23)
    123c:	420002a4 	muli	r8,r8,10
    1240:	bdc00044 	addi	r23,r23,1
    1244:	4091883a 	add	r8,r8,r2
    1248:	e0bff404 	addi	r2,fp,-48
    124c:	10c002b0 	cmpltui	r3,r2,10
    1250:	183ff91e 	bne	r3,zero,1238 <___vfprintf_internal_r+0xa28>
    1254:	003dbf06 	br	954 <___vfprintf_internal_r+0x144>
    1258:	bf000003 	ldbu	fp,0(r23)
    125c:	e2c03fcc 	andi	r11,fp,255
    1260:	5ac0201c 	xori	r11,r11,128
    1264:	63000114 	ori	r12,r12,4
    1268:	5affe004 	addi	r11,r11,-128
    126c:	003db706 	br	94c <___vfprintf_internal_r+0x13c>
    1270:	bac00007 	ldb	r11,0(r23)
    1274:	01000044 	movi	r4,1
    1278:	01400ac4 	movi	r5,43
    127c:	003db306 	br	94c <___vfprintf_internal_r+0x13c>
    1280:	d8800617 	ldw	r2,24(sp)
    1284:	bf000003 	ldbu	fp,0(r23)
    1288:	14000017 	ldw	r16,0(r2)
    128c:	10800104 	addi	r2,r2,4
    1290:	80028c16 	blt	r16,zero,1cc4 <___vfprintf_internal_r+0x14b4>
    1294:	d8800615 	stw	r2,24(sp)
    1298:	e2c03fcc 	andi	r11,fp,255
    129c:	5ac0201c 	xori	r11,r11,128
    12a0:	5affe004 	addi	r11,r11,-128
    12a4:	003da906 	br	94c <___vfprintf_internal_r+0x13c>
    12a8:	bac00007 	ldb	r11,0(r23)
    12ac:	63000054 	ori	r12,r12,1
    12b0:	003da606 	br	94c <___vfprintf_internal_r+0x13c>
    12b4:	28803fcc 	andi	r2,r5,255
    12b8:	1080201c 	xori	r2,r2,128
    12bc:	10bfe004 	addi	r2,r2,-128
    12c0:	bf000003 	ldbu	fp,0(r23)
    12c4:	103ff41e 	bne	r2,zero,1298 <___vfprintf_internal_r+0xa88>
    12c8:	e2c03fcc 	andi	r11,fp,255
    12cc:	5ac0201c 	xori	r11,r11,128
    12d0:	01000044 	movi	r4,1
    12d4:	01400804 	movi	r5,32
    12d8:	5affe004 	addi	r11,r11,-128
    12dc:	003d9b06 	br	94c <___vfprintf_internal_r+0x13c>
    12e0:	21003fcc 	andi	r4,r4,255
    12e4:	20051e1e 	bne	r4,zero,2760 <___vfprintf_internal_r+0x1f50>
    12e8:	00800074 	movhi	r2,1
    12ec:	10801404 	addi	r2,r2,80
    12f0:	d8800c15 	stw	r2,48(sp)
    12f4:	6080080c 	andi	r2,r12,32
    12f8:	103f7b1e 	bne	r2,zero,10e8 <___vfprintf_internal_r+0x8d8>
    12fc:	d9000617 	ldw	r4,24(sp)
    1300:	6080040c 	andi	r2,r12,16
    1304:	20c00104 	addi	r3,r4,4
    1308:	10025b1e 	bne	r2,zero,1c78 <___vfprintf_internal_r+0x1468>
    130c:	6080100c 	andi	r2,r12,64
    1310:	10046026 	beq	r2,zero,2494 <___vfprintf_internal_r+0x1c84>
    1314:	d8800617 	ldw	r2,24(sp)
    1318:	002b883a 	mov	r21,zero
    131c:	d8c00615 	stw	r3,24(sp)
    1320:	1500000b 	ldhu	r20,0(r2)
    1324:	003f7506 	br	10fc <___vfprintf_internal_r+0x8ec>
    1328:	d8800617 	ldw	r2,24(sp)
    132c:	d8001345 	stb	zero,77(sp)
    1330:	14400017 	ldw	r17,0(r2)
    1334:	10c00104 	addi	r3,r2,4
    1338:	88028e26 	beq	r17,zero,1d74 <___vfprintf_internal_r+0x1564>
    133c:	40bfffe0 	cmpeqi	r2,r8,-1
    1340:	1003c01e 	bne	r2,zero,2244 <___vfprintf_internal_r+0x1a34>
    1344:	400d883a 	mov	r6,r8
    1348:	000b883a 	mov	r5,zero
    134c:	8809883a 	mov	r4,r17
    1350:	d8c00715 	stw	r3,28(sp)
    1354:	db000615 	stw	r12,24(sp)
    1358:	da000415 	stw	r8,16(sp)
    135c:	000624c0 	call	624c <memchr>
    1360:	da000417 	ldw	r8,16(sp)
    1364:	db000617 	ldw	r12,24(sp)
    1368:	d8c00717 	ldw	r3,28(sp)
    136c:	1004ec26 	beq	r2,zero,2720 <___vfprintf_internal_r+0x1f10>
    1370:	146bc83a 	sub	r21,r2,r17
    1374:	a829883a 	mov	r20,r21
    1378:	d8c00615 	stw	r3,24(sp)
    137c:	003dea06 	br	b28 <___vfprintf_internal_r+0x318>
    1380:	bac00007 	ldb	r11,0(r23)
    1384:	63000814 	ori	r12,r12,32
    1388:	003d7006 	br	94c <___vfprintf_internal_r+0x13c>
    138c:	d8c00617 	ldw	r3,24(sp)
    1390:	00800c04 	movi	r2,48
    1394:	d8801385 	stb	r2,78(sp)
    1398:	00801e04 	movi	r2,120
    139c:	01000074 	movhi	r4,1
    13a0:	d88013c5 	stb	r2,79(sp)
    13a4:	18800104 	addi	r2,r3,4
    13a8:	d8800615 	stw	r2,24(sp)
    13ac:	20801404 	addi	r2,r4,80
    13b0:	d8800c15 	stw	r2,48(sp)
    13b4:	1d000017 	ldw	r20,0(r3)
    13b8:	002b883a 	mov	r21,zero
    13bc:	63000094 	ori	r12,r12,2
    13c0:	00800084 	movi	r2,2
    13c4:	07001e04 	movi	fp,120
    13c8:	003e5e06 	br	d44 <___vfprintf_internal_r+0x534>
    13cc:	21003fcc 	andi	r4,r4,255
    13d0:	2004e71e 	bne	r4,zero,2770 <___vfprintf_internal_r+0x1f60>
    13d4:	d9000617 	ldw	r4,24(sp)
    13d8:	6080080c 	andi	r2,r12,32
    13dc:	20c00017 	ldw	r3,0(r4)
    13e0:	21000104 	addi	r4,r4,4
    13e4:	d9000615 	stw	r4,24(sp)
    13e8:	10021e1e 	bne	r2,zero,1c64 <___vfprintf_internal_r+0x1454>
    13ec:	6080040c 	andi	r2,r12,16
    13f0:	1002ae1e 	bne	r2,zero,1eac <___vfprintf_internal_r+0x169c>
    13f4:	6300100c 	andi	r12,r12,64
    13f8:	6002ac26 	beq	r12,zero,1eac <___vfprintf_internal_r+0x169c>
    13fc:	d8800517 	ldw	r2,20(sp)
    1400:	1880000d 	sth	r2,0(r3)
    1404:	003d3906 	br	8ec <___vfprintf_internal_r+0xdc>
    1408:	bac00007 	ldb	r11,0(r23)
    140c:	58801b18 	cmpnei	r2,r11,108
    1410:	10024926 	beq	r2,zero,1d38 <___vfprintf_internal_r+0x1528>
    1414:	63000414 	ori	r12,r12,16
    1418:	003d4c06 	br	94c <___vfprintf_internal_r+0x13c>
    141c:	e2c01990 	cmplti	r11,fp,102
    1420:	5800cb1e 	bne	r11,zero,1750 <___vfprintf_internal_r+0xf40>
    1424:	d9000917 	ldw	r4,36(sp)
    1428:	d9400a17 	ldw	r5,40(sp)
    142c:	000d883a 	mov	r6,zero
    1430:	000f883a 	mov	r7,zero
    1434:	d8c00e15 	stw	r3,56(sp)
    1438:	000c5940 	call	c594 <__eqdf2>
    143c:	d8c00e17 	ldw	r3,56(sp)
    1440:	1001641e 	bne	r2,zero,19d4 <___vfprintf_internal_r+0x11c4>
    1444:	d8801b17 	ldw	r2,108(sp)
    1448:	01000074 	movhi	r4,1
    144c:	21002004 	addi	r4,r4,128
    1450:	10800044 	addi	r2,r2,1
    1454:	18c00044 	addi	r3,r3,1
    1458:	b1000015 	stw	r4,0(r22)
    145c:	01000044 	movi	r4,1
    1460:	d8801b15 	stw	r2,108(sp)
    1464:	b1000115 	stw	r4,4(r22)
    1468:	d8c01c15 	stw	r3,112(sp)
    146c:	10800208 	cmpgei	r2,r2,8
    1470:	1003621e 	bne	r2,zero,21fc <___vfprintf_internal_r+0x19ec>
    1474:	b5800204 	addi	r22,r22,8
    1478:	d8801417 	ldw	r2,80(sp)
    147c:	d9000817 	ldw	r4,32(sp)
    1480:	1101e70e 	bge	r2,r4,1c20 <___vfprintf_internal_r+0x1410>
    1484:	d8800d17 	ldw	r2,52(sp)
    1488:	d9000b17 	ldw	r4,44(sp)
    148c:	b0800015 	stw	r2,0(r22)
    1490:	d8801b17 	ldw	r2,108(sp)
    1494:	1907883a 	add	r3,r3,r4
    1498:	b1000115 	stw	r4,4(r22)
    149c:	10800044 	addi	r2,r2,1
    14a0:	d8801b15 	stw	r2,108(sp)
    14a4:	d8c01c15 	stw	r3,112(sp)
    14a8:	10800208 	cmpgei	r2,r2,8
    14ac:	1002291e 	bne	r2,zero,1d54 <___vfprintf_internal_r+0x1544>
    14b0:	b5800204 	addi	r22,r22,8
    14b4:	d8800817 	ldw	r2,32(sp)
    14b8:	157fffc4 	addi	r21,r2,-1
    14bc:	057dd30e 	bge	zero,r21,c0c <___vfprintf_internal_r+0x3fc>
    14c0:	01c00074 	movhi	r7,1
    14c4:	a9000450 	cmplti	r4,r21,17
    14c8:	d8801b17 	ldw	r2,108(sp)
    14cc:	39c02104 	addi	r7,r7,132
    14d0:	2003461e 	bne	r4,zero,21ec <___vfprintf_internal_r+0x19dc>
    14d4:	07000404 	movi	fp,16
    14d8:	3823883a 	mov	r17,r7
    14dc:	00000406 	br	14f0 <___vfprintf_internal_r+0xce0>
    14e0:	b5800204 	addi	r22,r22,8
    14e4:	ad7ffc04 	addi	r21,r21,-16
    14e8:	a9000448 	cmpgei	r4,r21,17
    14ec:	20033e26 	beq	r4,zero,21e8 <___vfprintf_internal_r+0x19d8>
    14f0:	10800044 	addi	r2,r2,1
    14f4:	18c00404 	addi	r3,r3,16
    14f8:	b4400015 	stw	r17,0(r22)
    14fc:	b7000115 	stw	fp,4(r22)
    1500:	d8c01c15 	stw	r3,112(sp)
    1504:	d8801b15 	stw	r2,108(sp)
    1508:	11000208 	cmpgei	r4,r2,8
    150c:	203ff426 	beq	r4,zero,14e0 <___vfprintf_internal_r+0xcd0>
    1510:	d9801a04 	addi	r6,sp,104
    1514:	900b883a 	mov	r5,r18
    1518:	9809883a 	mov	r4,r19
    151c:	0007fdc0 	call	7fdc <__sprint_r>
    1520:	103dcb1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1524:	d8c01c17 	ldw	r3,112(sp)
    1528:	d8801b17 	ldw	r2,108(sp)
    152c:	dd802704 	addi	r22,sp,156
    1530:	003fec06 	br	14e4 <___vfprintf_internal_r+0xcd4>
    1534:	8519c83a 	sub	r12,r16,r20
    1538:	033da50e 	bge	zero,r12,bd0 <___vfprintf_internal_r+0x3c0>
    153c:	01c00074 	movhi	r7,1
    1540:	61000450 	cmplti	r4,r12,17
    1544:	d8801b17 	ldw	r2,108(sp)
    1548:	39c02104 	addi	r7,r7,132
    154c:	2000281e 	bne	r4,zero,15f0 <___vfprintf_internal_r+0xde0>
    1550:	dc400e15 	stw	r17,56(sp)
    1554:	dc000f15 	stw	r16,60(sp)
    1558:	b009883a 	mov	r4,r22
    155c:	03400404 	movi	r13,16
    1560:	a02d883a 	mov	r22,r20
    1564:	6021883a 	mov	r16,r12
    1568:	4029883a 	mov	r20,r8
    156c:	3823883a 	mov	r17,r7
    1570:	00000406 	br	1584 <___vfprintf_internal_r+0xd74>
    1574:	843ffc04 	addi	r16,r16,-16
    1578:	81400448 	cmpgei	r5,r16,17
    157c:	21000204 	addi	r4,r4,8
    1580:	28001426 	beq	r5,zero,15d4 <___vfprintf_internal_r+0xdc4>
    1584:	10800044 	addi	r2,r2,1
    1588:	18c00404 	addi	r3,r3,16
    158c:	24400015 	stw	r17,0(r4)
    1590:	23400115 	stw	r13,4(r4)
    1594:	d8c01c15 	stw	r3,112(sp)
    1598:	d8801b15 	stw	r2,108(sp)
    159c:	11400208 	cmpgei	r5,r2,8
    15a0:	283ff426 	beq	r5,zero,1574 <___vfprintf_internal_r+0xd64>
    15a4:	d9801a04 	addi	r6,sp,104
    15a8:	900b883a 	mov	r5,r18
    15ac:	9809883a 	mov	r4,r19
    15b0:	0007fdc0 	call	7fdc <__sprint_r>
    15b4:	103da61e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    15b8:	843ffc04 	addi	r16,r16,-16
    15bc:	81400448 	cmpgei	r5,r16,17
    15c0:	d8c01c17 	ldw	r3,112(sp)
    15c4:	d8801b17 	ldw	r2,108(sp)
    15c8:	d9002704 	addi	r4,sp,156
    15cc:	03400404 	movi	r13,16
    15d0:	283fec1e 	bne	r5,zero,1584 <___vfprintf_internal_r+0xd74>
    15d4:	8019883a 	mov	r12,r16
    15d8:	880f883a 	mov	r7,r17
    15dc:	dc000f17 	ldw	r16,60(sp)
    15e0:	dc400e17 	ldw	r17,56(sp)
    15e4:	a011883a 	mov	r8,r20
    15e8:	b029883a 	mov	r20,r22
    15ec:	202d883a 	mov	r22,r4
    15f0:	10800044 	addi	r2,r2,1
    15f4:	1b07883a 	add	r3,r3,r12
    15f8:	d8801b15 	stw	r2,108(sp)
    15fc:	b1c00015 	stw	r7,0(r22)
    1600:	b3000115 	stw	r12,4(r22)
    1604:	d8c01c15 	stw	r3,112(sp)
    1608:	10800208 	cmpgei	r2,r2,8
    160c:	1003031e 	bne	r2,zero,221c <___vfprintf_internal_r+0x1a0c>
    1610:	4551c83a 	sub	r8,r8,r21
    1614:	b5800204 	addi	r22,r22,8
    1618:	023d6f0e 	bge	zero,r8,bd8 <___vfprintf_internal_r+0x3c8>
    161c:	01c00074 	movhi	r7,1
    1620:	41000450 	cmplti	r4,r8,17
    1624:	d8801b17 	ldw	r2,108(sp)
    1628:	39c02104 	addi	r7,r7,132
    162c:	2000221e 	bne	r4,zero,16b8 <___vfprintf_internal_r+0xea8>
    1630:	dc400e15 	stw	r17,56(sp)
    1634:	dc000f15 	stw	r16,60(sp)
    1638:	03000404 	movi	r12,16
    163c:	4021883a 	mov	r16,r8
    1640:	3823883a 	mov	r17,r7
    1644:	00000406 	br	1658 <___vfprintf_internal_r+0xe48>
    1648:	843ffc04 	addi	r16,r16,-16
    164c:	81000448 	cmpgei	r4,r16,17
    1650:	b5800204 	addi	r22,r22,8
    1654:	20001426 	beq	r4,zero,16a8 <___vfprintf_internal_r+0xe98>
    1658:	10800044 	addi	r2,r2,1
    165c:	18c00404 	addi	r3,r3,16
    1660:	b4400015 	stw	r17,0(r22)
    1664:	b3000115 	stw	r12,4(r22)
    1668:	d8c01c15 	stw	r3,112(sp)
    166c:	d8801b15 	stw	r2,108(sp)
    1670:	11000208 	cmpgei	r4,r2,8
    1674:	203ff426 	beq	r4,zero,1648 <___vfprintf_internal_r+0xe38>
    1678:	d9801a04 	addi	r6,sp,104
    167c:	900b883a 	mov	r5,r18
    1680:	9809883a 	mov	r4,r19
    1684:	0007fdc0 	call	7fdc <__sprint_r>
    1688:	103d711e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    168c:	843ffc04 	addi	r16,r16,-16
    1690:	81000448 	cmpgei	r4,r16,17
    1694:	d8c01c17 	ldw	r3,112(sp)
    1698:	d8801b17 	ldw	r2,108(sp)
    169c:	dd802704 	addi	r22,sp,156
    16a0:	03000404 	movi	r12,16
    16a4:	203fec1e 	bne	r4,zero,1658 <___vfprintf_internal_r+0xe48>
    16a8:	8011883a 	mov	r8,r16
    16ac:	880f883a 	mov	r7,r17
    16b0:	dc000f17 	ldw	r16,60(sp)
    16b4:	dc400e17 	ldw	r17,56(sp)
    16b8:	10800044 	addi	r2,r2,1
    16bc:	1a07883a 	add	r3,r3,r8
    16c0:	d8801b15 	stw	r2,108(sp)
    16c4:	b1c00015 	stw	r7,0(r22)
    16c8:	b2000115 	stw	r8,4(r22)
    16cc:	d8c01c15 	stw	r3,112(sp)
    16d0:	10800208 	cmpgei	r2,r2,8
    16d4:	10014a1e 	bne	r2,zero,1c00 <___vfprintf_internal_r+0x13f0>
    16d8:	b5800204 	addi	r22,r22,8
    16dc:	003d3e06 	br	bd8 <___vfprintf_internal_r+0x3c8>
    16e0:	10c00060 	cmpeqi	r3,r2,1
    16e4:	1803bc1e 	bne	r3,zero,25d8 <___vfprintf_internal_r+0x1dc8>
    16e8:	108000a0 	cmpeqi	r2,r2,2
    16ec:	db000417 	ldw	r12,16(sp)
    16f0:	103eaa26 	beq	r2,zero,119c <___vfprintf_internal_r+0x98c>
    16f4:	d9000c17 	ldw	r4,48(sp)
    16f8:	dc402704 	addi	r17,sp,156
    16fc:	a08003cc 	andi	r2,r20,15
    1700:	a806973a 	slli	r3,r21,28
    1704:	a028d13a 	srli	r20,r20,4
    1708:	2085883a 	add	r2,r4,r2
    170c:	10800003 	ldbu	r2,0(r2)
    1710:	a82ad13a 	srli	r21,r21,4
    1714:	1d28b03a 	or	r20,r3,r20
    1718:	88bfffc5 	stb	r2,-1(r17)
    171c:	a544b03a 	or	r2,r20,r21
    1720:	8c7fffc4 	addi	r17,r17,-1
    1724:	103ff51e 	bne	r2,zero,16fc <___vfprintf_internal_r+0xeec>
    1728:	d8802704 	addi	r2,sp,156
    172c:	146bc83a 	sub	r21,r2,r17
    1730:	db000415 	stw	r12,16(sp)
    1734:	003e4e06 	br	1070 <___vfprintf_internal_r+0x860>
    1738:	d9801a04 	addi	r6,sp,104
    173c:	900b883a 	mov	r5,r18
    1740:	9809883a 	mov	r4,r19
    1744:	0007fdc0 	call	7fdc <__sprint_r>
    1748:	103d3b26 	beq	r2,zero,c38 <___vfprintf_internal_r+0x428>
    174c:	003d4006 	br	c50 <___vfprintf_internal_r+0x440>
    1750:	d8800817 	ldw	r2,32(sp)
    1754:	da001b17 	ldw	r8,108(sp)
    1758:	18c00044 	addi	r3,r3,1
    175c:	10800088 	cmpgei	r2,r2,2
    1760:	45400044 	addi	r21,r8,1
    1764:	b7000204 	addi	fp,r22,8
    1768:	1000f826 	beq	r2,zero,1b4c <___vfprintf_internal_r+0x133c>
    176c:	00800044 	movi	r2,1
    1770:	b0800115 	stw	r2,4(r22)
    1774:	b4400015 	stw	r17,0(r22)
    1778:	d8c01c15 	stw	r3,112(sp)
    177c:	dd401b15 	stw	r21,108(sp)
    1780:	a8800210 	cmplti	r2,r21,8
    1784:	1001cc26 	beq	r2,zero,1eb8 <___vfprintf_internal_r+0x16a8>
    1788:	d8800b17 	ldw	r2,44(sp)
    178c:	d9000d17 	ldw	r4,52(sp)
    1790:	ad400044 	addi	r21,r21,1
    1794:	1887883a 	add	r3,r3,r2
    1798:	e0800115 	stw	r2,4(fp)
    179c:	e1000015 	stw	r4,0(fp)
    17a0:	d8c01c15 	stw	r3,112(sp)
    17a4:	dd401b15 	stw	r21,108(sp)
    17a8:	a8800208 	cmpgei	r2,r21,8
    17ac:	1001cb1e 	bne	r2,zero,1edc <___vfprintf_internal_r+0x16cc>
    17b0:	e7000204 	addi	fp,fp,8
    17b4:	d9000917 	ldw	r4,36(sp)
    17b8:	d9400a17 	ldw	r5,40(sp)
    17bc:	aa000044 	addi	r8,r21,1
    17c0:	000d883a 	mov	r6,zero
    17c4:	000f883a 	mov	r7,zero
    17c8:	d8c00e15 	stw	r3,56(sp)
    17cc:	da000715 	stw	r8,28(sp)
    17d0:	000c5940 	call	c594 <__eqdf2>
    17d4:	d8c00817 	ldw	r3,32(sp)
    17d8:	da000717 	ldw	r8,28(sp)
    17dc:	e5800204 	addi	r22,fp,8
    17e0:	1affffc4 	addi	r11,r3,-1
    17e4:	d8c00e17 	ldw	r3,56(sp)
    17e8:	1000e526 	beq	r2,zero,1b80 <___vfprintf_internal_r+0x1370>
    17ec:	8a400044 	addi	r9,r17,1
    17f0:	1ac7883a 	add	r3,r3,r11
    17f4:	da001b15 	stw	r8,108(sp)
    17f8:	e2400015 	stw	r9,0(fp)
    17fc:	e2c00115 	stw	r11,4(fp)
    1800:	d8c01c15 	stw	r3,112(sp)
    1804:	42000208 	cmpgei	r8,r8,8
    1808:	40013e1e 	bne	r8,zero,1d04 <___vfprintf_internal_r+0x14f4>
    180c:	e0800404 	addi	r2,fp,16
    1810:	aa000084 	addi	r8,r21,2
    1814:	b039883a 	mov	fp,r22
    1818:	102d883a 	mov	r22,r2
    181c:	d9001017 	ldw	r4,64(sp)
    1820:	d8801644 	addi	r2,sp,89
    1824:	da001b15 	stw	r8,108(sp)
    1828:	20c7883a 	add	r3,r4,r3
    182c:	e0800015 	stw	r2,0(fp)
    1830:	e1000115 	stw	r4,4(fp)
    1834:	d8c01c15 	stw	r3,112(sp)
    1838:	42000210 	cmplti	r8,r8,8
    183c:	403cf31e 	bne	r8,zero,c0c <___vfprintf_internal_r+0x3fc>
    1840:	d9801a04 	addi	r6,sp,104
    1844:	900b883a 	mov	r5,r18
    1848:	9809883a 	mov	r4,r19
    184c:	0007fdc0 	call	7fdc <__sprint_r>
    1850:	103cff1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1854:	d8c01c17 	ldw	r3,112(sp)
    1858:	dd802704 	addi	r22,sp,156
    185c:	003ceb06 	br	c0c <___vfprintf_internal_r+0x3fc>
    1860:	db000417 	ldw	r12,16(sp)
    1864:	003e4906 	br	118c <___vfprintf_internal_r+0x97c>
    1868:	03000074 	movhi	r12,1
    186c:	39000450 	cmplti	r4,r7,17
    1870:	d8801b17 	ldw	r2,108(sp)
    1874:	63002504 	addi	r12,r12,148
    1878:	2000321e 	bne	r4,zero,1944 <___vfprintf_internal_r+0x1134>
    187c:	dc401115 	stw	r17,68(sp)
    1880:	b009883a 	mov	r4,r22
    1884:	9023883a 	mov	r17,r18
    1888:	a82d883a 	mov	r22,r21
    188c:	ddc01215 	stw	r23,72(sp)
    1890:	03c00404 	movi	r15,16
    1894:	a02f883a 	mov	r23,r20
    1898:	db800e15 	stw	r14,56(sp)
    189c:	8029883a 	mov	r20,r16
    18a0:	db400f15 	stw	r13,60(sp)
    18a4:	402b883a 	mov	r21,r8
    18a8:	3821883a 	mov	r16,r7
    18ac:	6025883a 	mov	r18,r12
    18b0:	00000406 	br	18c4 <___vfprintf_internal_r+0x10b4>
    18b4:	843ffc04 	addi	r16,r16,-16
    18b8:	81800448 	cmpgei	r6,r16,17
    18bc:	21000204 	addi	r4,r4,8
    18c0:	30001426 	beq	r6,zero,1914 <___vfprintf_internal_r+0x1104>
    18c4:	10800044 	addi	r2,r2,1
    18c8:	18c00404 	addi	r3,r3,16
    18cc:	24800015 	stw	r18,0(r4)
    18d0:	23c00115 	stw	r15,4(r4)
    18d4:	d8c01c15 	stw	r3,112(sp)
    18d8:	d8801b15 	stw	r2,108(sp)
    18dc:	11800208 	cmpgei	r6,r2,8
    18e0:	303ff426 	beq	r6,zero,18b4 <___vfprintf_internal_r+0x10a4>
    18e4:	d9801a04 	addi	r6,sp,104
    18e8:	880b883a 	mov	r5,r17
    18ec:	9809883a 	mov	r4,r19
    18f0:	0007fdc0 	call	7fdc <__sprint_r>
    18f4:	1001b91e 	bne	r2,zero,1fdc <___vfprintf_internal_r+0x17cc>
    18f8:	843ffc04 	addi	r16,r16,-16
    18fc:	81800448 	cmpgei	r6,r16,17
    1900:	d8c01c17 	ldw	r3,112(sp)
    1904:	d8801b17 	ldw	r2,108(sp)
    1908:	d9002704 	addi	r4,sp,156
    190c:	03c00404 	movi	r15,16
    1910:	303fec1e 	bne	r6,zero,18c4 <___vfprintf_internal_r+0x10b4>
    1914:	800f883a 	mov	r7,r16
    1918:	9019883a 	mov	r12,r18
    191c:	a021883a 	mov	r16,r20
    1920:	8825883a 	mov	r18,r17
    1924:	b829883a 	mov	r20,r23
    1928:	db800e17 	ldw	r14,56(sp)
    192c:	db400f17 	ldw	r13,60(sp)
    1930:	ddc01217 	ldw	r23,72(sp)
    1934:	dc401117 	ldw	r17,68(sp)
    1938:	a811883a 	mov	r8,r21
    193c:	b02b883a 	mov	r21,r22
    1940:	202d883a 	mov	r22,r4
    1944:	10800044 	addi	r2,r2,1
    1948:	19c7883a 	add	r3,r3,r7
    194c:	d8801b15 	stw	r2,108(sp)
    1950:	b3000015 	stw	r12,0(r22)
    1954:	b1c00115 	stw	r7,4(r22)
    1958:	d8c01c15 	stw	r3,112(sp)
    195c:	10800208 	cmpgei	r2,r2,8
    1960:	1001671e 	bne	r2,zero,1f00 <___vfprintf_internal_r+0x16f0>
    1964:	b5800204 	addi	r22,r22,8
    1968:	003c7c06 	br	b5c <___vfprintf_internal_r+0x34c>
    196c:	d9801a04 	addi	r6,sp,104
    1970:	900b883a 	mov	r5,r18
    1974:	9809883a 	mov	r4,r19
    1978:	da001115 	stw	r8,68(sp)
    197c:	db400f15 	stw	r13,60(sp)
    1980:	db800e15 	stw	r14,56(sp)
    1984:	0007fdc0 	call	7fdc <__sprint_r>
    1988:	103cb11e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    198c:	d8c01c17 	ldw	r3,112(sp)
    1990:	da001117 	ldw	r8,68(sp)
    1994:	db400f17 	ldw	r13,60(sp)
    1998:	db800e17 	ldw	r14,56(sp)
    199c:	dd802704 	addi	r22,sp,156
    19a0:	003c7c06 	br	b94 <___vfprintf_internal_r+0x384>
    19a4:	d9801a04 	addi	r6,sp,104
    19a8:	900b883a 	mov	r5,r18
    19ac:	9809883a 	mov	r4,r19
    19b0:	da000f15 	stw	r8,60(sp)
    19b4:	db400e15 	stw	r13,56(sp)
    19b8:	0007fdc0 	call	7fdc <__sprint_r>
    19bc:	103ca41e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    19c0:	d8c01c17 	ldw	r3,112(sp)
    19c4:	da000f17 	ldw	r8,60(sp)
    19c8:	db400e17 	ldw	r13,56(sp)
    19cc:	dd802704 	addi	r22,sp,156
    19d0:	003c7d06 	br	bc8 <___vfprintf_internal_r+0x3b8>
    19d4:	d9401417 	ldw	r5,80(sp)
    19d8:	0141570e 	bge	zero,r5,1f38 <___vfprintf_internal_r+0x1728>
    19dc:	d8800717 	ldw	r2,28(sp)
    19e0:	d9000817 	ldw	r4,32(sp)
    19e4:	102b883a 	mov	r21,r2
    19e8:	2080b916 	blt	r4,r2,1cd0 <___vfprintf_internal_r+0x14c0>
    19ec:	05400a0e 	bge	zero,r21,1a18 <___vfprintf_internal_r+0x1208>
    19f0:	d8801b17 	ldw	r2,108(sp)
    19f4:	1d47883a 	add	r3,r3,r21
    19f8:	b4400015 	stw	r17,0(r22)
    19fc:	10800044 	addi	r2,r2,1
    1a00:	d8801b15 	stw	r2,108(sp)
    1a04:	b5400115 	stw	r21,4(r22)
    1a08:	d8c01c15 	stw	r3,112(sp)
    1a0c:	10800208 	cmpgei	r2,r2,8
    1a10:	10032d1e 	bne	r2,zero,26c8 <___vfprintf_internal_r+0x1eb8>
    1a14:	b5800204 	addi	r22,r22,8
    1a18:	a800c516 	blt	r21,zero,1d30 <___vfprintf_internal_r+0x1520>
    1a1c:	d8800717 	ldw	r2,28(sp)
    1a20:	156bc83a 	sub	r21,r2,r21
    1a24:	0540db16 	blt	zero,r21,1d94 <___vfprintf_internal_r+0x1584>
    1a28:	dd401417 	ldw	r21,80(sp)
    1a2c:	d8800817 	ldw	r2,32(sp)
    1a30:	a880aa0e 	bge	r21,r2,1cdc <___vfprintf_internal_r+0x14cc>
    1a34:	d8800d17 	ldw	r2,52(sp)
    1a38:	d9000b17 	ldw	r4,44(sp)
    1a3c:	b0800015 	stw	r2,0(r22)
    1a40:	d8801b17 	ldw	r2,108(sp)
    1a44:	1907883a 	add	r3,r3,r4
    1a48:	b1000115 	stw	r4,4(r22)
    1a4c:	10800044 	addi	r2,r2,1
    1a50:	d8801b15 	stw	r2,108(sp)
    1a54:	d8c01c15 	stw	r3,112(sp)
    1a58:	10800208 	cmpgei	r2,r2,8
    1a5c:	1003111e 	bne	r2,zero,26a4 <___vfprintf_internal_r+0x1e94>
    1a60:	b5800204 	addi	r22,r22,8
    1a64:	d9000817 	ldw	r4,32(sp)
    1a68:	d9400717 	ldw	r5,28(sp)
    1a6c:	2545c83a 	sub	r2,r4,r21
    1a70:	2149c83a 	sub	r4,r4,r5
    1a74:	102b883a 	mov	r21,r2
    1a78:	2080010e 	bge	r4,r2,1a80 <___vfprintf_internal_r+0x1270>
    1a7c:	202b883a 	mov	r21,r4
    1a80:	05400c0e 	bge	zero,r21,1ab4 <___vfprintf_internal_r+0x12a4>
    1a84:	d9000717 	ldw	r4,28(sp)
    1a88:	1d47883a 	add	r3,r3,r21
    1a8c:	b5400115 	stw	r21,4(r22)
    1a90:	8913883a 	add	r9,r17,r4
    1a94:	d9001b17 	ldw	r4,108(sp)
    1a98:	b2400015 	stw	r9,0(r22)
    1a9c:	d8c01c15 	stw	r3,112(sp)
    1aa0:	21000044 	addi	r4,r4,1
    1aa4:	d9001b15 	stw	r4,108(sp)
    1aa8:	21000208 	cmpgei	r4,r4,8
    1aac:	2003111e 	bne	r4,zero,26f4 <___vfprintf_internal_r+0x1ee4>
    1ab0:	b5800204 	addi	r22,r22,8
    1ab4:	a800010e 	bge	r21,zero,1abc <___vfprintf_internal_r+0x12ac>
    1ab8:	002b883a 	mov	r21,zero
    1abc:	156bc83a 	sub	r21,r2,r21
    1ac0:	057c520e 	bge	zero,r21,c0c <___vfprintf_internal_r+0x3fc>
    1ac4:	01c00074 	movhi	r7,1
    1ac8:	a9000450 	cmplti	r4,r21,17
    1acc:	d8801b17 	ldw	r2,108(sp)
    1ad0:	39c02104 	addi	r7,r7,132
    1ad4:	2001c51e 	bne	r4,zero,21ec <___vfprintf_internal_r+0x19dc>
    1ad8:	07000404 	movi	fp,16
    1adc:	3823883a 	mov	r17,r7
    1ae0:	00000406 	br	1af4 <___vfprintf_internal_r+0x12e4>
    1ae4:	b5800204 	addi	r22,r22,8
    1ae8:	ad7ffc04 	addi	r21,r21,-16
    1aec:	a9000448 	cmpgei	r4,r21,17
    1af0:	2001bd26 	beq	r4,zero,21e8 <___vfprintf_internal_r+0x19d8>
    1af4:	10800044 	addi	r2,r2,1
    1af8:	18c00404 	addi	r3,r3,16
    1afc:	b4400015 	stw	r17,0(r22)
    1b00:	b7000115 	stw	fp,4(r22)
    1b04:	d8c01c15 	stw	r3,112(sp)
    1b08:	d8801b15 	stw	r2,108(sp)
    1b0c:	11000208 	cmpgei	r4,r2,8
    1b10:	203ff426 	beq	r4,zero,1ae4 <___vfprintf_internal_r+0x12d4>
    1b14:	d9801a04 	addi	r6,sp,104
    1b18:	900b883a 	mov	r5,r18
    1b1c:	9809883a 	mov	r4,r19
    1b20:	0007fdc0 	call	7fdc <__sprint_r>
    1b24:	103c4a1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1b28:	d8c01c17 	ldw	r3,112(sp)
    1b2c:	d8801b17 	ldw	r2,108(sp)
    1b30:	dd802704 	addi	r22,sp,156
    1b34:	003fec06 	br	1ae8 <___vfprintf_internal_r+0x12d8>
    1b38:	4002a71e 	bne	r8,zero,25d8 <___vfprintf_internal_r+0x1dc8>
    1b3c:	0011883a 	mov	r8,zero
    1b40:	002b883a 	mov	r21,zero
    1b44:	dc402704 	addi	r17,sp,156
    1b48:	003d4906 	br	1070 <___vfprintf_internal_r+0x860>
    1b4c:	d8800417 	ldw	r2,16(sp)
    1b50:	1080004c 	andi	r2,r2,1
    1b54:	103f051e 	bne	r2,zero,176c <___vfprintf_internal_r+0xf5c>
    1b58:	00800044 	movi	r2,1
    1b5c:	dd401b15 	stw	r21,108(sp)
    1b60:	b4400015 	stw	r17,0(r22)
    1b64:	b0800115 	stw	r2,4(r22)
    1b68:	d8c01c15 	stw	r3,112(sp)
    1b6c:	ad400208 	cmpgei	r21,r21,8
    1b70:	a800641e 	bne	r21,zero,1d04 <___vfprintf_internal_r+0x14f4>
    1b74:	42000084 	addi	r8,r8,2
    1b78:	b5800404 	addi	r22,r22,16
    1b7c:	003f2706 	br	181c <___vfprintf_internal_r+0x100c>
    1b80:	02ff260e 	bge	zero,r11,181c <___vfprintf_internal_r+0x100c>
    1b84:	58800450 	cmplti	r2,r11,17
    1b88:	01c00074 	movhi	r7,1
    1b8c:	10034c1e 	bne	r2,zero,28c0 <___vfprintf_internal_r+0x20b0>
    1b90:	39c02104 	addi	r7,r7,132
    1b94:	dc000715 	stw	r16,28(sp)
    1b98:	05800404 	movi	r22,16
    1b9c:	5823883a 	mov	r17,r11
    1ba0:	3821883a 	mov	r16,r7
    1ba4:	402b883a 	mov	r21,r8
    1ba8:	00000506 	br	1bc0 <___vfprintf_internal_r+0x13b0>
    1bac:	e7000204 	addi	fp,fp,8
    1bb0:	8c7ffc04 	addi	r17,r17,-16
    1bb4:	88800448 	cmpgei	r2,r17,17
    1bb8:	1001d626 	beq	r2,zero,2314 <___vfprintf_internal_r+0x1b04>
    1bbc:	ad400044 	addi	r21,r21,1
    1bc0:	18c00404 	addi	r3,r3,16
    1bc4:	e4000015 	stw	r16,0(fp)
    1bc8:	e5800115 	stw	r22,4(fp)
    1bcc:	d8c01c15 	stw	r3,112(sp)
    1bd0:	dd401b15 	stw	r21,108(sp)
    1bd4:	a8800208 	cmpgei	r2,r21,8
    1bd8:	103ff426 	beq	r2,zero,1bac <___vfprintf_internal_r+0x139c>
    1bdc:	d9801a04 	addi	r6,sp,104
    1be0:	900b883a 	mov	r5,r18
    1be4:	9809883a 	mov	r4,r19
    1be8:	0007fdc0 	call	7fdc <__sprint_r>
    1bec:	103c181e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1bf0:	dd401b17 	ldw	r21,108(sp)
    1bf4:	d8c01c17 	ldw	r3,112(sp)
    1bf8:	df002704 	addi	fp,sp,156
    1bfc:	003fec06 	br	1bb0 <___vfprintf_internal_r+0x13a0>
    1c00:	d9801a04 	addi	r6,sp,104
    1c04:	900b883a 	mov	r5,r18
    1c08:	9809883a 	mov	r4,r19
    1c0c:	0007fdc0 	call	7fdc <__sprint_r>
    1c10:	103c0f1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1c14:	d8c01c17 	ldw	r3,112(sp)
    1c18:	dd802704 	addi	r22,sp,156
    1c1c:	003bee06 	br	bd8 <___vfprintf_internal_r+0x3c8>
    1c20:	d8800417 	ldw	r2,16(sp)
    1c24:	1080004c 	andi	r2,r2,1
    1c28:	103bf826 	beq	r2,zero,c0c <___vfprintf_internal_r+0x3fc>
    1c2c:	003e1506 	br	1484 <___vfprintf_internal_r+0xc74>
    1c30:	dc402704 	addi	r17,sp,156
    1c34:	003d0e06 	br	1070 <___vfprintf_internal_r+0x860>
    1c38:	00800c04 	movi	r2,48
    1c3c:	d8801385 	stb	r2,78(sp)
    1c40:	df0013c5 	stb	fp,79(sp)
    1c44:	63000094 	ori	r12,r12,2
    1c48:	00800084 	movi	r2,2
    1c4c:	003c3d06 	br	d44 <___vfprintf_internal_r+0x534>
    1c50:	25000017 	ldw	r20,0(r4)
    1c54:	002b883a 	mov	r21,zero
    1c58:	d8c00615 	stw	r3,24(sp)
    1c5c:	00800044 	movi	r2,1
    1c60:	003c3806 	br	d44 <___vfprintf_internal_r+0x534>
    1c64:	d9000517 	ldw	r4,20(sp)
    1c68:	2005d7fa 	srai	r2,r4,31
    1c6c:	19000015 	stw	r4,0(r3)
    1c70:	18800115 	stw	r2,4(r3)
    1c74:	003b1d06 	br	8ec <___vfprintf_internal_r+0xdc>
    1c78:	25000017 	ldw	r20,0(r4)
    1c7c:	002b883a 	mov	r21,zero
    1c80:	d8c00615 	stw	r3,24(sp)
    1c84:	003d1d06 	br	10fc <___vfprintf_internal_r+0x8ec>
    1c88:	25000017 	ldw	r20,0(r4)
    1c8c:	002b883a 	mov	r21,zero
    1c90:	d8c00615 	stw	r3,24(sp)
    1c94:	0005883a 	mov	r2,zero
    1c98:	003c2a06 	br	d44 <___vfprintf_internal_r+0x534>
    1c9c:	18800017 	ldw	r2,0(r3)
    1ca0:	d8800915 	stw	r2,36(sp)
    1ca4:	18800117 	ldw	r2,4(r3)
    1ca8:	d8800a15 	stw	r2,40(sp)
    1cac:	003c5b06 	br	e1c <___vfprintf_internal_r+0x60c>
    1cb0:	25000017 	ldw	r20,0(r4)
    1cb4:	d8c00615 	stw	r3,24(sp)
    1cb8:	a02bd7fa 	srai	r21,r20,31
    1cbc:	a805883a 	mov	r2,r21
    1cc0:	003cd906 	br	1028 <___vfprintf_internal_r+0x818>
    1cc4:	0421c83a 	sub	r16,zero,r16
    1cc8:	d8800615 	stw	r2,24(sp)
    1ccc:	003d6306 	br	125c <___vfprintf_internal_r+0xa4c>
    1cd0:	202b883a 	mov	r21,r4
    1cd4:	057f4616 	blt	zero,r21,19f0 <___vfprintf_internal_r+0x11e0>
    1cd8:	003f4f06 	br	1a18 <___vfprintf_internal_r+0x1208>
    1cdc:	d8800417 	ldw	r2,16(sp)
    1ce0:	1080004c 	andi	r2,r2,1
    1ce4:	103f531e 	bne	r2,zero,1a34 <___vfprintf_internal_r+0x1224>
    1ce8:	d9000817 	ldw	r4,32(sp)
    1cec:	d9400717 	ldw	r5,28(sp)
    1cf0:	2545c83a 	sub	r2,r4,r21
    1cf4:	216bc83a 	sub	r21,r4,r5
    1cf8:	157f6e0e 	bge	r2,r21,1ab4 <___vfprintf_internal_r+0x12a4>
    1cfc:	102b883a 	mov	r21,r2
    1d00:	003f6c06 	br	1ab4 <___vfprintf_internal_r+0x12a4>
    1d04:	d9801a04 	addi	r6,sp,104
    1d08:	900b883a 	mov	r5,r18
    1d0c:	9809883a 	mov	r4,r19
    1d10:	0007fdc0 	call	7fdc <__sprint_r>
    1d14:	103bce1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1d18:	da001b17 	ldw	r8,108(sp)
    1d1c:	d8c01c17 	ldw	r3,112(sp)
    1d20:	dd802904 	addi	r22,sp,164
    1d24:	42000044 	addi	r8,r8,1
    1d28:	df002704 	addi	fp,sp,156
    1d2c:	003ebb06 	br	181c <___vfprintf_internal_r+0x100c>
    1d30:	002b883a 	mov	r21,zero
    1d34:	003f3906 	br	1a1c <___vfprintf_internal_r+0x120c>
    1d38:	bf000043 	ldbu	fp,1(r23)
    1d3c:	63000814 	ori	r12,r12,32
    1d40:	bdc00044 	addi	r23,r23,1
    1d44:	e2c03fcc 	andi	r11,fp,255
    1d48:	5ac0201c 	xori	r11,r11,128
    1d4c:	5affe004 	addi	r11,r11,-128
    1d50:	003afe06 	br	94c <___vfprintf_internal_r+0x13c>
    1d54:	d9801a04 	addi	r6,sp,104
    1d58:	900b883a 	mov	r5,r18
    1d5c:	9809883a 	mov	r4,r19
    1d60:	0007fdc0 	call	7fdc <__sprint_r>
    1d64:	103bba1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1d68:	d8c01c17 	ldw	r3,112(sp)
    1d6c:	dd802704 	addi	r22,sp,156
    1d70:	003dd006 	br	14b4 <___vfprintf_internal_r+0xca4>
    1d74:	408001f0 	cmpltui	r2,r8,7
    1d78:	402b883a 	mov	r21,r8
    1d7c:	1001e726 	beq	r2,zero,251c <___vfprintf_internal_r+0x1d0c>
    1d80:	04400074 	movhi	r17,1
    1d84:	a829883a 	mov	r20,r21
    1d88:	d8c00615 	stw	r3,24(sp)
    1d8c:	8c401e04 	addi	r17,r17,120
    1d90:	003b6506 	br	b28 <___vfprintf_internal_r+0x318>
    1d94:	01c00074 	movhi	r7,1
    1d98:	a9000450 	cmplti	r4,r21,17
    1d9c:	d8801b17 	ldw	r2,108(sp)
    1da0:	39c02104 	addi	r7,r7,132
    1da4:	2001c21e 	bne	r4,zero,24b0 <___vfprintf_internal_r+0x1ca0>
    1da8:	dc000e15 	stw	r16,56(sp)
    1dac:	07000404 	movi	fp,16
    1db0:	3821883a 	mov	r16,r7
    1db4:	00000406 	br	1dc8 <___vfprintf_internal_r+0x15b8>
    1db8:	b5800204 	addi	r22,r22,8
    1dbc:	ad7ffc04 	addi	r21,r21,-16
    1dc0:	a9000448 	cmpgei	r4,r21,17
    1dc4:	2001b826 	beq	r4,zero,24a8 <___vfprintf_internal_r+0x1c98>
    1dc8:	10800044 	addi	r2,r2,1
    1dcc:	18c00404 	addi	r3,r3,16
    1dd0:	b4000015 	stw	r16,0(r22)
    1dd4:	b7000115 	stw	fp,4(r22)
    1dd8:	d8c01c15 	stw	r3,112(sp)
    1ddc:	d8801b15 	stw	r2,108(sp)
    1de0:	11000208 	cmpgei	r4,r2,8
    1de4:	203ff426 	beq	r4,zero,1db8 <___vfprintf_internal_r+0x15a8>
    1de8:	d9801a04 	addi	r6,sp,104
    1dec:	900b883a 	mov	r5,r18
    1df0:	9809883a 	mov	r4,r19
    1df4:	0007fdc0 	call	7fdc <__sprint_r>
    1df8:	103b951e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1dfc:	d8c01c17 	ldw	r3,112(sp)
    1e00:	d8801b17 	ldw	r2,108(sp)
    1e04:	dd802704 	addi	r22,sp,156
    1e08:	003fec06 	br	1dbc <___vfprintf_internal_r+0x15ac>
    1e0c:	dc402704 	addi	r17,sp,156
    1e10:	a805883a 	mov	r2,r21
    1e14:	dc000715 	stw	r16,28(sp)
    1e18:	902b883a 	mov	r21,r18
    1e1c:	8821883a 	mov	r16,r17
    1e20:	db000415 	stw	r12,16(sp)
    1e24:	a023883a 	mov	r17,r20
    1e28:	da000e15 	stw	r8,56(sp)
    1e2c:	9829883a 	mov	r20,r19
    1e30:	1025883a 	mov	r18,r2
    1e34:	6827883a 	mov	r19,r13
    1e38:	8809883a 	mov	r4,r17
    1e3c:	900b883a 	mov	r5,r18
    1e40:	01800284 	movi	r6,10
    1e44:	000f883a 	mov	r7,zero
    1e48:	000ad0c0 	call	ad0c <__umoddi3>
    1e4c:	10800c04 	addi	r2,r2,48
    1e50:	8809883a 	mov	r4,r17
    1e54:	900b883a 	mov	r5,r18
    1e58:	01800284 	movi	r6,10
    1e5c:	000f883a 	mov	r7,zero
    1e60:	80bfffc5 	stb	r2,-1(r16)
    1e64:	000a7700 	call	a770 <__udivdi3>
    1e68:	900d883a 	mov	r6,r18
    1e6c:	880f883a 	mov	r7,r17
    1e70:	843fffc4 	addi	r16,r16,-1
    1e74:	1023883a 	mov	r17,r2
    1e78:	1825883a 	mov	r18,r3
    1e7c:	303fee1e 	bne	r6,zero,1e38 <___vfprintf_internal_r+0x1628>
    1e80:	39c002a8 	cmpgeui	r7,r7,10
    1e84:	383fec1e 	bne	r7,zero,1e38 <___vfprintf_internal_r+0x1628>
    1e88:	8023883a 	mov	r17,r16
    1e8c:	d8802704 	addi	r2,sp,156
    1e90:	981b883a 	mov	r13,r19
    1e94:	a825883a 	mov	r18,r21
    1e98:	dc000717 	ldw	r16,28(sp)
    1e9c:	da000e17 	ldw	r8,56(sp)
    1ea0:	a027883a 	mov	r19,r20
    1ea4:	146bc83a 	sub	r21,r2,r17
    1ea8:	003c7106 	br	1070 <___vfprintf_internal_r+0x860>
    1eac:	d8800517 	ldw	r2,20(sp)
    1eb0:	18800015 	stw	r2,0(r3)
    1eb4:	003a8d06 	br	8ec <___vfprintf_internal_r+0xdc>
    1eb8:	d9801a04 	addi	r6,sp,104
    1ebc:	900b883a 	mov	r5,r18
    1ec0:	9809883a 	mov	r4,r19
    1ec4:	0007fdc0 	call	7fdc <__sprint_r>
    1ec8:	103b611e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1ecc:	d8c01c17 	ldw	r3,112(sp)
    1ed0:	dd401b17 	ldw	r21,108(sp)
    1ed4:	df002704 	addi	fp,sp,156
    1ed8:	003e2b06 	br	1788 <___vfprintf_internal_r+0xf78>
    1edc:	d9801a04 	addi	r6,sp,104
    1ee0:	900b883a 	mov	r5,r18
    1ee4:	9809883a 	mov	r4,r19
    1ee8:	0007fdc0 	call	7fdc <__sprint_r>
    1eec:	103b581e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1ef0:	d8c01c17 	ldw	r3,112(sp)
    1ef4:	dd401b17 	ldw	r21,108(sp)
    1ef8:	df002704 	addi	fp,sp,156
    1efc:	003e2d06 	br	17b4 <___vfprintf_internal_r+0xfa4>
    1f00:	d9801a04 	addi	r6,sp,104
    1f04:	900b883a 	mov	r5,r18
    1f08:	9809883a 	mov	r4,r19
    1f0c:	da001115 	stw	r8,68(sp)
    1f10:	db400f15 	stw	r13,60(sp)
    1f14:	db800e15 	stw	r14,56(sp)
    1f18:	0007fdc0 	call	7fdc <__sprint_r>
    1f1c:	103b4c1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    1f20:	d8c01c17 	ldw	r3,112(sp)
    1f24:	da001117 	ldw	r8,68(sp)
    1f28:	db400f17 	ldw	r13,60(sp)
    1f2c:	db800e17 	ldw	r14,56(sp)
    1f30:	dd802704 	addi	r22,sp,156
    1f34:	003b0906 	br	b5c <___vfprintf_internal_r+0x34c>
    1f38:	d8801b17 	ldw	r2,108(sp)
    1f3c:	01000074 	movhi	r4,1
    1f40:	21002004 	addi	r4,r4,128
    1f44:	10800044 	addi	r2,r2,1
    1f48:	18c00044 	addi	r3,r3,1
    1f4c:	b1000015 	stw	r4,0(r22)
    1f50:	01000044 	movi	r4,1
    1f54:	d8801b15 	stw	r2,108(sp)
    1f58:	b1000115 	stw	r4,4(r22)
    1f5c:	d8c01c15 	stw	r3,112(sp)
    1f60:	10800208 	cmpgei	r2,r2,8
    1f64:	1001641e 	bne	r2,zero,24f8 <___vfprintf_internal_r+0x1ce8>
    1f68:	b5800204 	addi	r22,r22,8
    1f6c:	2800bd1e 	bne	r5,zero,2264 <___vfprintf_internal_r+0x1a54>
    1f70:	d8800417 	ldw	r2,16(sp)
    1f74:	d9000817 	ldw	r4,32(sp)
    1f78:	1080004c 	andi	r2,r2,1
    1f7c:	1104b03a 	or	r2,r2,r4
    1f80:	103b2226 	beq	r2,zero,c0c <___vfprintf_internal_r+0x3fc>
    1f84:	d8800d17 	ldw	r2,52(sp)
    1f88:	d9000b17 	ldw	r4,44(sp)
    1f8c:	b0800015 	stw	r2,0(r22)
    1f90:	d8801b17 	ldw	r2,108(sp)
    1f94:	20c7883a 	add	r3,r4,r3
    1f98:	b1000115 	stw	r4,4(r22)
    1f9c:	10800044 	addi	r2,r2,1
    1fa0:	d8c01c15 	stw	r3,112(sp)
    1fa4:	d8801b15 	stw	r2,108(sp)
    1fa8:	11000208 	cmpgei	r4,r2,8
    1fac:	2001771e 	bne	r4,zero,258c <___vfprintf_internal_r+0x1d7c>
    1fb0:	b5800204 	addi	r22,r22,8
    1fb4:	d9000817 	ldw	r4,32(sp)
    1fb8:	10800044 	addi	r2,r2,1
    1fbc:	d8801b15 	stw	r2,108(sp)
    1fc0:	20c7883a 	add	r3,r4,r3
    1fc4:	b4400015 	stw	r17,0(r22)
    1fc8:	b1000115 	stw	r4,4(r22)
    1fcc:	d8c01c15 	stw	r3,112(sp)
    1fd0:	10800208 	cmpgei	r2,r2,8
    1fd4:	103b0c26 	beq	r2,zero,c08 <___vfprintf_internal_r+0x3f8>
    1fd8:	003e1906 	br	1840 <___vfprintf_internal_r+0x1030>
    1fdc:	8825883a 	mov	r18,r17
    1fe0:	003b1b06 	br	c50 <___vfprintf_internal_r+0x440>
    1fe4:	d9000917 	ldw	r4,36(sp)
    1fe8:	d9400a17 	ldw	r5,40(sp)
    1fec:	da000615 	stw	r8,24(sp)
    1ff0:	200d883a 	mov	r6,r4
    1ff4:	280f883a 	mov	r7,r5
    1ff8:	db000415 	stw	r12,16(sp)
    1ffc:	000d7480 	call	d748 <__unorddf2>
    2000:	db000417 	ldw	r12,16(sp)
    2004:	da000617 	ldw	r8,24(sp)
    2008:	1002061e 	bne	r2,zero,2824 <___vfprintf_internal_r+0x2014>
    200c:	057ff7c4 	movi	r21,-33
    2010:	40bfffe0 	cmpeqi	r2,r8,-1
    2014:	e56a703a 	and	r21,fp,r21
    2018:	1001b41e 	bne	r2,zero,26ec <___vfprintf_internal_r+0x1edc>
    201c:	a88011d8 	cmpnei	r2,r21,71
    2020:	10015726 	beq	r2,zero,2580 <___vfprintf_internal_r+0x1d70>
    2024:	60804014 	ori	r2,r12,256
    2028:	d8800415 	stw	r2,16(sp)
    202c:	d8800a17 	ldw	r2,40(sp)
    2030:	10012d16 	blt	r2,zero,24e8 <___vfprintf_internal_r+0x1cd8>
    2034:	dd000a17 	ldw	r20,40(sp)
    2038:	d8000605 	stb	zero,24(sp)
    203c:	e08019a0 	cmpeqi	r2,fp,102
    2040:	d8800f15 	stw	r2,60(sp)
    2044:	1000d21e 	bne	r2,zero,2390 <___vfprintf_internal_r+0x1b80>
    2048:	e08011a0 	cmpeqi	r2,fp,70
    204c:	1000d01e 	bne	r2,zero,2390 <___vfprintf_internal_r+0x1b80>
    2050:	a8801158 	cmpnei	r2,r21,69
    2054:	10016226 	beq	r2,zero,25e0 <___vfprintf_internal_r+0x1dd0>
    2058:	d8801804 	addi	r2,sp,96
    205c:	d8800315 	stw	r2,12(sp)
    2060:	d9400917 	ldw	r5,36(sp)
    2064:	d8801504 	addi	r2,sp,84
    2068:	d8800215 	stw	r2,8(sp)
    206c:	d8801404 	addi	r2,sp,80
    2070:	da000015 	stw	r8,0(sp)
    2074:	9809883a 	mov	r4,r19
    2078:	d8800115 	stw	r2,4(sp)
    207c:	01c00084 	movi	r7,2
    2080:	a00d883a 	mov	r6,r20
    2084:	db000815 	stw	r12,32(sp)
    2088:	da000715 	stw	r8,28(sp)
    208c:	0002ea80 	call	2ea8 <_dtoa_r>
    2090:	da000717 	ldw	r8,28(sp)
    2094:	e10019d8 	cmpnei	r4,fp,103
    2098:	db000817 	ldw	r12,32(sp)
    209c:	1023883a 	mov	r17,r2
    20a0:	4007883a 	mov	r3,r8
    20a4:	2001621e 	bne	r4,zero,2630 <___vfprintf_internal_r+0x1e20>
    20a8:	6080004c 	andi	r2,r12,1
    20ac:	1001621e 	bne	r2,zero,2638 <___vfprintf_internal_r+0x1e28>
    20b0:	d8801417 	ldw	r2,80(sp)
    20b4:	ad4011e0 	cmpeqi	r21,r21,71
    20b8:	d8800715 	stw	r2,28(sp)
    20bc:	d8801817 	ldw	r2,96(sp)
    20c0:	1445c83a 	sub	r2,r2,r17
    20c4:	d8800815 	stw	r2,32(sp)
    20c8:	a8000526 	beq	r21,zero,20e0 <___vfprintf_internal_r+0x18d0>
    20cc:	d8c00717 	ldw	r3,28(sp)
    20d0:	18bfff50 	cmplti	r2,r3,-3
    20d4:	1000011e 	bne	r2,zero,20dc <___vfprintf_internal_r+0x18cc>
    20d8:	40c1670e 	bge	r8,r3,2678 <___vfprintf_internal_r+0x1e68>
    20dc:	e73fff84 	addi	fp,fp,-2
    20e0:	d8800717 	ldw	r2,28(sp)
    20e4:	df001645 	stb	fp,89(sp)
    20e8:	157fffc4 	addi	r21,r2,-1
    20ec:	dd401415 	stw	r21,80(sp)
    20f0:	a801d416 	blt	r21,zero,2844 <___vfprintf_internal_r+0x2034>
    20f4:	00800ac4 	movi	r2,43
    20f8:	d8801685 	stb	r2,90(sp)
    20fc:	a8800290 	cmplti	r2,r21,10
    2100:	1001c11e 	bne	r2,zero,2808 <___vfprintf_internal_r+0x1ff8>
    2104:	d98019c4 	addi	r6,sp,103
    2108:	9029883a 	mov	r20,r18
    210c:	dc400715 	stw	r17,28(sp)
    2110:	8025883a 	mov	r18,r16
    2114:	db000f15 	stw	r12,60(sp)
    2118:	3021883a 	mov	r16,r6
    211c:	a809883a 	mov	r4,r21
    2120:	01400284 	movi	r5,10
    2124:	000b2d80 	call	b2d8 <__modsi3>
    2128:	10800c04 	addi	r2,r2,48
    212c:	a809883a 	mov	r4,r21
    2130:	80bfffc5 	stb	r2,-1(r16)
    2134:	01400284 	movi	r5,10
    2138:	000b24c0 	call	b24c <__divsi3>
    213c:	a9001908 	cmpgei	r4,r21,100
    2140:	8023883a 	mov	r17,r16
    2144:	102b883a 	mov	r21,r2
    2148:	843fffc4 	addi	r16,r16,-1
    214c:	203ff31e 	bne	r4,zero,211c <___vfprintf_internal_r+0x190c>
    2150:	800d883a 	mov	r6,r16
    2154:	11000c04 	addi	r4,r2,48
    2158:	9021883a 	mov	r16,r18
    215c:	a025883a 	mov	r18,r20
    2160:	8829883a 	mov	r20,r17
    2164:	a0bfff84 	addi	r2,r20,-2
    2168:	313fffc5 	stb	r4,-1(r6)
    216c:	d8c019c4 	addi	r3,sp,103
    2170:	db000f17 	ldw	r12,60(sp)
    2174:	dc400717 	ldw	r17,28(sp)
    2178:	10c1d62e 	bgeu	r2,r3,28d4 <___vfprintf_internal_r+0x20c4>
    217c:	d8c016c4 	addi	r3,sp,91
    2180:	00000106 	br	2188 <___vfprintf_internal_r+0x1978>
    2184:	11000003 	ldbu	r4,0(r2)
    2188:	19000005 	stb	r4,0(r3)
    218c:	10800044 	addi	r2,r2,1
    2190:	d90019c4 	addi	r4,sp,103
    2194:	18c00044 	addi	r3,r3,1
    2198:	113ffa1e 	bne	r2,r4,2184 <___vfprintf_internal_r+0x1974>
    219c:	d8801a44 	addi	r2,sp,105
    21a0:	d8c016c4 	addi	r3,sp,91
    21a4:	1505c83a 	sub	r2,r2,r20
    21a8:	1885883a 	add	r2,r3,r2
    21ac:	d8c01644 	addi	r3,sp,89
    21b0:	10c5c83a 	sub	r2,r2,r3
    21b4:	d8801015 	stw	r2,64(sp)
    21b8:	d8c00817 	ldw	r3,32(sp)
    21bc:	d9001017 	ldw	r4,64(sp)
    21c0:	18800088 	cmpgei	r2,r3,2
    21c4:	192b883a 	add	r21,r3,r4
    21c8:	1001aa26 	beq	r2,zero,2874 <___vfprintf_internal_r+0x2064>
    21cc:	d8800b17 	ldw	r2,44(sp)
    21d0:	a8ab883a 	add	r21,r21,r2
    21d4:	a829883a 	mov	r20,r21
    21d8:	a800010e 	bge	r21,zero,21e0 <___vfprintf_internal_r+0x19d0>
    21dc:	0029883a 	mov	r20,zero
    21e0:	d8000715 	stw	zero,28(sp)
    21e4:	00009d06 	br	245c <___vfprintf_internal_r+0x1c4c>
    21e8:	880f883a 	mov	r7,r17
    21ec:	10800044 	addi	r2,r2,1
    21f0:	1d47883a 	add	r3,r3,r21
    21f4:	b1c00015 	stw	r7,0(r22)
    21f8:	003a7e06 	br	bf4 <___vfprintf_internal_r+0x3e4>
    21fc:	d9801a04 	addi	r6,sp,104
    2200:	900b883a 	mov	r5,r18
    2204:	9809883a 	mov	r4,r19
    2208:	0007fdc0 	call	7fdc <__sprint_r>
    220c:	103a901e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    2210:	d8c01c17 	ldw	r3,112(sp)
    2214:	dd802704 	addi	r22,sp,156
    2218:	003c9706 	br	1478 <___vfprintf_internal_r+0xc68>
    221c:	d9801a04 	addi	r6,sp,104
    2220:	900b883a 	mov	r5,r18
    2224:	9809883a 	mov	r4,r19
    2228:	da000e15 	stw	r8,56(sp)
    222c:	0007fdc0 	call	7fdc <__sprint_r>
    2230:	103a871e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    2234:	d8c01c17 	ldw	r3,112(sp)
    2238:	da000e17 	ldw	r8,56(sp)
    223c:	dd802704 	addi	r22,sp,156
    2240:	003a6306 	br	bd0 <___vfprintf_internal_r+0x3c0>
    2244:	8809883a 	mov	r4,r17
    2248:	db000415 	stw	r12,16(sp)
    224c:	d8c00615 	stw	r3,24(sp)
    2250:	000076c0 	call	76c <strlen>
    2254:	db000417 	ldw	r12,16(sp)
    2258:	102b883a 	mov	r21,r2
    225c:	1029883a 	mov	r20,r2
    2260:	003a3106 	br	b28 <___vfprintf_internal_r+0x318>
    2264:	d8800d17 	ldw	r2,52(sp)
    2268:	d9000b17 	ldw	r4,44(sp)
    226c:	b0800015 	stw	r2,0(r22)
    2270:	d8801b17 	ldw	r2,108(sp)
    2274:	20c7883a 	add	r3,r4,r3
    2278:	b1000115 	stw	r4,4(r22)
    227c:	10800044 	addi	r2,r2,1
    2280:	d8c01c15 	stw	r3,112(sp)
    2284:	d8801b15 	stw	r2,108(sp)
    2288:	11000208 	cmpgei	r4,r2,8
    228c:	2000bf1e 	bne	r4,zero,258c <___vfprintf_internal_r+0x1d7c>
    2290:	b5800204 	addi	r22,r22,8
    2294:	283f470e 	bge	r5,zero,1fb4 <___vfprintf_internal_r+0x17a4>
    2298:	01c00074 	movhi	r7,1
    229c:	293ffc08 	cmpgei	r4,r5,-16
    22a0:	39c02104 	addi	r7,r7,132
    22a4:	0179c83a 	sub	fp,zero,r5
    22a8:	20013f1e 	bne	r4,zero,27a8 <___vfprintf_internal_r+0x1f98>
    22ac:	dc000715 	stw	r16,28(sp)
    22b0:	05400404 	movi	r21,16
    22b4:	9021883a 	mov	r16,r18
    22b8:	3825883a 	mov	r18,r7
    22bc:	00000406 	br	22d0 <___vfprintf_internal_r+0x1ac0>
    22c0:	b5800204 	addi	r22,r22,8
    22c4:	e73ffc04 	addi	fp,fp,-16
    22c8:	e1800448 	cmpgei	r6,fp,17
    22cc:	30013326 	beq	r6,zero,279c <___vfprintf_internal_r+0x1f8c>
    22d0:	10800044 	addi	r2,r2,1
    22d4:	18c00404 	addi	r3,r3,16
    22d8:	b4800015 	stw	r18,0(r22)
    22dc:	b5400115 	stw	r21,4(r22)
    22e0:	d8c01c15 	stw	r3,112(sp)
    22e4:	d8801b15 	stw	r2,108(sp)
    22e8:	11800208 	cmpgei	r6,r2,8
    22ec:	303ff426 	beq	r6,zero,22c0 <___vfprintf_internal_r+0x1ab0>
    22f0:	d9801a04 	addi	r6,sp,104
    22f4:	800b883a 	mov	r5,r16
    22f8:	9809883a 	mov	r4,r19
    22fc:	0007fdc0 	call	7fdc <__sprint_r>
    2300:	1001721e 	bne	r2,zero,28cc <___vfprintf_internal_r+0x20bc>
    2304:	d8c01c17 	ldw	r3,112(sp)
    2308:	d8801b17 	ldw	r2,108(sp)
    230c:	dd802704 	addi	r22,sp,156
    2310:	003fec06 	br	22c4 <___vfprintf_internal_r+0x1ab4>
    2314:	800f883a 	mov	r7,r16
    2318:	dc000717 	ldw	r16,28(sp)
    231c:	8817883a 	mov	r11,r17
    2320:	aa000044 	addi	r8,r21,1
    2324:	e0800204 	addi	r2,fp,8
    2328:	1ac7883a 	add	r3,r3,r11
    232c:	e1c00015 	stw	r7,0(fp)
    2330:	e2c00115 	stw	r11,4(fp)
    2334:	d8c01c15 	stw	r3,112(sp)
    2338:	da001b15 	stw	r8,108(sp)
    233c:	41000208 	cmpgei	r4,r8,8
    2340:	203e701e 	bne	r4,zero,1d04 <___vfprintf_internal_r+0x14f4>
    2344:	42000044 	addi	r8,r8,1
    2348:	15800204 	addi	r22,r2,8
    234c:	1039883a 	mov	fp,r2
    2350:	003d3206 	br	181c <___vfprintf_internal_r+0x100c>
    2354:	d8800617 	ldw	r2,24(sp)
    2358:	d8c00615 	stw	r3,24(sp)
    235c:	15000017 	ldw	r20,0(r2)
    2360:	a02bd7fa 	srai	r21,r20,31
    2364:	a805883a 	mov	r2,r21
    2368:	003b2f06 	br	1028 <___vfprintf_internal_r+0x818>
    236c:	d8800617 	ldw	r2,24(sp)
    2370:	002b883a 	mov	r21,zero
    2374:	d8c00615 	stw	r3,24(sp)
    2378:	15000017 	ldw	r20,0(r2)
    237c:	0005883a 	mov	r2,zero
    2380:	003a7006 	br	d44 <___vfprintf_internal_r+0x534>
    2384:	04400074 	movhi	r17,1
    2388:	8c401004 	addi	r17,r17,64
    238c:	003ac806 	br	eb0 <___vfprintf_internal_r+0x6a0>
    2390:	d8801804 	addi	r2,sp,96
    2394:	d8800315 	stw	r2,12(sp)
    2398:	d9400917 	ldw	r5,36(sp)
    239c:	d8801504 	addi	r2,sp,84
    23a0:	d8800215 	stw	r2,8(sp)
    23a4:	d8801404 	addi	r2,sp,80
    23a8:	da000015 	stw	r8,0(sp)
    23ac:	d8800115 	stw	r2,4(sp)
    23b0:	01c000c4 	movi	r7,3
    23b4:	a00d883a 	mov	r6,r20
    23b8:	9809883a 	mov	r4,r19
    23bc:	db000815 	stw	r12,32(sp)
    23c0:	da000715 	stw	r8,28(sp)
    23c4:	0002ea80 	call	2ea8 <_dtoa_r>
    23c8:	da000717 	ldw	r8,28(sp)
    23cc:	1023883a 	mov	r17,r2
    23d0:	db000817 	ldw	r12,32(sp)
    23d4:	1207883a 	add	r3,r2,r8
    23d8:	88800007 	ldb	r2,0(r17)
    23dc:	10800c20 	cmpeqi	r2,r2,48
    23e0:	1000571e 	bne	r2,zero,2540 <___vfprintf_internal_r+0x1d30>
    23e4:	d8801417 	ldw	r2,80(sp)
    23e8:	1893883a 	add	r9,r3,r2
    23ec:	d9000917 	ldw	r4,36(sp)
    23f0:	000d883a 	mov	r6,zero
    23f4:	000f883a 	mov	r7,zero
    23f8:	a00b883a 	mov	r5,r20
    23fc:	da401115 	stw	r9,68(sp)
    2400:	da000815 	stw	r8,32(sp)
    2404:	db000715 	stw	r12,28(sp)
    2408:	000c5940 	call	c594 <__eqdf2>
    240c:	db000717 	ldw	r12,28(sp)
    2410:	da000817 	ldw	r8,32(sp)
    2414:	da401117 	ldw	r9,68(sp)
    2418:	1000891e 	bne	r2,zero,2640 <___vfprintf_internal_r+0x1e30>
    241c:	4805883a 	mov	r2,r9
    2420:	d8c01417 	ldw	r3,80(sp)
    2424:	1445c83a 	sub	r2,r2,r17
    2428:	ad4011d8 	cmpnei	r21,r21,71
    242c:	d8c00715 	stw	r3,28(sp)
    2430:	d8800815 	stw	r2,32(sp)
    2434:	a83f2526 	beq	r21,zero,20cc <___vfprintf_internal_r+0x18bc>
    2438:	d8800f17 	ldw	r2,60(sp)
    243c:	103f2826 	beq	r2,zero,20e0 <___vfprintf_internal_r+0x18d0>
    2440:	d8c00717 	ldw	r3,28(sp)
    2444:	6080004c 	andi	r2,r12,1
    2448:	1204b03a 	or	r2,r2,r8
    244c:	00c1140e 	bge	zero,r3,28a0 <___vfprintf_internal_r+0x2090>
    2450:	1001011e 	bne	r2,zero,2858 <___vfprintf_internal_r+0x2048>
    2454:	dd400717 	ldw	r21,28(sp)
    2458:	a829883a 	mov	r20,r21
    245c:	d8800607 	ldb	r2,24(sp)
    2460:	10008026 	beq	r2,zero,2664 <___vfprintf_internal_r+0x1e54>
    2464:	00800b44 	movi	r2,45
    2468:	d8801345 	stb	r2,77(sp)
    246c:	d8800e17 	ldw	r2,56(sp)
    2470:	0011883a 	mov	r8,zero
    2474:	d8800615 	stw	r2,24(sp)
    2478:	003b0506 	br	1090 <___vfprintf_internal_r+0x880>
    247c:	d8800617 	ldw	r2,24(sp)
    2480:	002b883a 	mov	r21,zero
    2484:	d8c00615 	stw	r3,24(sp)
    2488:	15000017 	ldw	r20,0(r2)
    248c:	00800044 	movi	r2,1
    2490:	003a2c06 	br	d44 <___vfprintf_internal_r+0x534>
    2494:	d8800617 	ldw	r2,24(sp)
    2498:	002b883a 	mov	r21,zero
    249c:	d8c00615 	stw	r3,24(sp)
    24a0:	15000017 	ldw	r20,0(r2)
    24a4:	003b1506 	br	10fc <___vfprintf_internal_r+0x8ec>
    24a8:	800f883a 	mov	r7,r16
    24ac:	dc000e17 	ldw	r16,56(sp)
    24b0:	10800044 	addi	r2,r2,1
    24b4:	1d47883a 	add	r3,r3,r21
    24b8:	d8801b15 	stw	r2,108(sp)
    24bc:	b1c00015 	stw	r7,0(r22)
    24c0:	b5400115 	stw	r21,4(r22)
    24c4:	d8c01c15 	stw	r3,112(sp)
    24c8:	10800208 	cmpgei	r2,r2,8
    24cc:	10003a1e 	bne	r2,zero,25b8 <___vfprintf_internal_r+0x1da8>
    24d0:	b5800204 	addi	r22,r22,8
    24d4:	003d5406 	br	1a28 <___vfprintf_internal_r+0x1218>
    24d8:	00800b44 	movi	r2,45
    24dc:	d8801345 	stb	r2,77(sp)
    24e0:	03400b44 	movi	r13,45
    24e4:	003a6e06 	br	ea0 <___vfprintf_internal_r+0x690>
    24e8:	1520003c 	xorhi	r20,r2,32768
    24ec:	00800b44 	movi	r2,45
    24f0:	d8800605 	stb	r2,24(sp)
    24f4:	003ed106 	br	203c <___vfprintf_internal_r+0x182c>
    24f8:	d9801a04 	addi	r6,sp,104
    24fc:	900b883a 	mov	r5,r18
    2500:	9809883a 	mov	r4,r19
    2504:	0007fdc0 	call	7fdc <__sprint_r>
    2508:	1039d11e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    250c:	d9401417 	ldw	r5,80(sp)
    2510:	d8c01c17 	ldw	r3,112(sp)
    2514:	dd802704 	addi	r22,sp,156
    2518:	003e9406 	br	1f6c <___vfprintf_internal_r+0x175c>
    251c:	05400184 	movi	r21,6
    2520:	003e1706 	br	1d80 <___vfprintf_internal_r+0x1570>
    2524:	d9401345 	stb	r5,77(sp)
    2528:	00397906 	br	b10 <___vfprintf_internal_r+0x300>
    252c:	d9801a04 	addi	r6,sp,104
    2530:	900b883a 	mov	r5,r18
    2534:	9809883a 	mov	r4,r19
    2538:	0007fdc0 	call	7fdc <__sprint_r>
    253c:	0039c406 	br	c50 <___vfprintf_internal_r+0x440>
    2540:	d9000917 	ldw	r4,36(sp)
    2544:	000d883a 	mov	r6,zero
    2548:	000f883a 	mov	r7,zero
    254c:	a00b883a 	mov	r5,r20
    2550:	d8c01115 	stw	r3,68(sp)
    2554:	da000815 	stw	r8,32(sp)
    2558:	db000715 	stw	r12,28(sp)
    255c:	000c5940 	call	c594 <__eqdf2>
    2560:	db000717 	ldw	r12,28(sp)
    2564:	da000817 	ldw	r8,32(sp)
    2568:	d8c01117 	ldw	r3,68(sp)
    256c:	103f9d26 	beq	r2,zero,23e4 <___vfprintf_internal_r+0x1bd4>
    2570:	00800044 	movi	r2,1
    2574:	1205c83a 	sub	r2,r2,r8
    2578:	d8801415 	stw	r2,80(sp)
    257c:	003f9a06 	br	23e8 <___vfprintf_internal_r+0x1bd8>
    2580:	403ea81e 	bne	r8,zero,2024 <___vfprintf_internal_r+0x1814>
    2584:	02000044 	movi	r8,1
    2588:	003ea606 	br	2024 <___vfprintf_internal_r+0x1814>
    258c:	d9801a04 	addi	r6,sp,104
    2590:	900b883a 	mov	r5,r18
    2594:	9809883a 	mov	r4,r19
    2598:	0007fdc0 	call	7fdc <__sprint_r>
    259c:	1039ac1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    25a0:	d9401417 	ldw	r5,80(sp)
    25a4:	d8c01c17 	ldw	r3,112(sp)
    25a8:	d8801b17 	ldw	r2,108(sp)
    25ac:	dd802704 	addi	r22,sp,156
    25b0:	283e800e 	bge	r5,zero,1fb4 <___vfprintf_internal_r+0x17a4>
    25b4:	003f3806 	br	2298 <___vfprintf_internal_r+0x1a88>
    25b8:	d9801a04 	addi	r6,sp,104
    25bc:	900b883a 	mov	r5,r18
    25c0:	9809883a 	mov	r4,r19
    25c4:	0007fdc0 	call	7fdc <__sprint_r>
    25c8:	1039a11e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    25cc:	d8c01c17 	ldw	r3,112(sp)
    25d0:	dd802704 	addi	r22,sp,156
    25d4:	003d1406 	br	1a28 <___vfprintf_internal_r+0x1218>
    25d8:	db000417 	ldw	r12,16(sp)
    25dc:	003a9f06 	br	105c <___vfprintf_internal_r+0x84c>
    25e0:	d8801804 	addi	r2,sp,96
    25e4:	d8800315 	stw	r2,12(sp)
    25e8:	d9400917 	ldw	r5,36(sp)
    25ec:	d8801504 	addi	r2,sp,84
    25f0:	40c00044 	addi	r3,r8,1
    25f4:	d8800215 	stw	r2,8(sp)
    25f8:	d8801404 	addi	r2,sp,80
    25fc:	d8c00015 	stw	r3,0(sp)
    2600:	d8800115 	stw	r2,4(sp)
    2604:	01c00084 	movi	r7,2
    2608:	a00d883a 	mov	r6,r20
    260c:	9809883a 	mov	r4,r19
    2610:	db001115 	stw	r12,68(sp)
    2614:	da000815 	stw	r8,32(sp)
    2618:	d8c00715 	stw	r3,28(sp)
    261c:	0002ea80 	call	2ea8 <_dtoa_r>
    2620:	d8c00717 	ldw	r3,28(sp)
    2624:	da000817 	ldw	r8,32(sp)
    2628:	db001117 	ldw	r12,68(sp)
    262c:	1023883a 	mov	r17,r2
    2630:	e08011d8 	cmpnei	r2,fp,71
    2634:	103e9c26 	beq	r2,zero,20a8 <___vfprintf_internal_r+0x1898>
    2638:	88d3883a 	add	r9,r17,r3
    263c:	003f6b06 	br	23ec <___vfprintf_internal_r+0x1bdc>
    2640:	d8801817 	ldw	r2,96(sp)
    2644:	127f762e 	bgeu	r2,r9,2420 <___vfprintf_internal_r+0x1c10>
    2648:	01000c04 	movi	r4,48
    264c:	10c00044 	addi	r3,r2,1
    2650:	d8c01815 	stw	r3,96(sp)
    2654:	11000005 	stb	r4,0(r2)
    2658:	d8801817 	ldw	r2,96(sp)
    265c:	127ffb36 	bltu	r2,r9,264c <___vfprintf_internal_r+0x1e3c>
    2660:	003f6f06 	br	2420 <___vfprintf_internal_r+0x1c10>
    2664:	d8800e17 	ldw	r2,56(sp)
    2668:	db401343 	ldbu	r13,77(sp)
    266c:	0011883a 	mov	r8,zero
    2670:	d8800615 	stw	r2,24(sp)
    2674:	003a8206 	br	1080 <___vfprintf_internal_r+0x870>
    2678:	d8800717 	ldw	r2,28(sp)
    267c:	d8c00817 	ldw	r3,32(sp)
    2680:	10c02b16 	blt	r2,r3,2730 <___vfprintf_internal_r+0x1f20>
    2684:	6300004c 	andi	r12,r12,1
    2688:	6000581e 	bne	r12,zero,27ec <___vfprintf_internal_r+0x1fdc>
    268c:	1029883a 	mov	r20,r2
    2690:	1000010e 	bge	r2,zero,2698 <___vfprintf_internal_r+0x1e88>
    2694:	0029883a 	mov	r20,zero
    2698:	dd400717 	ldw	r21,28(sp)
    269c:	070019c4 	movi	fp,103
    26a0:	003f6e06 	br	245c <___vfprintf_internal_r+0x1c4c>
    26a4:	d9801a04 	addi	r6,sp,104
    26a8:	900b883a 	mov	r5,r18
    26ac:	9809883a 	mov	r4,r19
    26b0:	0007fdc0 	call	7fdc <__sprint_r>
    26b4:	1039661e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    26b8:	dd401417 	ldw	r21,80(sp)
    26bc:	d8c01c17 	ldw	r3,112(sp)
    26c0:	dd802704 	addi	r22,sp,156
    26c4:	003ce706 	br	1a64 <___vfprintf_internal_r+0x1254>
    26c8:	d9801a04 	addi	r6,sp,104
    26cc:	900b883a 	mov	r5,r18
    26d0:	9809883a 	mov	r4,r19
    26d4:	0007fdc0 	call	7fdc <__sprint_r>
    26d8:	10395d1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    26dc:	d8c01c17 	ldw	r3,112(sp)
    26e0:	dd802704 	addi	r22,sp,156
    26e4:	a83ccd0e 	bge	r21,zero,1a1c <___vfprintf_internal_r+0x120c>
    26e8:	003d9106 	br	1d30 <___vfprintf_internal_r+0x1520>
    26ec:	02000184 	movi	r8,6
    26f0:	003e4c06 	br	2024 <___vfprintf_internal_r+0x1814>
    26f4:	d9801a04 	addi	r6,sp,104
    26f8:	900b883a 	mov	r5,r18
    26fc:	9809883a 	mov	r4,r19
    2700:	0007fdc0 	call	7fdc <__sprint_r>
    2704:	1039521e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    2708:	d8801417 	ldw	r2,80(sp)
    270c:	d9000817 	ldw	r4,32(sp)
    2710:	d8c01c17 	ldw	r3,112(sp)
    2714:	dd802704 	addi	r22,sp,156
    2718:	2085c83a 	sub	r2,r4,r2
    271c:	003ce506 	br	1ab4 <___vfprintf_internal_r+0x12a4>
    2720:	4029883a 	mov	r20,r8
    2724:	d8c00615 	stw	r3,24(sp)
    2728:	402b883a 	mov	r21,r8
    272c:	0038fe06 	br	b28 <___vfprintf_internal_r+0x318>
    2730:	d8800817 	ldw	r2,32(sp)
    2734:	d8c00b17 	ldw	r3,44(sp)
    2738:	10eb883a 	add	r21,r2,r3
    273c:	d8800717 	ldw	r2,28(sp)
    2740:	00800316 	blt	zero,r2,2750 <___vfprintf_internal_r+0x1f40>
    2744:	d8800717 	ldw	r2,28(sp)
    2748:	a8abc83a 	sub	r21,r21,r2
    274c:	ad400044 	addi	r21,r21,1
    2750:	a829883a 	mov	r20,r21
    2754:	a8002a16 	blt	r21,zero,2800 <___vfprintf_internal_r+0x1ff0>
    2758:	070019c4 	movi	fp,103
    275c:	003f3f06 	br	245c <___vfprintf_internal_r+0x1c4c>
    2760:	d9401345 	stb	r5,77(sp)
    2764:	003ae006 	br	12e8 <___vfprintf_internal_r+0xad8>
    2768:	d9401345 	stb	r5,77(sp)
    276c:	003a5906 	br	10d4 <___vfprintf_internal_r+0x8c4>
    2770:	d9401345 	stb	r5,77(sp)
    2774:	003b1706 	br	13d4 <___vfprintf_internal_r+0xbc4>
    2778:	d9401345 	stb	r5,77(sp)
    277c:	003a2206 	br	1008 <___vfprintf_internal_r+0x7f8>
    2780:	d9401345 	stb	r5,77(sp)
    2784:	003a6806 	br	1128 <___vfprintf_internal_r+0x918>
    2788:	d9401345 	stb	r5,77(sp)
    278c:	00399906 	br	df4 <___vfprintf_internal_r+0x5e4>
    2790:	00bfffc4 	movi	r2,-1
    2794:	d8800515 	stw	r2,20(sp)
    2798:	00393006 	br	c5c <___vfprintf_internal_r+0x44c>
    279c:	900f883a 	mov	r7,r18
    27a0:	8025883a 	mov	r18,r16
    27a4:	dc000717 	ldw	r16,28(sp)
    27a8:	10800044 	addi	r2,r2,1
    27ac:	1f07883a 	add	r3,r3,fp
    27b0:	b1c00015 	stw	r7,0(r22)
    27b4:	b7000115 	stw	fp,4(r22)
    27b8:	d8c01c15 	stw	r3,112(sp)
    27bc:	d8801b15 	stw	r2,108(sp)
    27c0:	11000208 	cmpgei	r4,r2,8
    27c4:	203dfa26 	beq	r4,zero,1fb0 <___vfprintf_internal_r+0x17a0>
    27c8:	d9801a04 	addi	r6,sp,104
    27cc:	900b883a 	mov	r5,r18
    27d0:	9809883a 	mov	r4,r19
    27d4:	0007fdc0 	call	7fdc <__sprint_r>
    27d8:	10391d1e 	bne	r2,zero,c50 <___vfprintf_internal_r+0x440>
    27dc:	d8c01c17 	ldw	r3,112(sp)
    27e0:	d8801b17 	ldw	r2,108(sp)
    27e4:	dd802704 	addi	r22,sp,156
    27e8:	003df206 	br	1fb4 <___vfprintf_internal_r+0x17a4>
    27ec:	d8800717 	ldw	r2,28(sp)
    27f0:	d8c00b17 	ldw	r3,44(sp)
    27f4:	10eb883a 	add	r21,r2,r3
    27f8:	a829883a 	mov	r20,r21
    27fc:	a83fd60e 	bge	r21,zero,2758 <___vfprintf_internal_r+0x1f48>
    2800:	0029883a 	mov	r20,zero
    2804:	003fd406 	br	2758 <___vfprintf_internal_r+0x1f48>
    2808:	00800c04 	movi	r2,48
    280c:	ad400c04 	addi	r21,r21,48
    2810:	d88016c5 	stb	r2,91(sp)
    2814:	00800104 	movi	r2,4
    2818:	dd401705 	stb	r21,92(sp)
    281c:	d8801015 	stw	r2,64(sp)
    2820:	003e6506 	br	21b8 <___vfprintf_internal_r+0x19a8>
    2824:	d8800a17 	ldw	r2,40(sp)
    2828:	10001916 	blt	r2,zero,2890 <___vfprintf_internal_r+0x2080>
    282c:	db401343 	ldbu	r13,77(sp)
    2830:	e0801210 	cmplti	r2,fp,72
    2834:	1000131e 	bne	r2,zero,2884 <___vfprintf_internal_r+0x2074>
    2838:	04400074 	movhi	r17,1
    283c:	8c401304 	addi	r17,r17,76
    2840:	00399b06 	br	eb0 <___vfprintf_internal_r+0x6a0>
    2844:	05400044 	movi	r21,1
    2848:	a8abc83a 	sub	r21,r21,r2
    284c:	00800b44 	movi	r2,45
    2850:	d8801685 	stb	r2,90(sp)
    2854:	003e2906 	br	20fc <___vfprintf_internal_r+0x18ec>
    2858:	d8800b17 	ldw	r2,44(sp)
    285c:	18ab883a 	add	r21,r3,r2
    2860:	aa2b883a 	add	r21,r21,r8
    2864:	a829883a 	mov	r20,r21
    2868:	a83efc0e 	bge	r21,zero,245c <___vfprintf_internal_r+0x1c4c>
    286c:	0029883a 	mov	r20,zero
    2870:	003efa06 	br	245c <___vfprintf_internal_r+0x1c4c>
    2874:	6080004c 	andi	r2,r12,1
    2878:	d8800715 	stw	r2,28(sp)
    287c:	103e531e 	bne	r2,zero,21cc <___vfprintf_internal_r+0x19bc>
    2880:	003ff806 	br	2864 <___vfprintf_internal_r+0x2054>
    2884:	04400074 	movhi	r17,1
    2888:	8c401204 	addi	r17,r17,72
    288c:	00398806 	br	eb0 <___vfprintf_internal_r+0x6a0>
    2890:	00800b44 	movi	r2,45
    2894:	d8801345 	stb	r2,77(sp)
    2898:	03400b44 	movi	r13,45
    289c:	003fe406 	br	2830 <___vfprintf_internal_r+0x2020>
    28a0:	1000031e 	bne	r2,zero,28b0 <___vfprintf_internal_r+0x20a0>
    28a4:	05000044 	movi	r20,1
    28a8:	05400044 	movi	r21,1
    28ac:	003eeb06 	br	245c <___vfprintf_internal_r+0x1c4c>
    28b0:	d8800b17 	ldw	r2,44(sp)
    28b4:	15400044 	addi	r21,r2,1
    28b8:	aa2b883a 	add	r21,r21,r8
    28bc:	003fe906 	br	2864 <___vfprintf_internal_r+0x2054>
    28c0:	b005883a 	mov	r2,r22
    28c4:	39c02104 	addi	r7,r7,132
    28c8:	003e9706 	br	2328 <___vfprintf_internal_r+0x1b18>
    28cc:	8025883a 	mov	r18,r16
    28d0:	0038df06 	br	c50 <___vfprintf_internal_r+0x440>
    28d4:	00800084 	movi	r2,2
    28d8:	d8801015 	stw	r2,64(sp)
    28dc:	003e3606 	br	21b8 <___vfprintf_internal_r+0x19a8>
    28e0:	d8800617 	ldw	r2,24(sp)
    28e4:	12000017 	ldw	r8,0(r2)
    28e8:	10800104 	addi	r2,r2,4
    28ec:	4000010e 	bge	r8,zero,28f4 <___vfprintf_internal_r+0x20e4>
    28f0:	023fffc4 	movi	r8,-1
    28f4:	bf000043 	ldbu	fp,1(r23)
    28f8:	d8800615 	stw	r2,24(sp)
    28fc:	182f883a 	mov	r23,r3
    2900:	e2c03fcc 	andi	r11,fp,255
    2904:	5ac0201c 	xori	r11,r11,128
    2908:	5affe004 	addi	r11,r11,-128
    290c:	00380f06 	br	94c <___vfprintf_internal_r+0x13c>

00002910 <__vfprintf_internal>:
    2910:	f811883a 	mov	r8,ra
    2914:	000e1ac0 	call	e1ac <_mcount>
    2918:	403f883a 	mov	ra,r8
    291c:	00c00074 	movhi	r3,1
    2920:	2005883a 	mov	r2,r4
    2924:	1908d117 	ldw	r4,9028(r3)
    2928:	300f883a 	mov	r7,r6
    292c:	280d883a 	mov	r6,r5
    2930:	100b883a 	mov	r5,r2
    2934:	00008101 	jmpi	810 <___vfprintf_internal_r>

00002938 <__sbprintf>:
    2938:	f811883a 	mov	r8,ra
    293c:	000e1ac0 	call	e1ac <_mcount>
    2940:	403f883a 	mov	ra,r8
    2944:	defee204 	addi	sp,sp,-1144
    2948:	dfc11d15 	stw	ra,1140(sp)
    294c:	dc811c15 	stw	r18,1136(sp)
    2950:	dc411b15 	stw	r17,1132(sp)
    2954:	dc011a15 	stw	r16,1128(sp)
    2958:	2880030b 	ldhu	r2,12(r5)
    295c:	2b001917 	ldw	r12,100(r5)
    2960:	2ac0038b 	ldhu	r11,14(r5)
    2964:	2a800717 	ldw	r10,28(r5)
    2968:	2a400917 	ldw	r9,36(r5)
    296c:	da001a04 	addi	r8,sp,104
    2970:	00c10004 	movi	r3,1024
    2974:	10bfff4c 	andi	r2,r2,65533
    2978:	2821883a 	mov	r16,r5
    297c:	d80b883a 	mov	r5,sp
    2980:	2025883a 	mov	r18,r4
    2984:	d880030d 	sth	r2,12(sp)
    2988:	db001915 	stw	r12,100(sp)
    298c:	dac0038d 	sth	r11,14(sp)
    2990:	da800715 	stw	r10,28(sp)
    2994:	da400915 	stw	r9,36(sp)
    2998:	da000015 	stw	r8,0(sp)
    299c:	da000415 	stw	r8,16(sp)
    29a0:	d8c00215 	stw	r3,8(sp)
    29a4:	d8c00515 	stw	r3,20(sp)
    29a8:	d8000615 	stw	zero,24(sp)
    29ac:	00008100 	call	810 <___vfprintf_internal_r>
    29b0:	1023883a 	mov	r17,r2
    29b4:	10000d0e 	bge	r2,zero,29ec <__sbprintf+0xb4>
    29b8:	d880030b 	ldhu	r2,12(sp)
    29bc:	1080100c 	andi	r2,r2,64
    29c0:	10000326 	beq	r2,zero,29d0 <__sbprintf+0x98>
    29c4:	8080030b 	ldhu	r2,12(r16)
    29c8:	10801014 	ori	r2,r2,64
    29cc:	8080030d 	sth	r2,12(r16)
    29d0:	8805883a 	mov	r2,r17
    29d4:	dfc11d17 	ldw	ra,1140(sp)
    29d8:	dc811c17 	ldw	r18,1136(sp)
    29dc:	dc411b17 	ldw	r17,1132(sp)
    29e0:	dc011a17 	ldw	r16,1128(sp)
    29e4:	dec11e04 	addi	sp,sp,1144
    29e8:	f800283a 	ret
    29ec:	d80b883a 	mov	r5,sp
    29f0:	9009883a 	mov	r4,r18
    29f4:	00048300 	call	4830 <_fflush_r>
    29f8:	103fef26 	beq	r2,zero,29b8 <__sbprintf+0x80>
    29fc:	047fffc4 	movi	r17,-1
    2a00:	003fed06 	br	29b8 <__sbprintf+0x80>

00002a04 <__swsetup_r>:
    2a04:	f811883a 	mov	r8,ra
    2a08:	000e1ac0 	call	e1ac <_mcount>
    2a0c:	403f883a 	mov	ra,r8
    2a10:	defffd04 	addi	sp,sp,-12
    2a14:	dfc00215 	stw	ra,8(sp)
    2a18:	dc400115 	stw	r17,4(sp)
    2a1c:	dc000015 	stw	r16,0(sp)
    2a20:	00800074 	movhi	r2,1
    2a24:	1088d117 	ldw	r2,9028(r2)
    2a28:	2023883a 	mov	r17,r4
    2a2c:	2821883a 	mov	r16,r5
    2a30:	10000226 	beq	r2,zero,2a3c <__swsetup_r+0x38>
    2a34:	10c00e17 	ldw	r3,56(r2)
    2a38:	18001f26 	beq	r3,zero,2ab8 <__swsetup_r+0xb4>
    2a3c:	8180030b 	ldhu	r6,12(r16)
    2a40:	30c0020c 	andi	r3,r6,8
    2a44:	3005883a 	mov	r2,r6
    2a48:	18002126 	beq	r3,zero,2ad0 <__swsetup_r+0xcc>
    2a4c:	80c00417 	ldw	r3,16(r16)
    2a50:	18002826 	beq	r3,zero,2af4 <__swsetup_r+0xf0>
    2a54:	1100004c 	andi	r4,r2,1
    2a58:	20000b1e 	bne	r4,zero,2a88 <__swsetup_r+0x84>
    2a5c:	1100008c 	andi	r4,r2,2
    2a60:	20002e1e 	bne	r4,zero,2b1c <__swsetup_r+0x118>
    2a64:	81000517 	ldw	r4,20(r16)
    2a68:	81000215 	stw	r4,8(r16)
    2a6c:	18000b26 	beq	r3,zero,2a9c <__swsetup_r+0x98>
    2a70:	0005883a 	mov	r2,zero
    2a74:	dfc00217 	ldw	ra,8(sp)
    2a78:	dc400117 	ldw	r17,4(sp)
    2a7c:	dc000017 	ldw	r16,0(sp)
    2a80:	dec00304 	addi	sp,sp,12
    2a84:	f800283a 	ret
    2a88:	81000517 	ldw	r4,20(r16)
    2a8c:	80000215 	stw	zero,8(r16)
    2a90:	0109c83a 	sub	r4,zero,r4
    2a94:	81000615 	stw	r4,24(r16)
    2a98:	183ff51e 	bne	r3,zero,2a70 <__swsetup_r+0x6c>
    2a9c:	10c0200c 	andi	r3,r2,128
    2aa0:	0005883a 	mov	r2,zero
    2aa4:	183ff326 	beq	r3,zero,2a74 <__swsetup_r+0x70>
    2aa8:	31801014 	ori	r6,r6,64
    2aac:	8180030d 	sth	r6,12(r16)
    2ab0:	00bfffc4 	movi	r2,-1
    2ab4:	003fef06 	br	2a74 <__swsetup_r+0x70>
    2ab8:	1009883a 	mov	r4,r2
    2abc:	0004cd40 	call	4cd4 <__sinit>
    2ac0:	8180030b 	ldhu	r6,12(r16)
    2ac4:	30c0020c 	andi	r3,r6,8
    2ac8:	3005883a 	mov	r2,r6
    2acc:	183fdf1e 	bne	r3,zero,2a4c <__swsetup_r+0x48>
    2ad0:	3080040c 	andi	r2,r6,16
    2ad4:	10002126 	beq	r2,zero,2b5c <__swsetup_r+0x158>
    2ad8:	3080010c 	andi	r2,r6,4
    2adc:	1000111e 	bne	r2,zero,2b24 <__swsetup_r+0x120>
    2ae0:	80c00417 	ldw	r3,16(r16)
    2ae4:	30800214 	ori	r2,r6,8
    2ae8:	8080030d 	sth	r2,12(r16)
    2aec:	100d883a 	mov	r6,r2
    2af0:	183fd81e 	bne	r3,zero,2a54 <__swsetup_r+0x50>
    2af4:	1100a00c 	andi	r4,r2,640
    2af8:	21008020 	cmpeqi	r4,r4,512
    2afc:	203fd51e 	bne	r4,zero,2a54 <__swsetup_r+0x50>
    2b00:	800b883a 	mov	r5,r16
    2b04:	8809883a 	mov	r4,r17
    2b08:	00058000 	call	5800 <__smakebuf_r>
    2b0c:	8180030b 	ldhu	r6,12(r16)
    2b10:	80c00417 	ldw	r3,16(r16)
    2b14:	3005883a 	mov	r2,r6
    2b18:	003fce06 	br	2a54 <__swsetup_r+0x50>
    2b1c:	0009883a 	mov	r4,zero
    2b20:	003fd106 	br	2a68 <__swsetup_r+0x64>
    2b24:	81400c17 	ldw	r5,48(r16)
    2b28:	28000626 	beq	r5,zero,2b44 <__swsetup_r+0x140>
    2b2c:	80801004 	addi	r2,r16,64
    2b30:	28800326 	beq	r5,r2,2b40 <__swsetup_r+0x13c>
    2b34:	8809883a 	mov	r4,r17
    2b38:	0004e980 	call	4e98 <_free_r>
    2b3c:	8180030b 	ldhu	r6,12(r16)
    2b40:	80000c15 	stw	zero,48(r16)
    2b44:	80c00417 	ldw	r3,16(r16)
    2b48:	00bff6c4 	movi	r2,-37
    2b4c:	118c703a 	and	r6,r2,r6
    2b50:	80000115 	stw	zero,4(r16)
    2b54:	80c00015 	stw	r3,0(r16)
    2b58:	003fe206 	br	2ae4 <__swsetup_r+0xe0>
    2b5c:	00800244 	movi	r2,9
    2b60:	88800015 	stw	r2,0(r17)
    2b64:	31801014 	ori	r6,r6,64
    2b68:	8180030d 	sth	r6,12(r16)
    2b6c:	00bfffc4 	movi	r2,-1
    2b70:	003fc006 	br	2a74 <__swsetup_r+0x70>

00002b74 <__call_exitprocs>:
    2b74:	f811883a 	mov	r8,ra
    2b78:	000e1ac0 	call	e1ac <_mcount>
    2b7c:	403f883a 	mov	ra,r8
    2b80:	defff704 	addi	sp,sp,-36
    2b84:	dfc00815 	stw	ra,32(sp)
    2b88:	ddc00715 	stw	r23,28(sp)
    2b8c:	dd800615 	stw	r22,24(sp)
    2b90:	dd400515 	stw	r21,20(sp)
    2b94:	dd000415 	stw	r20,16(sp)
    2b98:	dcc00315 	stw	r19,12(sp)
    2b9c:	dc800215 	stw	r18,8(sp)
    2ba0:	dc400115 	stw	r17,4(sp)
    2ba4:	dc000015 	stw	r16,0(sp)
    2ba8:	00800074 	movhi	r2,1
    2bac:	14c8d017 	ldw	r19,9024(r2)
    2bb0:	9c805217 	ldw	r18,328(r19)
    2bb4:	90001026 	beq	r18,zero,2bf8 <__call_exitprocs+0x84>
    2bb8:	202b883a 	mov	r21,r4
    2bbc:	282d883a 	mov	r22,r5
    2bc0:	05000044 	movi	r20,1
    2bc4:	94000117 	ldw	r16,4(r18)
    2bc8:	847fffc4 	addi	r17,r16,-1
    2bcc:	88000a16 	blt	r17,zero,2bf8 <__call_exitprocs+0x84>
    2bd0:	84000044 	addi	r16,r16,1
    2bd4:	802090ba 	slli	r16,r16,2
    2bd8:	9421883a 	add	r16,r18,r16
    2bdc:	b0001126 	beq	r22,zero,2c24 <__call_exitprocs+0xb0>
    2be0:	80804017 	ldw	r2,256(r16)
    2be4:	15800f26 	beq	r2,r22,2c24 <__call_exitprocs+0xb0>
    2be8:	8c7fffc4 	addi	r17,r17,-1
    2bec:	88bfffd8 	cmpnei	r2,r17,-1
    2bf0:	843fff04 	addi	r16,r16,-4
    2bf4:	103ff91e 	bne	r2,zero,2bdc <__call_exitprocs+0x68>
    2bf8:	dfc00817 	ldw	ra,32(sp)
    2bfc:	ddc00717 	ldw	r23,28(sp)
    2c00:	dd800617 	ldw	r22,24(sp)
    2c04:	dd400517 	ldw	r21,20(sp)
    2c08:	dd000417 	ldw	r20,16(sp)
    2c0c:	dcc00317 	ldw	r19,12(sp)
    2c10:	dc800217 	ldw	r18,8(sp)
    2c14:	dc400117 	ldw	r17,4(sp)
    2c18:	dc000017 	ldw	r16,0(sp)
    2c1c:	dec00904 	addi	sp,sp,36
    2c20:	f800283a 	ret
    2c24:	90800117 	ldw	r2,4(r18)
    2c28:	81800017 	ldw	r6,0(r16)
    2c2c:	10bfffc4 	addi	r2,r2,-1
    2c30:	14401726 	beq	r2,r17,2c90 <__call_exitprocs+0x11c>
    2c34:	80000015 	stw	zero,0(r16)
    2c38:	303feb26 	beq	r6,zero,2be8 <__call_exitprocs+0x74>
    2c3c:	a446983a 	sll	r3,r20,r17
    2c40:	90806217 	ldw	r2,392(r18)
    2c44:	95c00117 	ldw	r23,4(r18)
    2c48:	1884703a 	and	r2,r3,r2
    2c4c:	1000081e 	bne	r2,zero,2c70 <__call_exitprocs+0xfc>
    2c50:	303ee83a 	callr	r6
    2c54:	90c00117 	ldw	r3,4(r18)
    2c58:	98805217 	ldw	r2,328(r19)
    2c5c:	1dc0011e 	bne	r3,r23,2c64 <__call_exitprocs+0xf0>
    2c60:	90bfe126 	beq	r18,r2,2be8 <__call_exitprocs+0x74>
    2c64:	103fe426 	beq	r2,zero,2bf8 <__call_exitprocs+0x84>
    2c68:	1025883a 	mov	r18,r2
    2c6c:	003fd506 	br	2bc4 <__call_exitprocs+0x50>
    2c70:	90806317 	ldw	r2,396(r18)
    2c74:	81002017 	ldw	r4,128(r16)
    2c78:	1886703a 	and	r3,r3,r2
    2c7c:	1800061e 	bne	r3,zero,2c98 <__call_exitprocs+0x124>
    2c80:	200b883a 	mov	r5,r4
    2c84:	a809883a 	mov	r4,r21
    2c88:	303ee83a 	callr	r6
    2c8c:	003ff106 	br	2c54 <__call_exitprocs+0xe0>
    2c90:	94400115 	stw	r17,4(r18)
    2c94:	003fe806 	br	2c38 <__call_exitprocs+0xc4>
    2c98:	303ee83a 	callr	r6
    2c9c:	003fed06 	br	2c54 <__call_exitprocs+0xe0>

00002ca0 <quorem>:
    2ca0:	f811883a 	mov	r8,ra
    2ca4:	000e1ac0 	call	e1ac <_mcount>
    2ca8:	403f883a 	mov	ra,r8
    2cac:	defff504 	addi	sp,sp,-44
    2cb0:	dfc00a15 	stw	ra,40(sp)
    2cb4:	df000915 	stw	fp,36(sp)
    2cb8:	ddc00815 	stw	r23,32(sp)
    2cbc:	dd800715 	stw	r22,28(sp)
    2cc0:	dd400615 	stw	r21,24(sp)
    2cc4:	dd000515 	stw	r20,20(sp)
    2cc8:	dcc00415 	stw	r19,16(sp)
    2ccc:	dc800315 	stw	r18,12(sp)
    2cd0:	dc400215 	stw	r17,8(sp)
    2cd4:	dc000115 	stw	r16,4(sp)
    2cd8:	2c800417 	ldw	r18,16(r5)
    2cdc:	20800417 	ldw	r2,16(r4)
    2ce0:	14806f16 	blt	r2,r18,2ea0 <quorem+0x200>
    2ce4:	94bfffc4 	addi	r18,r18,-1
    2ce8:	902c90ba 	slli	r22,r18,2
    2cec:	2c000504 	addi	r16,r5,20
    2cf0:	25000504 	addi	r20,r4,20
    2cf4:	85a7883a 	add	r19,r16,r22
    2cf8:	9f000017 	ldw	fp,0(r19)
    2cfc:	a5ad883a 	add	r22,r20,r22
    2d00:	202b883a 	mov	r21,r4
    2d04:	b1000017 	ldw	r4,0(r22)
    2d08:	e7000044 	addi	fp,fp,1
    2d0c:	282f883a 	mov	r23,r5
    2d10:	e00b883a 	mov	r5,fp
    2d14:	d9000015 	stw	r4,0(sp)
    2d18:	000b3580 	call	b358 <__udivsi3>
    2d1c:	d9000017 	ldw	r4,0(sp)
    2d20:	1023883a 	mov	r17,r2
    2d24:	27002a36 	bltu	r4,fp,2dd0 <quorem+0x130>
    2d28:	800b883a 	mov	r5,r16
    2d2c:	a009883a 	mov	r4,r20
    2d30:	0013883a 	mov	r9,zero
    2d34:	0007883a 	mov	r3,zero
    2d38:	2a000017 	ldw	r8,0(r5)
    2d3c:	21800017 	ldw	r6,0(r4)
    2d40:	21000104 	addi	r4,r4,4
    2d44:	40bfffcc 	andi	r2,r8,65535
    2d48:	1445383a 	mul	r2,r2,r17
    2d4c:	400ed43a 	srli	r7,r8,16
    2d50:	32bfffcc 	andi	r10,r6,65535
    2d54:	1245883a 	add	r2,r2,r9
    2d58:	1012d43a 	srli	r9,r2,16
    2d5c:	123fffcc 	andi	r8,r2,65535
    2d60:	3c4f383a 	mul	r7,r7,r17
    2d64:	1a07c83a 	sub	r3,r3,r8
    2d68:	1a91883a 	add	r8,r3,r10
    2d6c:	3006d43a 	srli	r3,r6,16
    2d70:	4005d43a 	srai	r2,r8,16
    2d74:	3a4f883a 	add	r7,r7,r9
    2d78:	39bfffcc 	andi	r6,r7,65535
    2d7c:	1987c83a 	sub	r3,r3,r6
    2d80:	1887883a 	add	r3,r3,r2
    2d84:	1804943a 	slli	r2,r3,16
    2d88:	423fffcc 	andi	r8,r8,65535
    2d8c:	29400104 	addi	r5,r5,4
    2d90:	1210b03a 	or	r8,r2,r8
    2d94:	223fff15 	stw	r8,-4(r4)
    2d98:	3812d43a 	srli	r9,r7,16
    2d9c:	1807d43a 	srai	r3,r3,16
    2da0:	997fe52e 	bgeu	r19,r5,2d38 <quorem+0x98>
    2da4:	b0800017 	ldw	r2,0(r22)
    2da8:	1000091e 	bne	r2,zero,2dd0 <quorem+0x130>
    2dac:	b5bfff04 	addi	r22,r22,-4
    2db0:	a5800336 	bltu	r20,r22,2dc0 <quorem+0x120>
    2db4:	00000506 	br	2dcc <quorem+0x12c>
    2db8:	94bfffc4 	addi	r18,r18,-1
    2dbc:	a580032e 	bgeu	r20,r22,2dcc <quorem+0x12c>
    2dc0:	b0800017 	ldw	r2,0(r22)
    2dc4:	b5bfff04 	addi	r22,r22,-4
    2dc8:	103ffb26 	beq	r2,zero,2db8 <quorem+0x118>
    2dcc:	ac800415 	stw	r18,16(r21)
    2dd0:	b80b883a 	mov	r5,r23
    2dd4:	a809883a 	mov	r4,r21
    2dd8:	0006fe80 	call	6fe8 <__mcmp>
    2ddc:	10002316 	blt	r2,zero,2e6c <quorem+0x1cc>
    2de0:	8c400044 	addi	r17,r17,1
    2de4:	a00d883a 	mov	r6,r20
    2de8:	0007883a 	mov	r3,zero
    2dec:	81000017 	ldw	r4,0(r16)
    2df0:	31400017 	ldw	r5,0(r6)
    2df4:	31800104 	addi	r6,r6,4
    2df8:	20bfffcc 	andi	r2,r4,65535
    2dfc:	1887c83a 	sub	r3,r3,r2
    2e00:	28bfffcc 	andi	r2,r5,65535
    2e04:	1885883a 	add	r2,r3,r2
    2e08:	2008d43a 	srli	r4,r4,16
    2e0c:	2806d43a 	srli	r3,r5,16
    2e10:	100fd43a 	srai	r7,r2,16
    2e14:	117fffcc 	andi	r5,r2,65535
    2e18:	1907c83a 	sub	r3,r3,r4
    2e1c:	19c7883a 	add	r3,r3,r7
    2e20:	1804943a 	slli	r2,r3,16
    2e24:	84000104 	addi	r16,r16,4
    2e28:	1807d43a 	srai	r3,r3,16
    2e2c:	1144b03a 	or	r2,r2,r5
    2e30:	30bfff15 	stw	r2,-4(r6)
    2e34:	9c3fed2e 	bgeu	r19,r16,2dec <quorem+0x14c>
    2e38:	900490ba 	slli	r2,r18,2
    2e3c:	a085883a 	add	r2,r20,r2
    2e40:	10c00017 	ldw	r3,0(r2)
    2e44:	1800091e 	bne	r3,zero,2e6c <quorem+0x1cc>
    2e48:	10bfff04 	addi	r2,r2,-4
    2e4c:	a0800336 	bltu	r20,r2,2e5c <quorem+0x1bc>
    2e50:	00000506 	br	2e68 <quorem+0x1c8>
    2e54:	94bfffc4 	addi	r18,r18,-1
    2e58:	a080032e 	bgeu	r20,r2,2e68 <quorem+0x1c8>
    2e5c:	10c00017 	ldw	r3,0(r2)
    2e60:	10bfff04 	addi	r2,r2,-4
    2e64:	183ffb26 	beq	r3,zero,2e54 <quorem+0x1b4>
    2e68:	ac800415 	stw	r18,16(r21)
    2e6c:	8805883a 	mov	r2,r17
    2e70:	dfc00a17 	ldw	ra,40(sp)
    2e74:	df000917 	ldw	fp,36(sp)
    2e78:	ddc00817 	ldw	r23,32(sp)
    2e7c:	dd800717 	ldw	r22,28(sp)
    2e80:	dd400617 	ldw	r21,24(sp)
    2e84:	dd000517 	ldw	r20,20(sp)
    2e88:	dcc00417 	ldw	r19,16(sp)
    2e8c:	dc800317 	ldw	r18,12(sp)
    2e90:	dc400217 	ldw	r17,8(sp)
    2e94:	dc000117 	ldw	r16,4(sp)
    2e98:	dec00b04 	addi	sp,sp,44
    2e9c:	f800283a 	ret
    2ea0:	0005883a 	mov	r2,zero
    2ea4:	003ff206 	br	2e70 <quorem+0x1d0>

00002ea8 <_dtoa_r>:
    2ea8:	f811883a 	mov	r8,ra
    2eac:	000e1ac0 	call	e1ac <_mcount>
    2eb0:	403f883a 	mov	ra,r8
    2eb4:	deffe204 	addi	sp,sp,-120
    2eb8:	dfc01d15 	stw	ra,116(sp)
    2ebc:	df001c15 	stw	fp,112(sp)
    2ec0:	ddc01b15 	stw	r23,108(sp)
    2ec4:	dd801a15 	stw	r22,104(sp)
    2ec8:	dd401915 	stw	r21,100(sp)
    2ecc:	dd001815 	stw	r20,96(sp)
    2ed0:	dcc01715 	stw	r19,92(sp)
    2ed4:	dc801615 	stw	r18,88(sp)
    2ed8:	dc401515 	stw	r17,84(sp)
    2edc:	dc001415 	stw	r16,80(sp)
    2ee0:	20801017 	ldw	r2,64(r4)
    2ee4:	d9c00215 	stw	r7,8(sp)
    2ee8:	dc002017 	ldw	r16,128(sp)
    2eec:	202f883a 	mov	r23,r4
    2ef0:	3025883a 	mov	r18,r6
    2ef4:	2827883a 	mov	r19,r5
    2ef8:	3023883a 	mov	r17,r6
    2efc:	10000826 	beq	r2,zero,2f20 <_dtoa_r+0x78>
    2f00:	21801117 	ldw	r6,68(r4)
    2f04:	00c00044 	movi	r3,1
    2f08:	100b883a 	mov	r5,r2
    2f0c:	1986983a 	sll	r3,r3,r6
    2f10:	11800115 	stw	r6,4(r2)
    2f14:	10c00215 	stw	r3,8(r2)
    2f18:	00066000 	call	6600 <_Bfree>
    2f1c:	b8001015 	stw	zero,64(r23)
    2f20:	90018816 	blt	r18,zero,3544 <_dtoa_r+0x69c>
    2f24:	80000015 	stw	zero,0(r16)
    2f28:	909ffc2c 	andhi	r2,r18,32752
    2f2c:	00dffc34 	movhi	r3,32752
    2f30:	10c18d26 	beq	r2,r3,3568 <_dtoa_r+0x6c0>
    2f34:	000d883a 	mov	r6,zero
    2f38:	000f883a 	mov	r7,zero
    2f3c:	9809883a 	mov	r4,r19
    2f40:	880b883a 	mov	r5,r17
    2f44:	000c5940 	call	c594 <__eqdf2>
    2f48:	1000191e 	bne	r2,zero,2fb0 <_dtoa_r+0x108>
    2f4c:	d8c01f17 	ldw	r3,124(sp)
    2f50:	00800044 	movi	r2,1
    2f54:	18800015 	stw	r2,0(r3)
    2f58:	d8802117 	ldw	r2,132(sp)
    2f5c:	1002f926 	beq	r2,zero,3b44 <_dtoa_r+0xc9c>
    2f60:	d9002117 	ldw	r4,132(sp)
    2f64:	00800074 	movhi	r2,1
    2f68:	10802044 	addi	r2,r2,129
    2f6c:	00c00074 	movhi	r3,1
    2f70:	20800015 	stw	r2,0(r4)
    2f74:	18802004 	addi	r2,r3,128
    2f78:	d8800115 	stw	r2,4(sp)
    2f7c:	d8800117 	ldw	r2,4(sp)
    2f80:	dfc01d17 	ldw	ra,116(sp)
    2f84:	df001c17 	ldw	fp,112(sp)
    2f88:	ddc01b17 	ldw	r23,108(sp)
    2f8c:	dd801a17 	ldw	r22,104(sp)
    2f90:	dd401917 	ldw	r21,100(sp)
    2f94:	dd001817 	ldw	r20,96(sp)
    2f98:	dcc01717 	ldw	r19,92(sp)
    2f9c:	dc801617 	ldw	r18,88(sp)
    2fa0:	dc401517 	ldw	r17,84(sp)
    2fa4:	dc001417 	ldw	r16,80(sp)
    2fa8:	dec01e04 	addi	sp,sp,120
    2fac:	f800283a 	ret
    2fb0:	d8801204 	addi	r2,sp,72
    2fb4:	9020d53a 	srli	r16,r18,20
    2fb8:	d8800015 	stw	r2,0(sp)
    2fbc:	d9c01304 	addi	r7,sp,76
    2fc0:	980b883a 	mov	r5,r19
    2fc4:	880d883a 	mov	r6,r17
    2fc8:	b809883a 	mov	r4,r23
    2fcc:	00073f80 	call	73f8 <__d2b>
    2fd0:	1039883a 	mov	fp,r2
    2fd4:	8001771e 	bne	r16,zero,35b4 <_dtoa_r+0x70c>
    2fd8:	dd001217 	ldw	r20,72(sp)
    2fdc:	dc001317 	ldw	r16,76(sp)
    2fe0:	a421883a 	add	r16,r20,r16
    2fe4:	80810c84 	addi	r2,r16,1074
    2fe8:	10c00850 	cmplti	r3,r2,33
    2fec:	1802e51e 	bne	r3,zero,3b84 <_dtoa_r+0xcdc>
    2ff0:	01001004 	movi	r4,64
    2ff4:	2085c83a 	sub	r2,r4,r2
    2ff8:	81010484 	addi	r4,r16,1042
    2ffc:	90a4983a 	sll	r18,r18,r2
    3000:	9908d83a 	srl	r4,r19,r4
    3004:	9108b03a 	or	r4,r18,r4
    3008:	000d8f80 	call	d8f8 <__floatunsidf>
    300c:	1009883a 	mov	r4,r2
    3010:	017f8434 	movhi	r5,65040
    3014:	00800044 	movi	r2,1
    3018:	194b883a 	add	r5,r3,r5
    301c:	843fffc4 	addi	r16,r16,-1
    3020:	d8800a15 	stw	r2,40(sp)
    3024:	000d883a 	mov	r6,zero
    3028:	01cffe34 	movhi	r7,16376
    302c:	000ce880 	call	ce88 <__subdf3>
    3030:	0198dbf4 	movhi	r6,25455
    3034:	01cff4f4 	movhi	r7,16339
    3038:	3190d844 	addi	r6,r6,17249
    303c:	39e1e9c4 	addi	r7,r7,-30809
    3040:	1009883a 	mov	r4,r2
    3044:	180b883a 	mov	r5,r3
    3048:	000c8080 	call	c808 <__muldf3>
    304c:	01a2d874 	movhi	r6,35681
    3050:	01cff1f4 	movhi	r7,16327
    3054:	31b22cc4 	addi	r6,r6,-14157
    3058:	39e28a04 	addi	r7,r7,-30168
    305c:	180b883a 	mov	r5,r3
    3060:	1009883a 	mov	r4,r2
    3064:	000b4300 	call	b430 <__adddf3>
    3068:	8009883a 	mov	r4,r16
    306c:	102b883a 	mov	r21,r2
    3070:	1825883a 	mov	r18,r3
    3074:	000d8340 	call	d834 <__floatsidf>
    3078:	019427f4 	movhi	r6,20639
    307c:	01cff4f4 	movhi	r7,16339
    3080:	319e7ec4 	addi	r6,r6,31227
    3084:	39d104c4 	addi	r7,r7,17427
    3088:	1009883a 	mov	r4,r2
    308c:	180b883a 	mov	r5,r3
    3090:	000c8080 	call	c808 <__muldf3>
    3094:	100d883a 	mov	r6,r2
    3098:	180f883a 	mov	r7,r3
    309c:	a809883a 	mov	r4,r21
    30a0:	900b883a 	mov	r5,r18
    30a4:	000b4300 	call	b430 <__adddf3>
    30a8:	1009883a 	mov	r4,r2
    30ac:	180b883a 	mov	r5,r3
    30b0:	1025883a 	mov	r18,r2
    30b4:	182d883a 	mov	r22,r3
    30b8:	000d7a80 	call	d7a8 <__fixdfsi>
    30bc:	000d883a 	mov	r6,zero
    30c0:	000f883a 	mov	r7,zero
    30c4:	9009883a 	mov	r4,r18
    30c8:	b00b883a 	mov	r5,r22
    30cc:	102b883a 	mov	r21,r2
    30d0:	d8800315 	stw	r2,12(sp)
    30d4:	000c7140 	call	c714 <__ledf2>
    30d8:	10028f16 	blt	r2,zero,3b18 <_dtoa_r+0xc70>
    30dc:	dc800317 	ldw	r18,12(sp)
    30e0:	a421c83a 	sub	r16,r20,r16
    30e4:	85bfffc4 	addi	r22,r16,-1
    30e8:	908005e8 	cmpgeui	r2,r18,23
    30ec:	1002821e 	bne	r2,zero,3af8 <_dtoa_r+0xc50>
    30f0:	900690fa 	slli	r3,r18,3
    30f4:	00800074 	movhi	r2,1
    30f8:	10806904 	addi	r2,r2,420
    30fc:	10c5883a 	add	r2,r2,r3
    3100:	11800017 	ldw	r6,0(r2)
    3104:	11c00117 	ldw	r7,4(r2)
    3108:	9809883a 	mov	r4,r19
    310c:	880b883a 	mov	r5,r17
    3110:	000c7140 	call	c714 <__ledf2>
    3114:	1002550e 	bge	r2,zero,3a6c <_dtoa_r+0xbc4>
    3118:	90bfffc4 	addi	r2,r18,-1
    311c:	d8800315 	stw	r2,12(sp)
    3120:	d8000915 	stw	zero,36(sp)
    3124:	b0027716 	blt	r22,zero,3b04 <_dtoa_r+0xc5c>
    3128:	d8000615 	stw	zero,24(sp)
    312c:	d8800317 	ldw	r2,12(sp)
    3130:	1002510e 	bge	r2,zero,3a78 <_dtoa_r+0xbd0>
    3134:	d8800317 	ldw	r2,12(sp)
    3138:	d8c00617 	ldw	r3,24(sp)
    313c:	d8000315 	stw	zero,12(sp)
    3140:	d8800415 	stw	r2,16(sp)
    3144:	1887c83a 	sub	r3,r3,r2
    3148:	d8c00615 	stw	r3,24(sp)
    314c:	0087c83a 	sub	r3,zero,r2
    3150:	d8c00815 	stw	r3,32(sp)
    3154:	d8c00217 	ldw	r3,8(sp)
    3158:	188002a8 	cmpgeui	r2,r3,10
    315c:	10024d1e 	bne	r2,zero,3a94 <_dtoa_r+0xbec>
    3160:	18800190 	cmplti	r2,r3,6
    3164:	10028b1e 	bne	r2,zero,3b94 <_dtoa_r+0xcec>
    3168:	18bfff04 	addi	r2,r3,-4
    316c:	d8800215 	stw	r2,8(sp)
    3170:	0021883a 	mov	r16,zero
    3174:	d8c00217 	ldw	r3,8(sp)
    3178:	18800120 	cmpeqi	r2,r3,4
    317c:	10035d1e 	bne	r2,zero,3ef4 <_dtoa_r+0x104c>
    3180:	18800160 	cmpeqi	r2,r3,5
    3184:	10031b1e 	bne	r2,zero,3df4 <_dtoa_r+0xf4c>
    3188:	188000a0 	cmpeqi	r2,r3,2
    318c:	10024d26 	beq	r2,zero,3ac4 <_dtoa_r+0xc1c>
    3190:	d8000715 	stw	zero,28(sp)
    3194:	d8801e17 	ldw	r2,120(sp)
    3198:	0083260e 	bge	zero,r2,3e34 <_dtoa_r+0xf8c>
    319c:	d8800b15 	stw	r2,44(sp)
    31a0:	d8800515 	stw	r2,20(sp)
    31a4:	100d883a 	mov	r6,r2
    31a8:	b8001115 	stw	zero,68(r23)
    31ac:	30800610 	cmplti	r2,r6,24
    31b0:	1004f11e 	bne	r2,zero,4578 <_dtoa_r+0x16d0>
    31b4:	00c00044 	movi	r3,1
    31b8:	00800104 	movi	r2,4
    31bc:	1085883a 	add	r2,r2,r2
    31c0:	11000504 	addi	r4,r2,20
    31c4:	180b883a 	mov	r5,r3
    31c8:	18c00044 	addi	r3,r3,1
    31cc:	313ffb2e 	bgeu	r6,r4,31bc <_dtoa_r+0x314>
    31d0:	b9401115 	stw	r5,68(r23)
    31d4:	b809883a 	mov	r4,r23
    31d8:	00065500 	call	6550 <_Balloc>
    31dc:	d8800115 	stw	r2,4(sp)
    31e0:	1004de26 	beq	r2,zero,455c <_dtoa_r+0x16b4>
    31e4:	d8800117 	ldw	r2,4(sp)
    31e8:	b8801015 	stw	r2,64(r23)
    31ec:	d8800517 	ldw	r2,20(sp)
    31f0:	108003e8 	cmpgeui	r2,r2,15
    31f4:	1001021e 	bne	r2,zero,3600 <_dtoa_r+0x758>
    31f8:	80010126 	beq	r16,zero,3600 <_dtoa_r+0x758>
    31fc:	d9000417 	ldw	r4,16(sp)
    3200:	01038b0e 	bge	zero,r4,4030 <_dtoa_r+0x1188>
    3204:	208003cc 	andi	r2,r4,15
    3208:	100690fa 	slli	r3,r2,3
    320c:	2029d13a 	srai	r20,r4,4
    3210:	00800074 	movhi	r2,1
    3214:	10806904 	addi	r2,r2,420
    3218:	10c5883a 	add	r2,r2,r3
    321c:	a0c0040c 	andi	r3,r20,16
    3220:	12800017 	ldw	r10,0(r2)
    3224:	12400117 	ldw	r9,4(r2)
    3228:	18032c26 	beq	r3,zero,3edc <_dtoa_r+0x1034>
    322c:	00800074 	movhi	r2,1
    3230:	10805f04 	addi	r2,r2,380
    3234:	11800817 	ldw	r6,32(r2)
    3238:	11c00917 	ldw	r7,36(r2)
    323c:	9809883a 	mov	r4,r19
    3240:	880b883a 	mov	r5,r17
    3244:	da400e15 	stw	r9,56(sp)
    3248:	da800d15 	stw	r10,52(sp)
    324c:	000bd2c0 	call	bd2c <__divdf3>
    3250:	da800d17 	ldw	r10,52(sp)
    3254:	da400e17 	ldw	r9,56(sp)
    3258:	a50003cc 	andi	r20,r20,15
    325c:	d8800c15 	stw	r2,48(sp)
    3260:	1825883a 	mov	r18,r3
    3264:	054000c4 	movi	r21,3
    3268:	a0001126 	beq	r20,zero,32b0 <_dtoa_r+0x408>
    326c:	04000074 	movhi	r16,1
    3270:	84005f04 	addi	r16,r16,380
    3274:	5009883a 	mov	r4,r10
    3278:	480b883a 	mov	r5,r9
    327c:	a180004c 	andi	r6,r20,1
    3280:	30000626 	beq	r6,zero,329c <_dtoa_r+0x3f4>
    3284:	81800017 	ldw	r6,0(r16)
    3288:	81c00117 	ldw	r7,4(r16)
    328c:	ad400044 	addi	r21,r21,1
    3290:	000c8080 	call	c808 <__muldf3>
    3294:	1009883a 	mov	r4,r2
    3298:	180b883a 	mov	r5,r3
    329c:	a029d07a 	srai	r20,r20,1
    32a0:	84000204 	addi	r16,r16,8
    32a4:	a03ff51e 	bne	r20,zero,327c <_dtoa_r+0x3d4>
    32a8:	2015883a 	mov	r10,r4
    32ac:	2813883a 	mov	r9,r5
    32b0:	d9000c17 	ldw	r4,48(sp)
    32b4:	900b883a 	mov	r5,r18
    32b8:	500d883a 	mov	r6,r10
    32bc:	480f883a 	mov	r7,r9
    32c0:	000bd2c0 	call	bd2c <__divdf3>
    32c4:	1021883a 	mov	r16,r2
    32c8:	1825883a 	mov	r18,r3
    32cc:	d8800917 	ldw	r2,36(sp)
    32d0:	10000626 	beq	r2,zero,32ec <_dtoa_r+0x444>
    32d4:	000d883a 	mov	r6,zero
    32d8:	01cffc34 	movhi	r7,16368
    32dc:	8009883a 	mov	r4,r16
    32e0:	900b883a 	mov	r5,r18
    32e4:	000c7140 	call	c714 <__ledf2>
    32e8:	10044416 	blt	r2,zero,43fc <_dtoa_r+0x1554>
    32ec:	a809883a 	mov	r4,r21
    32f0:	000d8340 	call	d834 <__floatsidf>
    32f4:	800d883a 	mov	r6,r16
    32f8:	900f883a 	mov	r7,r18
    32fc:	1009883a 	mov	r4,r2
    3300:	180b883a 	mov	r5,r3
    3304:	000c8080 	call	c808 <__muldf3>
    3308:	000d883a 	mov	r6,zero
    330c:	01d00734 	movhi	r7,16412
    3310:	1009883a 	mov	r4,r2
    3314:	180b883a 	mov	r5,r3
    3318:	000b4300 	call	b430 <__adddf3>
    331c:	1029883a 	mov	r20,r2
    3320:	00bf3034 	movhi	r2,64704
    3324:	1885883a 	add	r2,r3,r2
    3328:	d8800c15 	stw	r2,48(sp)
    332c:	d8800517 	ldw	r2,20(sp)
    3330:	10032226 	beq	r2,zero,3fbc <_dtoa_r+0x1114>
    3334:	d8800417 	ldw	r2,16(sp)
    3338:	d8801115 	stw	r2,68(sp)
    333c:	d8800517 	ldw	r2,20(sp)
    3340:	d8800d15 	stw	r2,52(sp)
    3344:	d8800d17 	ldw	r2,52(sp)
    3348:	900b883a 	mov	r5,r18
    334c:	8009883a 	mov	r4,r16
    3350:	10bfffc4 	addi	r2,r2,-1
    3354:	100690fa 	slli	r3,r2,3
    3358:	00800074 	movhi	r2,1
    335c:	10806904 	addi	r2,r2,420
    3360:	10c5883a 	add	r2,r2,r3
    3364:	12800017 	ldw	r10,0(r2)
    3368:	12c00117 	ldw	r11,4(r2)
    336c:	da800f15 	stw	r10,60(sp)
    3370:	dac00e15 	stw	r11,56(sp)
    3374:	000d7a80 	call	d7a8 <__fixdfsi>
    3378:	1009883a 	mov	r4,r2
    337c:	10800c04 	addi	r2,r2,48
    3380:	d8801015 	stw	r2,64(sp)
    3384:	000d8340 	call	d834 <__floatsidf>
    3388:	8009883a 	mov	r4,r16
    338c:	100d883a 	mov	r6,r2
    3390:	180f883a 	mov	r7,r3
    3394:	900b883a 	mov	r5,r18
    3398:	000ce880 	call	ce88 <__subdf3>
    339c:	d9000117 	ldw	r4,4(sp)
    33a0:	dac00e17 	ldw	r11,56(sp)
    33a4:	da800f17 	ldw	r10,60(sp)
    33a8:	1825883a 	mov	r18,r3
    33ac:	d8c00717 	ldw	r3,28(sp)
    33b0:	25400044 	addi	r21,r4,1
    33b4:	1021883a 	mov	r16,r2
    33b8:	500d883a 	mov	r6,r10
    33bc:	580f883a 	mov	r7,r11
    33c0:	1803b626 	beq	r3,zero,429c <_dtoa_r+0x13f4>
    33c4:	0009883a 	mov	r4,zero
    33c8:	014ff834 	movhi	r5,16352
    33cc:	000bd2c0 	call	bd2c <__divdf3>
    33d0:	d9c00c17 	ldw	r7,48(sp)
    33d4:	a00d883a 	mov	r6,r20
    33d8:	1009883a 	mov	r4,r2
    33dc:	180b883a 	mov	r5,r3
    33e0:	000ce880 	call	ce88 <__subdf3>
    33e4:	d9000117 	ldw	r4,4(sp)
    33e8:	1029883a 	mov	r20,r2
    33ec:	d8801017 	ldw	r2,64(sp)
    33f0:	800d883a 	mov	r6,r16
    33f4:	900f883a 	mov	r7,r18
    33f8:	20800005 	stb	r2,0(r4)
    33fc:	180b883a 	mov	r5,r3
    3400:	a009883a 	mov	r4,r20
    3404:	d8c00c15 	stw	r3,48(sp)
    3408:	000c6200 	call	c620 <__gedf2>
    340c:	0083e716 	blt	zero,r2,43ac <_dtoa_r+0x1504>
    3410:	0005883a 	mov	r2,zero
    3414:	dd800e15 	stw	r22,56(sp)
    3418:	dc400f15 	stw	r17,60(sp)
    341c:	dd800d17 	ldw	r22,52(sp)
    3420:	dc400c17 	ldw	r17,48(sp)
    3424:	ddc00d15 	stw	r23,52(sp)
    3428:	dcc00c15 	stw	r19,48(sp)
    342c:	1027883a 	mov	r19,r2
    3430:	00002606 	br	34cc <_dtoa_r+0x624>
    3434:	9cc00044 	addi	r19,r19,1
    3438:	9d806d0e 	bge	r19,r22,35f0 <_dtoa_r+0x748>
    343c:	a009883a 	mov	r4,r20
    3440:	880b883a 	mov	r5,r17
    3444:	000d883a 	mov	r6,zero
    3448:	01d00934 	movhi	r7,16420
    344c:	000c8080 	call	c808 <__muldf3>
    3450:	000d883a 	mov	r6,zero
    3454:	01d00934 	movhi	r7,16420
    3458:	8009883a 	mov	r4,r16
    345c:	900b883a 	mov	r5,r18
    3460:	1029883a 	mov	r20,r2
    3464:	1823883a 	mov	r17,r3
    3468:	000c8080 	call	c808 <__muldf3>
    346c:	180b883a 	mov	r5,r3
    3470:	1009883a 	mov	r4,r2
    3474:	1821883a 	mov	r16,r3
    3478:	1025883a 	mov	r18,r2
    347c:	000d7a80 	call	d7a8 <__fixdfsi>
    3480:	1009883a 	mov	r4,r2
    3484:	102f883a 	mov	r23,r2
    3488:	000d8340 	call	d834 <__floatsidf>
    348c:	9009883a 	mov	r4,r18
    3490:	800b883a 	mov	r5,r16
    3494:	100d883a 	mov	r6,r2
    3498:	180f883a 	mov	r7,r3
    349c:	000ce880 	call	ce88 <__subdf3>
    34a0:	ad400044 	addi	r21,r21,1
    34a4:	ba000c04 	addi	r8,r23,48
    34a8:	aa3fffc5 	stb	r8,-1(r21)
    34ac:	a00d883a 	mov	r6,r20
    34b0:	880f883a 	mov	r7,r17
    34b4:	1009883a 	mov	r4,r2
    34b8:	180b883a 	mov	r5,r3
    34bc:	1021883a 	mov	r16,r2
    34c0:	1825883a 	mov	r18,r3
    34c4:	000c7140 	call	c714 <__ledf2>
    34c8:	10040516 	blt	r2,zero,44e0 <_dtoa_r+0x1638>
    34cc:	800d883a 	mov	r6,r16
    34d0:	900f883a 	mov	r7,r18
    34d4:	0009883a 	mov	r4,zero
    34d8:	014ffc34 	movhi	r5,16368
    34dc:	000ce880 	call	ce88 <__subdf3>
    34e0:	a00d883a 	mov	r6,r20
    34e4:	880f883a 	mov	r7,r17
    34e8:	1009883a 	mov	r4,r2
    34ec:	180b883a 	mov	r5,r3
    34f0:	000c7140 	call	c714 <__ledf2>
    34f4:	103fcf0e 	bge	r2,zero,3434 <_dtoa_r+0x58c>
    34f8:	d8801117 	ldw	r2,68(sp)
    34fc:	ddc00d17 	ldw	r23,52(sp)
    3500:	d9000117 	ldw	r4,4(sp)
    3504:	10800044 	addi	r2,r2,1
    3508:	d8800415 	stw	r2,16(sp)
    350c:	a829883a 	mov	r20,r21
    3510:	00000106 	br	3518 <_dtoa_r+0x670>
    3514:	a103da26 	beq	r20,r4,4480 <_dtoa_r+0x15d8>
    3518:	a0ffffc3 	ldbu	r3,-1(r20)
    351c:	a02b883a 	mov	r21,r20
    3520:	a53fffc4 	addi	r20,r20,-1
    3524:	18803fcc 	andi	r2,r3,255
    3528:	1080201c 	xori	r2,r2,128
    352c:	10bfe004 	addi	r2,r2,-128
    3530:	10800e60 	cmpeqi	r2,r2,57
    3534:	103ff71e 	bne	r2,zero,3514 <_dtoa_r+0x66c>
    3538:	18c00044 	addi	r3,r3,1
    353c:	a0c00005 	stb	r3,0(r20)
    3540:	00013f06 	br	3a40 <_dtoa_r+0xb98>
    3544:	04600034 	movhi	r17,32768
    3548:	8c7fffc4 	addi	r17,r17,-1
    354c:	9462703a 	and	r17,r18,r17
    3550:	00800044 	movi	r2,1
    3554:	8825883a 	mov	r18,r17
    3558:	80800015 	stw	r2,0(r16)
    355c:	00dffc34 	movhi	r3,32752
    3560:	909ffc2c 	andhi	r2,r18,32752
    3564:	10fe731e 	bne	r2,r3,2f34 <_dtoa_r+0x8c>
    3568:	d9001f17 	ldw	r4,124(sp)
    356c:	00800434 	movhi	r2,16
    3570:	10bfffc4 	addi	r2,r2,-1
    3574:	9084703a 	and	r2,r18,r2
    3578:	00c9c3c4 	movi	r3,9999
    357c:	20c00015 	stw	r3,0(r4)
    3580:	14e6b03a 	or	r19,r2,r19
    3584:	9800141e 	bne	r19,zero,35d8 <_dtoa_r+0x730>
    3588:	d8802117 	ldw	r2,132(sp)
    358c:	10041226 	beq	r2,zero,45d8 <_dtoa_r+0x1730>
    3590:	00800074 	movhi	r2,1
    3594:	1007883a 	mov	r3,r2
    3598:	18c02a04 	addi	r3,r3,168
    359c:	00800074 	movhi	r2,1
    35a0:	d8c00115 	stw	r3,4(sp)
    35a4:	10802c04 	addi	r2,r2,176
    35a8:	d8c02117 	ldw	r3,132(sp)
    35ac:	18800015 	stw	r2,0(r3)
    35b0:	003e7206 	br	2f7c <_dtoa_r+0xd4>
    35b4:	01400434 	movhi	r5,16
    35b8:	297fffc4 	addi	r5,r5,-1
    35bc:	894a703a 	and	r5,r17,r5
    35c0:	dd001217 	ldw	r20,72(sp)
    35c4:	9809883a 	mov	r4,r19
    35c8:	294ffc34 	orhi	r5,r5,16368
    35cc:	843f0044 	addi	r16,r16,-1023
    35d0:	d8000a15 	stw	zero,40(sp)
    35d4:	003e9306 	br	3024 <_dtoa_r+0x17c>
    35d8:	d8802117 	ldw	r2,132(sp)
    35dc:	1001fe1e 	bne	r2,zero,3dd8 <_dtoa_r+0xf30>
    35e0:	00800074 	movhi	r2,1
    35e4:	10802904 	addi	r2,r2,164
    35e8:	d8800115 	stw	r2,4(sp)
    35ec:	003e6306 	br	2f7c <_dtoa_r+0xd4>
    35f0:	dd800e17 	ldw	r22,56(sp)
    35f4:	ddc00d17 	ldw	r23,52(sp)
    35f8:	dc400f17 	ldw	r17,60(sp)
    35fc:	dcc00c17 	ldw	r19,48(sp)
    3600:	d8801317 	ldw	r2,76(sp)
    3604:	10006e16 	blt	r2,zero,37c0 <_dtoa_r+0x918>
    3608:	d9000417 	ldw	r4,16(sp)
    360c:	20c003c8 	cmpgei	r3,r4,15
    3610:	18006b1e 	bne	r3,zero,37c0 <_dtoa_r+0x918>
    3614:	200690fa 	slli	r3,r4,3
    3618:	00800074 	movhi	r2,1
    361c:	10806904 	addi	r2,r2,420
    3620:	10c5883a 	add	r2,r2,r3
    3624:	14000017 	ldw	r16,0(r2)
    3628:	14800117 	ldw	r18,4(r2)
    362c:	d8801e17 	ldw	r2,120(sp)
    3630:	1000150e 	bge	r2,zero,3688 <_dtoa_r+0x7e0>
    3634:	d8800517 	ldw	r2,20(sp)
    3638:	00801316 	blt	zero,r2,3688 <_dtoa_r+0x7e0>
    363c:	d8800517 	ldw	r2,20(sp)
    3640:	1002721e 	bne	r2,zero,400c <_dtoa_r+0x1164>
    3644:	8009883a 	mov	r4,r16
    3648:	000d883a 	mov	r6,zero
    364c:	01d00534 	movhi	r7,16404
    3650:	900b883a 	mov	r5,r18
    3654:	000c8080 	call	c808 <__muldf3>
    3658:	100d883a 	mov	r6,r2
    365c:	180f883a 	mov	r7,r3
    3660:	9809883a 	mov	r4,r19
    3664:	880b883a 	mov	r5,r17
    3668:	000c7140 	call	c714 <__ledf2>
    366c:	0029883a 	mov	r20,zero
    3670:	0021883a 	mov	r16,zero
    3674:	00820216 	blt	zero,r2,3e80 <_dtoa_r+0xfd8>
    3678:	d8801e17 	ldw	r2,120(sp)
    367c:	dd400117 	ldw	r21,4(sp)
    3680:	00a2303a 	nor	r17,zero,r2
    3684:	00020406 	br	3e98 <_dtoa_r+0xff0>
    3688:	800d883a 	mov	r6,r16
    368c:	900f883a 	mov	r7,r18
    3690:	9809883a 	mov	r4,r19
    3694:	880b883a 	mov	r5,r17
    3698:	000bd2c0 	call	bd2c <__divdf3>
    369c:	180b883a 	mov	r5,r3
    36a0:	1009883a 	mov	r4,r2
    36a4:	000d7a80 	call	d7a8 <__fixdfsi>
    36a8:	1009883a 	mov	r4,r2
    36ac:	102b883a 	mov	r21,r2
    36b0:	000d8340 	call	d834 <__floatsidf>
    36b4:	800d883a 	mov	r6,r16
    36b8:	900f883a 	mov	r7,r18
    36bc:	1009883a 	mov	r4,r2
    36c0:	180b883a 	mov	r5,r3
    36c4:	000c8080 	call	c808 <__muldf3>
    36c8:	100d883a 	mov	r6,r2
    36cc:	9809883a 	mov	r4,r19
    36d0:	880b883a 	mov	r5,r17
    36d4:	180f883a 	mov	r7,r3
    36d8:	000ce880 	call	ce88 <__subdf3>
    36dc:	d9800117 	ldw	r6,4(sp)
    36e0:	dd800517 	ldw	r22,20(sp)
    36e4:	1009883a 	mov	r4,r2
    36e8:	a8800c04 	addi	r2,r21,48
    36ec:	30800005 	stb	r2,0(r6)
    36f0:	b0800060 	cmpeqi	r2,r22,1
    36f4:	180b883a 	mov	r5,r3
    36f8:	35000044 	addi	r20,r6,1
    36fc:	10029f1e 	bne	r2,zero,417c <_dtoa_r+0x12d4>
    3700:	04400044 	movi	r17,1
    3704:	ddc00215 	stw	r23,8(sp)
    3708:	00001c06 	br	377c <_dtoa_r+0x8d4>
    370c:	800d883a 	mov	r6,r16
    3710:	900f883a 	mov	r7,r18
    3714:	a809883a 	mov	r4,r21
    3718:	980b883a 	mov	r5,r19
    371c:	000bd2c0 	call	bd2c <__divdf3>
    3720:	180b883a 	mov	r5,r3
    3724:	1009883a 	mov	r4,r2
    3728:	000d7a80 	call	d7a8 <__fixdfsi>
    372c:	1009883a 	mov	r4,r2
    3730:	102f883a 	mov	r23,r2
    3734:	000d8340 	call	d834 <__floatsidf>
    3738:	800d883a 	mov	r6,r16
    373c:	900f883a 	mov	r7,r18
    3740:	1009883a 	mov	r4,r2
    3744:	180b883a 	mov	r5,r3
    3748:	000c8080 	call	c808 <__muldf3>
    374c:	a809883a 	mov	r4,r21
    3750:	980b883a 	mov	r5,r19
    3754:	100d883a 	mov	r6,r2
    3758:	180f883a 	mov	r7,r3
    375c:	000ce880 	call	ce88 <__subdf3>
    3760:	b9000c04 	addi	r4,r23,48
    3764:	a1000005 	stb	r4,0(r20)
    3768:	8c400044 	addi	r17,r17,1
    376c:	a5000044 	addi	r20,r20,1
    3770:	1009883a 	mov	r4,r2
    3774:	180b883a 	mov	r5,r3
    3778:	8d827e26 	beq	r17,r22,4174 <_dtoa_r+0x12cc>
    377c:	000d883a 	mov	r6,zero
    3780:	01d00934 	movhi	r7,16420
    3784:	000c8080 	call	c808 <__muldf3>
    3788:	000d883a 	mov	r6,zero
    378c:	000f883a 	mov	r7,zero
    3790:	1009883a 	mov	r4,r2
    3794:	180b883a 	mov	r5,r3
    3798:	102b883a 	mov	r21,r2
    379c:	1827883a 	mov	r19,r3
    37a0:	000c5940 	call	c594 <__eqdf2>
    37a4:	103fd91e 	bne	r2,zero,370c <_dtoa_r+0x864>
    37a8:	d8800417 	ldw	r2,16(sp)
    37ac:	ddc00217 	ldw	r23,8(sp)
    37b0:	a02b883a 	mov	r21,r20
    37b4:	10800044 	addi	r2,r2,1
    37b8:	d8800415 	stw	r2,16(sp)
    37bc:	0000a006 	br	3a40 <_dtoa_r+0xb98>
    37c0:	d8c00717 	ldw	r3,28(sp)
    37c4:	1800e326 	beq	r3,zero,3b54 <_dtoa_r+0xcac>
    37c8:	d8c00217 	ldw	r3,8(sp)
    37cc:	18c00088 	cmpgei	r3,r3,2
    37d0:	1801e026 	beq	r3,zero,3f54 <_dtoa_r+0x10ac>
    37d4:	d8800517 	ldw	r2,20(sp)
    37d8:	153fffc4 	addi	r20,r2,-1
    37dc:	d8800817 	ldw	r2,32(sp)
    37e0:	1501bc0e 	bge	r2,r20,3ed4 <_dtoa_r+0x102c>
    37e4:	d8800817 	ldw	r2,32(sp)
    37e8:	d8c00317 	ldw	r3,12(sp)
    37ec:	dd000815 	stw	r20,32(sp)
    37f0:	a085c83a 	sub	r2,r20,r2
    37f4:	1885883a 	add	r2,r3,r2
    37f8:	d8800315 	stw	r2,12(sp)
    37fc:	0029883a 	mov	r20,zero
    3800:	d8800517 	ldw	r2,20(sp)
    3804:	10028b16 	blt	r2,zero,4234 <_dtoa_r+0x138c>
    3808:	d8c00617 	ldw	r3,24(sp)
    380c:	b0ad883a 	add	r22,r22,r2
    3810:	1885883a 	add	r2,r3,r2
    3814:	1825883a 	mov	r18,r3
    3818:	d8800615 	stw	r2,24(sp)
    381c:	01400044 	movi	r5,1
    3820:	b809883a 	mov	r4,r23
    3824:	00069e40 	call	69e4 <__i2b>
    3828:	1021883a 	mov	r16,r2
    382c:	0480080e 	bge	zero,r18,3850 <_dtoa_r+0x9a8>
    3830:	0580070e 	bge	zero,r22,3850 <_dtoa_r+0x9a8>
    3834:	9005883a 	mov	r2,r18
    3838:	b4819e16 	blt	r22,r18,3eb4 <_dtoa_r+0x100c>
    383c:	d8c00617 	ldw	r3,24(sp)
    3840:	90a5c83a 	sub	r18,r18,r2
    3844:	b0adc83a 	sub	r22,r22,r2
    3848:	1887c83a 	sub	r3,r3,r2
    384c:	d8c00615 	stw	r3,24(sp)
    3850:	d8800817 	ldw	r2,32(sp)
    3854:	10001426 	beq	r2,zero,38a8 <_dtoa_r+0xa00>
    3858:	d8800717 	ldw	r2,28(sp)
    385c:	1001ee26 	beq	r2,zero,4018 <_dtoa_r+0x1170>
    3860:	05000e0e 	bge	zero,r20,389c <_dtoa_r+0x9f4>
    3864:	800b883a 	mov	r5,r16
    3868:	a00d883a 	mov	r6,r20
    386c:	b809883a 	mov	r4,r23
    3870:	0006d000 	call	6d00 <__pow5mult>
    3874:	e00d883a 	mov	r6,fp
    3878:	100b883a 	mov	r5,r2
    387c:	b809883a 	mov	r4,r23
    3880:	1021883a 	mov	r16,r2
    3884:	0006aa00 	call	6aa0 <__multiply>
    3888:	102b883a 	mov	r21,r2
    388c:	e00b883a 	mov	r5,fp
    3890:	b809883a 	mov	r4,r23
    3894:	00066000 	call	6600 <_Bfree>
    3898:	a839883a 	mov	fp,r21
    389c:	d8800817 	ldw	r2,32(sp)
    38a0:	150dc83a 	sub	r6,r2,r20
    38a4:	15025e1e 	bne	r2,r20,4220 <_dtoa_r+0x1378>
    38a8:	01400044 	movi	r5,1
    38ac:	b809883a 	mov	r4,r23
    38b0:	00069e40 	call	69e4 <__i2b>
    38b4:	d9800317 	ldw	r6,12(sp)
    38b8:	1029883a 	mov	r20,r2
    38bc:	0180b716 	blt	zero,r6,3b9c <_dtoa_r+0xcf4>
    38c0:	d8800217 	ldw	r2,8(sp)
    38c4:	10800088 	cmpgei	r2,r2,2
    38c8:	10014d26 	beq	r2,zero,3e00 <_dtoa_r+0xf58>
    38cc:	0023883a 	mov	r17,zero
    38d0:	d8c00317 	ldw	r3,12(sp)
    38d4:	00800044 	movi	r2,1
    38d8:	1800b81e 	bne	r3,zero,3bbc <_dtoa_r+0xd14>
    38dc:	1585883a 	add	r2,r2,r22
    38e0:	108007cc 	andi	r2,r2,31
    38e4:	1000a526 	beq	r2,zero,3b7c <_dtoa_r+0xcd4>
    38e8:	00c00804 	movi	r3,32
    38ec:	1887c83a 	sub	r3,r3,r2
    38f0:	19000150 	cmplti	r4,r3,5
    38f4:	20033c1e 	bne	r4,zero,45e8 <_dtoa_r+0x1740>
    38f8:	00c00704 	movi	r3,28
    38fc:	1885c83a 	sub	r2,r3,r2
    3900:	d8c00617 	ldw	r3,24(sp)
    3904:	90a5883a 	add	r18,r18,r2
    3908:	b0ad883a 	add	r22,r22,r2
    390c:	1887883a 	add	r3,r3,r2
    3910:	d8c00615 	stw	r3,24(sp)
    3914:	d8800617 	ldw	r2,24(sp)
    3918:	00809216 	blt	zero,r2,3b64 <_dtoa_r+0xcbc>
    391c:	0580050e 	bge	zero,r22,3934 <_dtoa_r+0xa8c>
    3920:	a00b883a 	mov	r5,r20
    3924:	b00d883a 	mov	r6,r22
    3928:	b809883a 	mov	r4,r23
    392c:	0006e540 	call	6e54 <__lshift>
    3930:	1029883a 	mov	r20,r2
    3934:	d8800917 	ldw	r2,36(sp)
    3938:	1001151e 	bne	r2,zero,3d90 <_dtoa_r+0xee8>
    393c:	d8800517 	ldw	r2,20(sp)
    3940:	0081020e 	bge	zero,r2,3d4c <_dtoa_r+0xea4>
    3944:	d8800717 	ldw	r2,28(sp)
    3948:	1000af1e 	bne	r2,zero,3c08 <_dtoa_r+0xd60>
    394c:	d8800417 	ldw	r2,16(sp)
    3950:	10800044 	addi	r2,r2,1
    3954:	d8800415 	stw	r2,16(sp)
    3958:	dc800517 	ldw	r18,20(sp)
    395c:	dd400117 	ldw	r21,4(sp)
    3960:	04400044 	movi	r17,1
    3964:	00000706 	br	3984 <_dtoa_r+0xadc>
    3968:	e00b883a 	mov	r5,fp
    396c:	000f883a 	mov	r7,zero
    3970:	01800284 	movi	r6,10
    3974:	b809883a 	mov	r4,r23
    3978:	00066300 	call	6630 <__multadd>
    397c:	1039883a 	mov	fp,r2
    3980:	8c400044 	addi	r17,r17,1
    3984:	a00b883a 	mov	r5,r20
    3988:	e009883a 	mov	r4,fp
    398c:	0002ca00 	call	2ca0 <quorem>
    3990:	14c00c04 	addi	r19,r2,48
    3994:	ac45883a 	add	r2,r21,r17
    3998:	14ffffc5 	stb	r19,-1(r2)
    399c:	8cbff216 	blt	r17,r18,3968 <_dtoa_r+0xac0>
    39a0:	d8800517 	ldw	r2,20(sp)
    39a4:	0081510e 	bge	zero,r2,3eec <_dtoa_r+0x1044>
    39a8:	d8c00117 	ldw	r3,4(sp)
    39ac:	0023883a 	mov	r17,zero
    39b0:	18ab883a 	add	r21,r3,r2
    39b4:	e00b883a 	mov	r5,fp
    39b8:	01800044 	movi	r6,1
    39bc:	b809883a 	mov	r4,r23
    39c0:	0006e540 	call	6e54 <__lshift>
    39c4:	1009883a 	mov	r4,r2
    39c8:	a00b883a 	mov	r5,r20
    39cc:	1039883a 	mov	fp,r2
    39d0:	0006fe80 	call	6fe8 <__mcmp>
    39d4:	a93fffc3 	ldbu	r4,-1(r21)
    39d8:	0081490e 	bge	zero,r2,3f00 <_dtoa_r+0x1058>
    39dc:	d9400117 	ldw	r5,4(sp)
    39e0:	00000306 	br	39f0 <_dtoa_r+0xb48>
    39e4:	19415426 	beq	r3,r5,3f38 <_dtoa_r+0x1090>
    39e8:	193fffc3 	ldbu	r4,-1(r3)
    39ec:	182b883a 	mov	r21,r3
    39f0:	20803fcc 	andi	r2,r4,255
    39f4:	1080201c 	xori	r2,r2,128
    39f8:	10bfe004 	addi	r2,r2,-128
    39fc:	10800e60 	cmpeqi	r2,r2,57
    3a00:	a8ffffc4 	addi	r3,r21,-1
    3a04:	103ff71e 	bne	r2,zero,39e4 <_dtoa_r+0xb3c>
    3a08:	21000044 	addi	r4,r4,1
    3a0c:	19000005 	stb	r4,0(r3)
    3a10:	a00b883a 	mov	r5,r20
    3a14:	b809883a 	mov	r4,r23
    3a18:	00066000 	call	6600 <_Bfree>
    3a1c:	80000826 	beq	r16,zero,3a40 <_dtoa_r+0xb98>
    3a20:	88000426 	beq	r17,zero,3a34 <_dtoa_r+0xb8c>
    3a24:	8c000326 	beq	r17,r16,3a34 <_dtoa_r+0xb8c>
    3a28:	880b883a 	mov	r5,r17
    3a2c:	b809883a 	mov	r4,r23
    3a30:	00066000 	call	6600 <_Bfree>
    3a34:	800b883a 	mov	r5,r16
    3a38:	b809883a 	mov	r4,r23
    3a3c:	00066000 	call	6600 <_Bfree>
    3a40:	e00b883a 	mov	r5,fp
    3a44:	b809883a 	mov	r4,r23
    3a48:	00066000 	call	6600 <_Bfree>
    3a4c:	d8801f17 	ldw	r2,124(sp)
    3a50:	d8c00417 	ldw	r3,16(sp)
    3a54:	a8000005 	stb	zero,0(r21)
    3a58:	10c00015 	stw	r3,0(r2)
    3a5c:	d8802117 	ldw	r2,132(sp)
    3a60:	103d4626 	beq	r2,zero,2f7c <_dtoa_r+0xd4>
    3a64:	15400015 	stw	r21,0(r2)
    3a68:	003d4406 	br	2f7c <_dtoa_r+0xd4>
    3a6c:	d8000915 	stw	zero,36(sp)
    3a70:	b0002416 	blt	r22,zero,3b04 <_dtoa_r+0xc5c>
    3a74:	d8000615 	stw	zero,24(sp)
    3a78:	d8800317 	ldw	r2,12(sp)
    3a7c:	d8c00217 	ldw	r3,8(sp)
    3a80:	d8000815 	stw	zero,32(sp)
    3a84:	b0ad883a 	add	r22,r22,r2
    3a88:	d8800415 	stw	r2,16(sp)
    3a8c:	188002a8 	cmpgeui	r2,r3,10
    3a90:	103db326 	beq	r2,zero,3160 <_dtoa_r+0x2b8>
    3a94:	00800044 	movi	r2,1
    3a98:	d8800715 	stw	r2,28(sp)
    3a9c:	00bfffc4 	movi	r2,-1
    3aa0:	04000044 	movi	r16,1
    3aa4:	d8000215 	stw	zero,8(sp)
    3aa8:	d8800515 	stw	r2,20(sp)
    3aac:	d8001e15 	stw	zero,120(sp)
    3ab0:	d8800517 	ldw	r2,20(sp)
    3ab4:	b8001115 	stw	zero,68(r23)
    3ab8:	000b883a 	mov	r5,zero
    3abc:	d8800b15 	stw	r2,44(sp)
    3ac0:	003dc406 	br	31d4 <_dtoa_r+0x32c>
    3ac4:	188000e0 	cmpeqi	r2,r3,3
    3ac8:	d8000715 	stw	zero,28(sp)
    3acc:	1002ac26 	beq	r2,zero,4580 <_dtoa_r+0x16d8>
    3ad0:	d8801e17 	ldw	r2,120(sp)
    3ad4:	d8c00417 	ldw	r3,16(sp)
    3ad8:	10c5883a 	add	r2,r2,r3
    3adc:	d8800b15 	stw	r2,44(sp)
    3ae0:	10800044 	addi	r2,r2,1
    3ae4:	d8800515 	stw	r2,20(sp)
    3ae8:	100d883a 	mov	r6,r2
    3aec:	00bdae16 	blt	zero,r2,31a8 <_dtoa_r+0x300>
    3af0:	01800044 	movi	r6,1
    3af4:	003dac06 	br	31a8 <_dtoa_r+0x300>
    3af8:	00800044 	movi	r2,1
    3afc:	d8800915 	stw	r2,36(sp)
    3b00:	b03d890e 	bge	r22,zero,3128 <_dtoa_r+0x280>
    3b04:	00800044 	movi	r2,1
    3b08:	1405c83a 	sub	r2,r2,r16
    3b0c:	d8800615 	stw	r2,24(sp)
    3b10:	002d883a 	mov	r22,zero
    3b14:	003d8506 	br	312c <_dtoa_r+0x284>
    3b18:	a809883a 	mov	r4,r21
    3b1c:	000d8340 	call	d834 <__floatsidf>
    3b20:	900d883a 	mov	r6,r18
    3b24:	b00f883a 	mov	r7,r22
    3b28:	1009883a 	mov	r4,r2
    3b2c:	180b883a 	mov	r5,r3
    3b30:	000c5940 	call	c594 <__eqdf2>
    3b34:	103d6926 	beq	r2,zero,30dc <_dtoa_r+0x234>
    3b38:	a8bfffc4 	addi	r2,r21,-1
    3b3c:	d8800315 	stw	r2,12(sp)
    3b40:	003d6606 	br	30dc <_dtoa_r+0x234>
    3b44:	00800074 	movhi	r2,1
    3b48:	10802004 	addi	r2,r2,128
    3b4c:	d8800115 	stw	r2,4(sp)
    3b50:	003d0a06 	br	2f7c <_dtoa_r+0xd4>
    3b54:	dd000817 	ldw	r20,32(sp)
    3b58:	dc800617 	ldw	r18,24(sp)
    3b5c:	0021883a 	mov	r16,zero
    3b60:	003f3206 	br	382c <_dtoa_r+0x984>
    3b64:	e00b883a 	mov	r5,fp
    3b68:	100d883a 	mov	r6,r2
    3b6c:	b809883a 	mov	r4,r23
    3b70:	0006e540 	call	6e54 <__lshift>
    3b74:	1039883a 	mov	fp,r2
    3b78:	003f6806 	br	391c <_dtoa_r+0xa74>
    3b7c:	00800704 	movi	r2,28
    3b80:	003f5f06 	br	3900 <_dtoa_r+0xa58>
    3b84:	01000804 	movi	r4,32
    3b88:	2089c83a 	sub	r4,r4,r2
    3b8c:	9908983a 	sll	r4,r19,r4
    3b90:	003d1d06 	br	3008 <_dtoa_r+0x160>
    3b94:	04000044 	movi	r16,1
    3b98:	003d7606 	br	3174 <_dtoa_r+0x2cc>
    3b9c:	100b883a 	mov	r5,r2
    3ba0:	b809883a 	mov	r4,r23
    3ba4:	0006d000 	call	6d00 <__pow5mult>
    3ba8:	d8c00217 	ldw	r3,8(sp)
    3bac:	1029883a 	mov	r20,r2
    3bb0:	18c00090 	cmplti	r3,r3,2
    3bb4:	1801511e 	bne	r3,zero,40fc <_dtoa_r+0x1254>
    3bb8:	0023883a 	mov	r17,zero
    3bbc:	a0800417 	ldw	r2,16(r20)
    3bc0:	10800104 	addi	r2,r2,4
    3bc4:	100490ba 	slli	r2,r2,2
    3bc8:	a085883a 	add	r2,r20,r2
    3bcc:	11000017 	ldw	r4,0(r2)
    3bd0:	00068b80 	call	68b8 <__hi0bits>
    3bd4:	00c00804 	movi	r3,32
    3bd8:	1885c83a 	sub	r2,r3,r2
    3bdc:	003f3f06 	br	38dc <_dtoa_r+0xa34>
    3be0:	800b883a 	mov	r5,r16
    3be4:	000f883a 	mov	r7,zero
    3be8:	01800284 	movi	r6,10
    3bec:	b809883a 	mov	r4,r23
    3bf0:	00066300 	call	6630 <__multadd>
    3bf4:	1021883a 	mov	r16,r2
    3bf8:	d8800b17 	ldw	r2,44(sp)
    3bfc:	00824b0e 	bge	zero,r2,452c <_dtoa_r+0x1684>
    3c00:	dd400415 	stw	r21,16(sp)
    3c04:	d8800515 	stw	r2,20(sp)
    3c08:	0480ac16 	blt	zero,r18,3ebc <_dtoa_r+0x1014>
    3c0c:	8801731e 	bne	r17,zero,41dc <_dtoa_r+0x1334>
    3c10:	8025883a 	mov	r18,r16
    3c14:	dd800117 	ldw	r22,4(sp)
    3c18:	d9000517 	ldw	r4,20(sp)
    3c1c:	98c0004c 	andi	r3,r19,1
    3c20:	b0bfffc4 	addi	r2,r22,-1
    3c24:	1105883a 	add	r2,r2,r4
    3c28:	d8800515 	stw	r2,20(sp)
    3c2c:	d8800217 	ldw	r2,8(sp)
    3c30:	d8c00815 	stw	r3,32(sp)
    3c34:	1884b03a 	or	r2,r3,r2
    3c38:	d8800715 	stw	r2,28(sp)
    3c3c:	00002906 	br	3ce4 <_dtoa_r+0xe3c>
    3c40:	e009883a 	mov	r4,fp
    3c44:	0006fe80 	call	6fe8 <__mcmp>
    3c48:	980b883a 	mov	r5,r19
    3c4c:	b809883a 	mov	r4,r23
    3c50:	d8800315 	stw	r2,12(sp)
    3c54:	00066000 	call	6600 <_Bfree>
    3c58:	d8800317 	ldw	r2,12(sp)
    3c5c:	1000021e 	bne	r2,zero,3c68 <_dtoa_r+0xdc0>
    3c60:	d8c00717 	ldw	r3,28(sp)
    3c64:	18022326 	beq	r3,zero,44f4 <_dtoa_r+0x164c>
    3c68:	b4c00044 	addi	r19,r22,1
    3c6c:	88012916 	blt	r17,zero,4114 <_dtoa_r+0x126c>
    3c70:	d8c00217 	ldw	r3,8(sp)
    3c74:	88e2b03a 	or	r17,r17,r3
    3c78:	d8c00817 	ldw	r3,32(sp)
    3c7c:	1c62b03a 	or	r17,r3,r17
    3c80:	88012426 	beq	r17,zero,4114 <_dtoa_r+0x126c>
    3c84:	00816f16 	blt	zero,r2,4244 <_dtoa_r+0x139c>
    3c88:	d8800517 	ldw	r2,20(sp)
    3c8c:	b5400005 	stb	r21,0(r22)
    3c90:	15817926 	beq	r2,r22,4278 <_dtoa_r+0x13d0>
    3c94:	e00b883a 	mov	r5,fp
    3c98:	000f883a 	mov	r7,zero
    3c9c:	01800284 	movi	r6,10
    3ca0:	b809883a 	mov	r4,r23
    3ca4:	00066300 	call	6630 <__multadd>
    3ca8:	1039883a 	mov	fp,r2
    3cac:	800b883a 	mov	r5,r16
    3cb0:	000f883a 	mov	r7,zero
    3cb4:	01800284 	movi	r6,10
    3cb8:	b809883a 	mov	r4,r23
    3cbc:	84801f26 	beq	r16,r18,3d3c <_dtoa_r+0xe94>
    3cc0:	00066300 	call	6630 <__multadd>
    3cc4:	900b883a 	mov	r5,r18
    3cc8:	000f883a 	mov	r7,zero
    3ccc:	01800284 	movi	r6,10
    3cd0:	b809883a 	mov	r4,r23
    3cd4:	1021883a 	mov	r16,r2
    3cd8:	00066300 	call	6630 <__multadd>
    3cdc:	1025883a 	mov	r18,r2
    3ce0:	982d883a 	mov	r22,r19
    3ce4:	a00b883a 	mov	r5,r20
    3ce8:	e009883a 	mov	r4,fp
    3cec:	0002ca00 	call	2ca0 <quorem>
    3cf0:	800b883a 	mov	r5,r16
    3cf4:	e009883a 	mov	r4,fp
    3cf8:	102b883a 	mov	r21,r2
    3cfc:	d8800615 	stw	r2,24(sp)
    3d00:	0006fe80 	call	6fe8 <__mcmp>
    3d04:	a00b883a 	mov	r5,r20
    3d08:	900d883a 	mov	r6,r18
    3d0c:	b809883a 	mov	r4,r23
    3d10:	1023883a 	mov	r17,r2
    3d14:	00070480 	call	7048 <__mdiff>
    3d18:	1027883a 	mov	r19,r2
    3d1c:	10800317 	ldw	r2,12(r2)
    3d20:	ad400c04 	addi	r21,r21,48
    3d24:	980b883a 	mov	r5,r19
    3d28:	103fc526 	beq	r2,zero,3c40 <_dtoa_r+0xd98>
    3d2c:	b809883a 	mov	r4,r23
    3d30:	00066000 	call	6600 <_Bfree>
    3d34:	00800044 	movi	r2,1
    3d38:	003fcb06 	br	3c68 <_dtoa_r+0xdc0>
    3d3c:	00066300 	call	6630 <__multadd>
    3d40:	1021883a 	mov	r16,r2
    3d44:	1025883a 	mov	r18,r2
    3d48:	003fe506 	br	3ce0 <_dtoa_r+0xe38>
    3d4c:	d8800217 	ldw	r2,8(sp)
    3d50:	108000d0 	cmplti	r2,r2,3
    3d54:	10003e26 	beq	r2,zero,3e50 <_dtoa_r+0xfa8>
    3d58:	d8800717 	ldw	r2,28(sp)
    3d5c:	103faa1e 	bne	r2,zero,3c08 <_dtoa_r+0xd60>
    3d60:	a00b883a 	mov	r5,r20
    3d64:	e009883a 	mov	r4,fp
    3d68:	0002ca00 	call	2ca0 <quorem>
    3d6c:	14c00c04 	addi	r19,r2,48
    3d70:	d8800117 	ldw	r2,4(sp)
    3d74:	0023883a 	mov	r17,zero
    3d78:	15400044 	addi	r21,r2,1
    3d7c:	14c00005 	stb	r19,0(r2)
    3d80:	d8800417 	ldw	r2,16(sp)
    3d84:	10800044 	addi	r2,r2,1
    3d88:	d8800415 	stw	r2,16(sp)
    3d8c:	003f0906 	br	39b4 <_dtoa_r+0xb0c>
    3d90:	a00b883a 	mov	r5,r20
    3d94:	e009883a 	mov	r4,fp
    3d98:	0006fe80 	call	6fe8 <__mcmp>
    3d9c:	103ee70e 	bge	r2,zero,393c <_dtoa_r+0xa94>
    3da0:	e00b883a 	mov	r5,fp
    3da4:	000f883a 	mov	r7,zero
    3da8:	01800284 	movi	r6,10
    3dac:	b809883a 	mov	r4,r23
    3db0:	00066300 	call	6630 <__multadd>
    3db4:	d8c00417 	ldw	r3,16(sp)
    3db8:	1039883a 	mov	fp,r2
    3dbc:	d8800717 	ldw	r2,28(sp)
    3dc0:	1d7fffc4 	addi	r21,r3,-1
    3dc4:	103f861e 	bne	r2,zero,3be0 <_dtoa_r+0xd38>
    3dc8:	d8800b17 	ldw	r2,44(sp)
    3dcc:	0081d20e 	bge	zero,r2,4518 <_dtoa_r+0x1670>
    3dd0:	d8800515 	stw	r2,20(sp)
    3dd4:	003ee006 	br	3958 <_dtoa_r+0xab0>
    3dd8:	00800074 	movhi	r2,1
    3ddc:	1007883a 	mov	r3,r2
    3de0:	18c02904 	addi	r3,r3,164
    3de4:	00800074 	movhi	r2,1
    3de8:	d8c00115 	stw	r3,4(sp)
    3dec:	108029c4 	addi	r2,r2,167
    3df0:	003ded06 	br	35a8 <_dtoa_r+0x700>
    3df4:	00800044 	movi	r2,1
    3df8:	d8800715 	stw	r2,28(sp)
    3dfc:	003f3406 	br	3ad0 <_dtoa_r+0xc28>
    3e00:	983eb21e 	bne	r19,zero,38cc <_dtoa_r+0xa24>
    3e04:	00800434 	movhi	r2,16
    3e08:	10bfffc4 	addi	r2,r2,-1
    3e0c:	8884703a 	and	r2,r17,r2
    3e10:	103eae1e 	bne	r2,zero,38cc <_dtoa_r+0xa24>
    3e14:	8c5ffc2c 	andhi	r17,r17,32752
    3e18:	883eac26 	beq	r17,zero,38cc <_dtoa_r+0xa24>
    3e1c:	d8800617 	ldw	r2,24(sp)
    3e20:	b5800044 	addi	r22,r22,1
    3e24:	04400044 	movi	r17,1
    3e28:	10800044 	addi	r2,r2,1
    3e2c:	d8800615 	stw	r2,24(sp)
    3e30:	003ea706 	br	38d0 <_dtoa_r+0xa28>
    3e34:	00800044 	movi	r2,1
    3e38:	d8800515 	stw	r2,20(sp)
    3e3c:	d8801e15 	stw	r2,120(sp)
    3e40:	003f1b06 	br	3ab0 <_dtoa_r+0xc08>
    3e44:	d8800b17 	ldw	r2,44(sp)
    3e48:	dd400415 	stw	r21,16(sp)
    3e4c:	d8800515 	stw	r2,20(sp)
    3e50:	d8800517 	ldw	r2,20(sp)
    3e54:	103e081e 	bne	r2,zero,3678 <_dtoa_r+0x7d0>
    3e58:	a00b883a 	mov	r5,r20
    3e5c:	b809883a 	mov	r4,r23
    3e60:	000f883a 	mov	r7,zero
    3e64:	01800144 	movi	r6,5
    3e68:	00066300 	call	6630 <__multadd>
    3e6c:	100b883a 	mov	r5,r2
    3e70:	e009883a 	mov	r4,fp
    3e74:	1029883a 	mov	r20,r2
    3e78:	0006fe80 	call	6fe8 <__mcmp>
    3e7c:	00bdfe0e 	bge	zero,r2,3678 <_dtoa_r+0x7d0>
    3e80:	d8c00117 	ldw	r3,4(sp)
    3e84:	00800c44 	movi	r2,49
    3e88:	18800005 	stb	r2,0(r3)
    3e8c:	d8800417 	ldw	r2,16(sp)
    3e90:	1d400044 	addi	r21,r3,1
    3e94:	14400044 	addi	r17,r2,1
    3e98:	a00b883a 	mov	r5,r20
    3e9c:	b809883a 	mov	r4,r23
    3ea0:	00066000 	call	6600 <_Bfree>
    3ea4:	88800044 	addi	r2,r17,1
    3ea8:	d8800415 	stw	r2,16(sp)
    3eac:	803ee11e 	bne	r16,zero,3a34 <_dtoa_r+0xb8c>
    3eb0:	003ee306 	br	3a40 <_dtoa_r+0xb98>
    3eb4:	b005883a 	mov	r2,r22
    3eb8:	003e6006 	br	383c <_dtoa_r+0x994>
    3ebc:	800b883a 	mov	r5,r16
    3ec0:	900d883a 	mov	r6,r18
    3ec4:	b809883a 	mov	r4,r23
    3ec8:	0006e540 	call	6e54 <__lshift>
    3ecc:	1021883a 	mov	r16,r2
    3ed0:	003f4e06 	br	3c0c <_dtoa_r+0xd64>
    3ed4:	1529c83a 	sub	r20,r2,r20
    3ed8:	003e4906 	br	3800 <_dtoa_r+0x958>
    3edc:	dcc00c15 	stw	r19,48(sp)
    3ee0:	8825883a 	mov	r18,r17
    3ee4:	05400084 	movi	r21,2
    3ee8:	003cdf06 	br	3268 <_dtoa_r+0x3c0>
    3eec:	00800044 	movi	r2,1
    3ef0:	003ead06 	br	39a8 <_dtoa_r+0xb00>
    3ef4:	00800044 	movi	r2,1
    3ef8:	d8800715 	stw	r2,28(sp)
    3efc:	003ca506 	br	3194 <_dtoa_r+0x2ec>
    3f00:	1000021e 	bne	r2,zero,3f0c <_dtoa_r+0x1064>
    3f04:	98c0004c 	andi	r3,r19,1
    3f08:	183eb41e 	bne	r3,zero,39dc <_dtoa_r+0xb34>
    3f0c:	2005883a 	mov	r2,r4
    3f10:	00000206 	br	3f1c <_dtoa_r+0x1074>
    3f14:	a8bfff83 	ldbu	r2,-2(r21)
    3f18:	182b883a 	mov	r21,r3
    3f1c:	10803fcc 	andi	r2,r2,255
    3f20:	1080201c 	xori	r2,r2,128
    3f24:	10bfe004 	addi	r2,r2,-128
    3f28:	10800c18 	cmpnei	r2,r2,48
    3f2c:	a8ffffc4 	addi	r3,r21,-1
    3f30:	103ff826 	beq	r2,zero,3f14 <_dtoa_r+0x106c>
    3f34:	003eb606 	br	3a10 <_dtoa_r+0xb68>
    3f38:	d8c00117 	ldw	r3,4(sp)
    3f3c:	00800c44 	movi	r2,49
    3f40:	18800005 	stb	r2,0(r3)
    3f44:	d8800417 	ldw	r2,16(sp)
    3f48:	10800044 	addi	r2,r2,1
    3f4c:	d8800415 	stw	r2,16(sp)
    3f50:	003eaf06 	br	3a10 <_dtoa_r+0xb68>
    3f54:	d8c00a17 	ldw	r3,40(sp)
    3f58:	18011826 	beq	r3,zero,43bc <_dtoa_r+0x1514>
    3f5c:	d8c00617 	ldw	r3,24(sp)
    3f60:	10810cc4 	addi	r2,r2,1075
    3f64:	b0ad883a 	add	r22,r22,r2
    3f68:	1885883a 	add	r2,r3,r2
    3f6c:	dd000817 	ldw	r20,32(sp)
    3f70:	1825883a 	mov	r18,r3
    3f74:	d8800615 	stw	r2,24(sp)
    3f78:	003e2806 	br	381c <_dtoa_r+0x974>
    3f7c:	a809883a 	mov	r4,r21
    3f80:	000d8340 	call	d834 <__floatsidf>
    3f84:	800d883a 	mov	r6,r16
    3f88:	900f883a 	mov	r7,r18
    3f8c:	1009883a 	mov	r4,r2
    3f90:	180b883a 	mov	r5,r3
    3f94:	000c8080 	call	c808 <__muldf3>
    3f98:	000d883a 	mov	r6,zero
    3f9c:	01d00734 	movhi	r7,16412
    3fa0:	1009883a 	mov	r4,r2
    3fa4:	180b883a 	mov	r5,r3
    3fa8:	000b4300 	call	b430 <__adddf3>
    3fac:	1029883a 	mov	r20,r2
    3fb0:	00bf3034 	movhi	r2,64704
    3fb4:	1885883a 	add	r2,r3,r2
    3fb8:	d8800c15 	stw	r2,48(sp)
    3fbc:	8009883a 	mov	r4,r16
    3fc0:	900b883a 	mov	r5,r18
    3fc4:	000d883a 	mov	r6,zero
    3fc8:	01d00534 	movhi	r7,16404
    3fcc:	000ce880 	call	ce88 <__subdf3>
    3fd0:	dd400c17 	ldw	r21,48(sp)
    3fd4:	a00d883a 	mov	r6,r20
    3fd8:	1009883a 	mov	r4,r2
    3fdc:	a80f883a 	mov	r7,r21
    3fe0:	180b883a 	mov	r5,r3
    3fe4:	1025883a 	mov	r18,r2
    3fe8:	1821883a 	mov	r16,r3
    3fec:	000c6200 	call	c620 <__gedf2>
    3ff0:	00812f16 	blt	zero,r2,44b0 <_dtoa_r+0x1608>
    3ff4:	a9e0003c 	xorhi	r7,r21,32768
    3ff8:	a00d883a 	mov	r6,r20
    3ffc:	9009883a 	mov	r4,r18
    4000:	800b883a 	mov	r5,r16
    4004:	000c7140 	call	c714 <__ledf2>
    4008:	103d7d0e 	bge	r2,zero,3600 <_dtoa_r+0x758>
    400c:	0029883a 	mov	r20,zero
    4010:	0021883a 	mov	r16,zero
    4014:	003d9806 	br	3678 <_dtoa_r+0x7d0>
    4018:	d9800817 	ldw	r6,32(sp)
    401c:	e00b883a 	mov	r5,fp
    4020:	b809883a 	mov	r4,r23
    4024:	0006d000 	call	6d00 <__pow5mult>
    4028:	1039883a 	mov	fp,r2
    402c:	003e1e06 	br	38a8 <_dtoa_r+0xa00>
    4030:	d8800417 	ldw	r2,16(sp)
    4034:	1000ed26 	beq	r2,zero,43ec <_dtoa_r+0x1544>
    4038:	00a9c83a 	sub	r20,zero,r2
    403c:	a08003cc 	andi	r2,r20,15
    4040:	100690fa 	slli	r3,r2,3
    4044:	00800074 	movhi	r2,1
    4048:	10806904 	addi	r2,r2,420
    404c:	10c5883a 	add	r2,r2,r3
    4050:	11800017 	ldw	r6,0(r2)
    4054:	11c00117 	ldw	r7,4(r2)
    4058:	a029d13a 	srai	r20,r20,4
    405c:	9809883a 	mov	r4,r19
    4060:	880b883a 	mov	r5,r17
    4064:	000c8080 	call	c808 <__muldf3>
    4068:	1021883a 	mov	r16,r2
    406c:	1825883a 	mov	r18,r3
    4070:	a0013826 	beq	r20,zero,4554 <_dtoa_r+0x16ac>
    4074:	02000074 	movhi	r8,1
    4078:	05400084 	movi	r21,2
    407c:	42005f04 	addi	r8,r8,380
    4080:	1009883a 	mov	r4,r2
    4084:	9805883a 	mov	r2,r19
    4088:	180b883a 	mov	r5,r3
    408c:	dc000c15 	stw	r16,48(sp)
    4090:	8827883a 	mov	r19,r17
    4094:	0007883a 	mov	r3,zero
    4098:	a823883a 	mov	r17,r21
    409c:	4021883a 	mov	r16,r8
    40a0:	102b883a 	mov	r21,r2
    40a4:	a180004c 	andi	r6,r20,1
    40a8:	30000726 	beq	r6,zero,40c8 <_dtoa_r+0x1220>
    40ac:	81800017 	ldw	r6,0(r16)
    40b0:	81c00117 	ldw	r7,4(r16)
    40b4:	8c400044 	addi	r17,r17,1
    40b8:	000c8080 	call	c808 <__muldf3>
    40bc:	180b883a 	mov	r5,r3
    40c0:	1009883a 	mov	r4,r2
    40c4:	00c00044 	movi	r3,1
    40c8:	a029d07a 	srai	r20,r20,1
    40cc:	84000204 	addi	r16,r16,8
    40d0:	a03ff41e 	bne	r20,zero,40a4 <_dtoa_r+0x11fc>
    40d4:	a805883a 	mov	r2,r21
    40d8:	18c03fcc 	andi	r3,r3,255
    40dc:	882b883a 	mov	r21,r17
    40e0:	dc000c17 	ldw	r16,48(sp)
    40e4:	9823883a 	mov	r17,r19
    40e8:	1027883a 	mov	r19,r2
    40ec:	183c7726 	beq	r3,zero,32cc <_dtoa_r+0x424>
    40f0:	2021883a 	mov	r16,r4
    40f4:	2825883a 	mov	r18,r5
    40f8:	003c7406 	br	32cc <_dtoa_r+0x424>
    40fc:	983eae1e 	bne	r19,zero,3bb8 <_dtoa_r+0xd10>
    4100:	00800434 	movhi	r2,16
    4104:	10bfffc4 	addi	r2,r2,-1
    4108:	8884703a 	and	r2,r17,r2
    410c:	103f4126 	beq	r2,zero,3e14 <_dtoa_r+0xf6c>
    4110:	003ea906 	br	3bb8 <_dtoa_r+0xd10>
    4114:	9807883a 	mov	r3,r19
    4118:	a827883a 	mov	r19,r21
    411c:	182b883a 	mov	r21,r3
    4120:	d8c00417 	ldw	r3,16(sp)
    4124:	18c00044 	addi	r3,r3,1
    4128:	d8c00415 	stw	r3,16(sp)
    412c:	00800d0e 	bge	zero,r2,4164 <_dtoa_r+0x12bc>
    4130:	e00b883a 	mov	r5,fp
    4134:	b809883a 	mov	r4,r23
    4138:	01800044 	movi	r6,1
    413c:	0006e540 	call	6e54 <__lshift>
    4140:	a00b883a 	mov	r5,r20
    4144:	1009883a 	mov	r4,r2
    4148:	1039883a 	mov	fp,r2
    414c:	0006fe80 	call	6fe8 <__mcmp>
    4150:	0080df0e 	bge	zero,r2,44d0 <_dtoa_r+0x1628>
    4154:	98c00e60 	cmpeqi	r3,r19,57
    4158:	1800ce1e 	bne	r3,zero,4494 <_dtoa_r+0x15ec>
    415c:	d8800617 	ldw	r2,24(sp)
    4160:	14c00c44 	addi	r19,r2,49
    4164:	8023883a 	mov	r17,r16
    4168:	b4c00005 	stb	r19,0(r22)
    416c:	9021883a 	mov	r16,r18
    4170:	003e2706 	br	3a10 <_dtoa_r+0xb68>
    4174:	b82b883a 	mov	r21,r23
    4178:	ddc00217 	ldw	r23,8(sp)
    417c:	200d883a 	mov	r6,r4
    4180:	280f883a 	mov	r7,r5
    4184:	000b4300 	call	b430 <__adddf3>
    4188:	180b883a 	mov	r5,r3
    418c:	800d883a 	mov	r6,r16
    4190:	900f883a 	mov	r7,r18
    4194:	1009883a 	mov	r4,r2
    4198:	1823883a 	mov	r17,r3
    419c:	1027883a 	mov	r19,r2
    41a0:	000c6200 	call	c620 <__gedf2>
    41a4:	d8c00417 	ldw	r3,16(sp)
    41a8:	18c00044 	addi	r3,r3,1
    41ac:	d8c00415 	stw	r3,16(sp)
    41b0:	00808c16 	blt	zero,r2,43e4 <_dtoa_r+0x153c>
    41b4:	800d883a 	mov	r6,r16
    41b8:	900f883a 	mov	r7,r18
    41bc:	9809883a 	mov	r4,r19
    41c0:	880b883a 	mov	r5,r17
    41c4:	000c5940 	call	c594 <__eqdf2>
    41c8:	1000021e 	bne	r2,zero,41d4 <_dtoa_r+0x132c>
    41cc:	ad40004c 	andi	r21,r21,1
    41d0:	a800841e 	bne	r21,zero,43e4 <_dtoa_r+0x153c>
    41d4:	a02b883a 	mov	r21,r20
    41d8:	003e1906 	br	3a40 <_dtoa_r+0xb98>
    41dc:	81400117 	ldw	r5,4(r16)
    41e0:	b809883a 	mov	r4,r23
    41e4:	00065500 	call	6550 <_Balloc>
    41e8:	1023883a 	mov	r17,r2
    41ec:	1000f326 	beq	r2,zero,45bc <_dtoa_r+0x1714>
    41f0:	81800417 	ldw	r6,16(r16)
    41f4:	81400304 	addi	r5,r16,12
    41f8:	11000304 	addi	r4,r2,12
    41fc:	31800084 	addi	r6,r6,2
    4200:	300c90ba 	slli	r6,r6,2
    4204:	00004ec0 	call	4ec <memcpy>
    4208:	01800044 	movi	r6,1
    420c:	880b883a 	mov	r5,r17
    4210:	b809883a 	mov	r4,r23
    4214:	0006e540 	call	6e54 <__lshift>
    4218:	1025883a 	mov	r18,r2
    421c:	003e7d06 	br	3c14 <_dtoa_r+0xd6c>
    4220:	e00b883a 	mov	r5,fp
    4224:	b809883a 	mov	r4,r23
    4228:	0006d000 	call	6d00 <__pow5mult>
    422c:	1039883a 	mov	fp,r2
    4230:	003d9d06 	br	38a8 <_dtoa_r+0xa00>
    4234:	d8800617 	ldw	r2,24(sp)
    4238:	d8c00517 	ldw	r3,20(sp)
    423c:	10e5c83a 	sub	r18,r2,r3
    4240:	003d7606 	br	381c <_dtoa_r+0x974>
    4244:	d8c00417 	ldw	r3,16(sp)
    4248:	9805883a 	mov	r2,r19
    424c:	a827883a 	mov	r19,r21
    4250:	18c00044 	addi	r3,r3,1
    4254:	102b883a 	mov	r21,r2
    4258:	d8c00415 	stw	r3,16(sp)
    425c:	98800e58 	cmpnei	r2,r19,57
    4260:	10008c26 	beq	r2,zero,4494 <_dtoa_r+0x15ec>
    4264:	98c00044 	addi	r3,r19,1
    4268:	8023883a 	mov	r17,r16
    426c:	b0c00005 	stb	r3,0(r22)
    4270:	9021883a 	mov	r16,r18
    4274:	003de606 	br	3a10 <_dtoa_r+0xb68>
    4278:	9805883a 	mov	r2,r19
    427c:	a827883a 	mov	r19,r21
    4280:	102b883a 	mov	r21,r2
    4284:	d8800417 	ldw	r2,16(sp)
    4288:	8023883a 	mov	r17,r16
    428c:	9021883a 	mov	r16,r18
    4290:	10800044 	addi	r2,r2,1
    4294:	d8800415 	stw	r2,16(sp)
    4298:	003dc606 	br	39b4 <_dtoa_r+0xb0c>
    429c:	d9400c17 	ldw	r5,48(sp)
    42a0:	a009883a 	mov	r4,r20
    42a4:	000c8080 	call	c808 <__muldf3>
    42a8:	d9800d17 	ldw	r6,52(sp)
    42ac:	d9400117 	ldw	r5,4(sp)
    42b0:	d9001017 	ldw	r4,64(sp)
    42b4:	d8800c15 	stw	r2,48(sp)
    42b8:	d8c00d15 	stw	r3,52(sp)
    42bc:	29000005 	stb	r4,0(r5)
    42c0:	31000058 	cmpnei	r4,r6,1
    42c4:	29a9883a 	add	r20,r5,r6
    42c8:	2000a026 	beq	r4,zero,454c <_dtoa_r+0x16a4>
    42cc:	dc400e15 	stw	r17,56(sp)
    42d0:	8009883a 	mov	r4,r16
    42d4:	900b883a 	mov	r5,r18
    42d8:	a823883a 	mov	r17,r21
    42dc:	000d883a 	mov	r6,zero
    42e0:	01d00934 	movhi	r7,16420
    42e4:	000c8080 	call	c808 <__muldf3>
    42e8:	180b883a 	mov	r5,r3
    42ec:	1009883a 	mov	r4,r2
    42f0:	1825883a 	mov	r18,r3
    42f4:	102b883a 	mov	r21,r2
    42f8:	000d7a80 	call	d7a8 <__fixdfsi>
    42fc:	1009883a 	mov	r4,r2
    4300:	1021883a 	mov	r16,r2
    4304:	000d8340 	call	d834 <__floatsidf>
    4308:	a809883a 	mov	r4,r21
    430c:	900b883a 	mov	r5,r18
    4310:	100d883a 	mov	r6,r2
    4314:	180f883a 	mov	r7,r3
    4318:	8c400044 	addi	r17,r17,1
    431c:	84000c04 	addi	r16,r16,48
    4320:	000ce880 	call	ce88 <__subdf3>
    4324:	8c3fffc5 	stb	r16,-1(r17)
    4328:	1009883a 	mov	r4,r2
    432c:	180b883a 	mov	r5,r3
    4330:	a47fea1e 	bne	r20,r17,42dc <_dtoa_r+0x1434>
    4334:	dc400e17 	ldw	r17,56(sp)
    4338:	1021883a 	mov	r16,r2
    433c:	1825883a 	mov	r18,r3
    4340:	d9000c17 	ldw	r4,48(sp)
    4344:	d9400d17 	ldw	r5,52(sp)
    4348:	000d883a 	mov	r6,zero
    434c:	01cff834 	movhi	r7,16352
    4350:	000b4300 	call	b430 <__adddf3>
    4354:	800d883a 	mov	r6,r16
    4358:	900f883a 	mov	r7,r18
    435c:	1009883a 	mov	r4,r2
    4360:	180b883a 	mov	r5,r3
    4364:	000c7140 	call	c714 <__ledf2>
    4368:	10005416 	blt	r2,zero,44bc <_dtoa_r+0x1614>
    436c:	d9800c17 	ldw	r6,48(sp)
    4370:	d9c00d17 	ldw	r7,52(sp)
    4374:	0009883a 	mov	r4,zero
    4378:	014ff834 	movhi	r5,16352
    437c:	000ce880 	call	ce88 <__subdf3>
    4380:	800d883a 	mov	r6,r16
    4384:	900f883a 	mov	r7,r18
    4388:	1009883a 	mov	r4,r2
    438c:	180b883a 	mov	r5,r3
    4390:	000c6200 	call	c620 <__gedf2>
    4394:	00bc9a0e 	bge	zero,r2,3600 <_dtoa_r+0x758>
    4398:	a0bfffc7 	ldb	r2,-1(r20)
    439c:	a02b883a 	mov	r21,r20
    43a0:	a53fffc4 	addi	r20,r20,-1
    43a4:	10800c20 	cmpeqi	r2,r2,48
    43a8:	103ffb1e 	bne	r2,zero,4398 <_dtoa_r+0x14f0>
    43ac:	d8801117 	ldw	r2,68(sp)
    43b0:	10800044 	addi	r2,r2,1
    43b4:	d8800415 	stw	r2,16(sp)
    43b8:	003da106 	br	3a40 <_dtoa_r+0xb98>
    43bc:	d8c01217 	ldw	r3,72(sp)
    43c0:	d9000617 	ldw	r4,24(sp)
    43c4:	00800d84 	movi	r2,54
    43c8:	10c5c83a 	sub	r2,r2,r3
    43cc:	b0ad883a 	add	r22,r22,r2
    43d0:	2085883a 	add	r2,r4,r2
    43d4:	dd000817 	ldw	r20,32(sp)
    43d8:	2025883a 	mov	r18,r4
    43dc:	d8800615 	stw	r2,24(sp)
    43e0:	003d0e06 	br	381c <_dtoa_r+0x974>
    43e4:	d9000117 	ldw	r4,4(sp)
    43e8:	003c4b06 	br	3518 <_dtoa_r+0x670>
    43ec:	9821883a 	mov	r16,r19
    43f0:	8825883a 	mov	r18,r17
    43f4:	05400084 	movi	r21,2
    43f8:	003bb406 	br	32cc <_dtoa_r+0x424>
    43fc:	d8800517 	ldw	r2,20(sp)
    4400:	103ede26 	beq	r2,zero,3f7c <_dtoa_r+0x10d4>
    4404:	d8800b17 	ldw	r2,44(sp)
    4408:	00bc7d0e 	bge	zero,r2,3600 <_dtoa_r+0x758>
    440c:	900b883a 	mov	r5,r18
    4410:	8009883a 	mov	r4,r16
    4414:	000d883a 	mov	r6,zero
    4418:	01d00934 	movhi	r7,16420
    441c:	000c8080 	call	c808 <__muldf3>
    4420:	a9000044 	addi	r4,r21,1
    4424:	1021883a 	mov	r16,r2
    4428:	1825883a 	mov	r18,r3
    442c:	000d8340 	call	d834 <__floatsidf>
    4430:	800d883a 	mov	r6,r16
    4434:	900f883a 	mov	r7,r18
    4438:	1009883a 	mov	r4,r2
    443c:	180b883a 	mov	r5,r3
    4440:	000c8080 	call	c808 <__muldf3>
    4444:	1009883a 	mov	r4,r2
    4448:	000d883a 	mov	r6,zero
    444c:	01d00734 	movhi	r7,16412
    4450:	180b883a 	mov	r5,r3
    4454:	000b4300 	call	b430 <__adddf3>
    4458:	d9000417 	ldw	r4,16(sp)
    445c:	1029883a 	mov	r20,r2
    4460:	00bf3034 	movhi	r2,64704
    4464:	1887883a 	add	r3,r3,r2
    4468:	d8800b17 	ldw	r2,44(sp)
    446c:	213fffc4 	addi	r4,r4,-1
    4470:	d9001115 	stw	r4,68(sp)
    4474:	d8c00c15 	stw	r3,48(sp)
    4478:	d8800d15 	stw	r2,52(sp)
    447c:	003bb106 	br	3344 <_dtoa_r+0x49c>
    4480:	d8800417 	ldw	r2,16(sp)
    4484:	00c00c44 	movi	r3,49
    4488:	10800044 	addi	r2,r2,1
    448c:	d8800415 	stw	r2,16(sp)
    4490:	003c2a06 	br	353c <_dtoa_r+0x694>
    4494:	00800e44 	movi	r2,57
    4498:	8023883a 	mov	r17,r16
    449c:	d9400117 	ldw	r5,4(sp)
    44a0:	b0800005 	stb	r2,0(r22)
    44a4:	9021883a 	mov	r16,r18
    44a8:	01000e44 	movi	r4,57
    44ac:	003d5006 	br	39f0 <_dtoa_r+0xb48>
    44b0:	0029883a 	mov	r20,zero
    44b4:	0021883a 	mov	r16,zero
    44b8:	003e7106 	br	3e80 <_dtoa_r+0xfd8>
    44bc:	d8801117 	ldw	r2,68(sp)
    44c0:	d9000117 	ldw	r4,4(sp)
    44c4:	10800044 	addi	r2,r2,1
    44c8:	d8800415 	stw	r2,16(sp)
    44cc:	003c1206 	br	3518 <_dtoa_r+0x670>
    44d0:	103f241e 	bne	r2,zero,4164 <_dtoa_r+0x12bc>
    44d4:	9880004c 	andi	r2,r19,1
    44d8:	103f1e1e 	bne	r2,zero,4154 <_dtoa_r+0x12ac>
    44dc:	003f2106 	br	4164 <_dtoa_r+0x12bc>
    44e0:	d8801117 	ldw	r2,68(sp)
    44e4:	ddc00d17 	ldw	r23,52(sp)
    44e8:	10800044 	addi	r2,r2,1
    44ec:	d8800415 	stw	r2,16(sp)
    44f0:	003d5306 	br	3a40 <_dtoa_r+0xb98>
    44f4:	d8c00417 	ldw	r3,16(sp)
    44f8:	a8800e60 	cmpeqi	r2,r21,57
    44fc:	a827883a 	mov	r19,r21
    4500:	18c00044 	addi	r3,r3,1
    4504:	d8c00415 	stw	r3,16(sp)
    4508:	b5400044 	addi	r21,r22,1
    450c:	103fe11e 	bne	r2,zero,4494 <_dtoa_r+0x15ec>
    4510:	047f1216 	blt	zero,r17,415c <_dtoa_r+0x12b4>
    4514:	003f1306 	br	4164 <_dtoa_r+0x12bc>
    4518:	d8800217 	ldw	r2,8(sp)
    451c:	108000c8 	cmpgei	r2,r2,3
    4520:	103e481e 	bne	r2,zero,3e44 <_dtoa_r+0xf9c>
    4524:	dd400415 	stw	r21,16(sp)
    4528:	003e0d06 	br	3d60 <_dtoa_r+0xeb8>
    452c:	d8800217 	ldw	r2,8(sp)
    4530:	108000c8 	cmpgei	r2,r2,3
    4534:	103e431e 	bne	r2,zero,3e44 <_dtoa_r+0xf9c>
    4538:	d8800b17 	ldw	r2,44(sp)
    453c:	dd400415 	stw	r21,16(sp)
    4540:	d8800515 	stw	r2,20(sp)
    4544:	04bdb10e 	bge	zero,r18,3c0c <_dtoa_r+0xd64>
    4548:	003e5c06 	br	3ebc <_dtoa_r+0x1014>
    454c:	a829883a 	mov	r20,r21
    4550:	003f7b06 	br	4340 <_dtoa_r+0x1498>
    4554:	05400084 	movi	r21,2
    4558:	003b5c06 	br	32cc <_dtoa_r+0x424>
    455c:	01c00074 	movhi	r7,1
    4560:	01000074 	movhi	r4,1
    4564:	39c02d04 	addi	r7,r7,180
    4568:	000d883a 	mov	r6,zero
    456c:	01406a84 	movi	r5,426
    4570:	21003204 	addi	r4,r4,200
    4574:	00095080 	call	9508 <__assert_func>
    4578:	000b883a 	mov	r5,zero
    457c:	003b1506 	br	31d4 <_dtoa_r+0x32c>
    4580:	b8001115 	stw	zero,68(r23)
    4584:	000b883a 	mov	r5,zero
    4588:	b809883a 	mov	r4,r23
    458c:	00065500 	call	6550 <_Balloc>
    4590:	d8800115 	stw	r2,4(sp)
    4594:	103ff126 	beq	r2,zero,455c <_dtoa_r+0x16b4>
    4598:	d8800117 	ldw	r2,4(sp)
    459c:	d8001e15 	stw	zero,120(sp)
    45a0:	b8801015 	stw	r2,64(r23)
    45a4:	00bfffc4 	movi	r2,-1
    45a8:	d8800515 	stw	r2,20(sp)
    45ac:	d8800b15 	stw	r2,44(sp)
    45b0:	00800044 	movi	r2,1
    45b4:	d8800715 	stw	r2,28(sp)
    45b8:	003c1106 	br	3600 <_dtoa_r+0x758>
    45bc:	01c00074 	movhi	r7,1
    45c0:	01000074 	movhi	r4,1
    45c4:	39c02d04 	addi	r7,r7,180
    45c8:	000d883a 	mov	r6,zero
    45cc:	0140ba84 	movi	r5,746
    45d0:	21003204 	addi	r4,r4,200
    45d4:	00095080 	call	9508 <__assert_func>
    45d8:	00800074 	movhi	r2,1
    45dc:	10802a04 	addi	r2,r2,168
    45e0:	d8800115 	stw	r2,4(sp)
    45e4:	003a6506 	br	2f7c <_dtoa_r+0xd4>
    45e8:	18c00120 	cmpeqi	r3,r3,4
    45ec:	183cc91e 	bne	r3,zero,3914 <_dtoa_r+0xa6c>
    45f0:	00c00f04 	movi	r3,60
    45f4:	1885c83a 	sub	r2,r3,r2
    45f8:	003cc106 	br	3900 <_dtoa_r+0xa58>

000045fc <__sflush_r>:
    45fc:	f811883a 	mov	r8,ra
    4600:	000e1ac0 	call	e1ac <_mcount>
    4604:	403f883a 	mov	ra,r8
    4608:	defffb04 	addi	sp,sp,-20
    460c:	dfc00415 	stw	ra,16(sp)
    4610:	dcc00315 	stw	r19,12(sp)
    4614:	dc800215 	stw	r18,8(sp)
    4618:	dc400115 	stw	r17,4(sp)
    461c:	dc000015 	stw	r16,0(sp)
    4620:	2880030b 	ldhu	r2,12(r5)
    4624:	2821883a 	mov	r16,r5
    4628:	2027883a 	mov	r19,r4
    462c:	10c0020c 	andi	r3,r2,8
    4630:	18003f1e 	bne	r3,zero,4730 <__sflush_r+0x134>
    4634:	28c00117 	ldw	r3,4(r5)
    4638:	10820014 	ori	r2,r2,2048
    463c:	2880030d 	sth	r2,12(r5)
    4640:	00c0550e 	bge	zero,r3,4798 <__sflush_r+0x19c>
    4644:	82000a17 	ldw	r8,40(r16)
    4648:	40003126 	beq	r8,zero,4710 <__sflush_r+0x114>
    464c:	9c400017 	ldw	r17,0(r19)
    4650:	1104000c 	andi	r4,r2,4096
    4654:	98000015 	stw	zero,0(r19)
    4658:	81400717 	ldw	r5,28(r16)
    465c:	1007883a 	mov	r3,r2
    4660:	2000521e 	bne	r4,zero,47ac <__sflush_r+0x1b0>
    4664:	01c00044 	movi	r7,1
    4668:	000d883a 	mov	r6,zero
    466c:	9809883a 	mov	r4,r19
    4670:	403ee83a 	callr	r8
    4674:	10ffffd8 	cmpnei	r3,r2,-1
    4678:	18005826 	beq	r3,zero,47dc <__sflush_r+0x1e0>
    467c:	80c0030b 	ldhu	r3,12(r16)
    4680:	82000a17 	ldw	r8,40(r16)
    4684:	81400717 	ldw	r5,28(r16)
    4688:	18c0010c 	andi	r3,r3,4
    468c:	18000626 	beq	r3,zero,46a8 <__sflush_r+0xac>
    4690:	81000117 	ldw	r4,4(r16)
    4694:	80c00c17 	ldw	r3,48(r16)
    4698:	1105c83a 	sub	r2,r2,r4
    469c:	18000226 	beq	r3,zero,46a8 <__sflush_r+0xac>
    46a0:	80c00f17 	ldw	r3,60(r16)
    46a4:	10c5c83a 	sub	r2,r2,r3
    46a8:	100d883a 	mov	r6,r2
    46ac:	000f883a 	mov	r7,zero
    46b0:	9809883a 	mov	r4,r19
    46b4:	403ee83a 	callr	r8
    46b8:	10ffffd8 	cmpnei	r3,r2,-1
    46bc:	18003d1e 	bne	r3,zero,47b4 <__sflush_r+0x1b8>
    46c0:	99000017 	ldw	r4,0(r19)
    46c4:	80c0030b 	ldhu	r3,12(r16)
    46c8:	20004e26 	beq	r4,zero,4804 <__sflush_r+0x208>
    46cc:	21400760 	cmpeqi	r5,r4,29
    46d0:	2800021e 	bne	r5,zero,46dc <__sflush_r+0xe0>
    46d4:	210005a0 	cmpeqi	r4,r4,22
    46d8:	20002c26 	beq	r4,zero,478c <__sflush_r+0x190>
    46dc:	80800417 	ldw	r2,16(r16)
    46e0:	18fdffcc 	andi	r3,r3,63487
    46e4:	80c0030d 	sth	r3,12(r16)
    46e8:	80000115 	stw	zero,4(r16)
    46ec:	80800015 	stw	r2,0(r16)
    46f0:	81400c17 	ldw	r5,48(r16)
    46f4:	9c400015 	stw	r17,0(r19)
    46f8:	28000526 	beq	r5,zero,4710 <__sflush_r+0x114>
    46fc:	80801004 	addi	r2,r16,64
    4700:	28800226 	beq	r5,r2,470c <__sflush_r+0x110>
    4704:	9809883a 	mov	r4,r19
    4708:	0004e980 	call	4e98 <_free_r>
    470c:	80000c15 	stw	zero,48(r16)
    4710:	0005883a 	mov	r2,zero
    4714:	dfc00417 	ldw	ra,16(sp)
    4718:	dcc00317 	ldw	r19,12(sp)
    471c:	dc800217 	ldw	r18,8(sp)
    4720:	dc400117 	ldw	r17,4(sp)
    4724:	dc000017 	ldw	r16,0(sp)
    4728:	dec00504 	addi	sp,sp,20
    472c:	f800283a 	ret
    4730:	2c800417 	ldw	r18,16(r5)
    4734:	903ff626 	beq	r18,zero,4710 <__sflush_r+0x114>
    4738:	2c400017 	ldw	r17,0(r5)
    473c:	108000cc 	andi	r2,r2,3
    4740:	2c800015 	stw	r18,0(r5)
    4744:	8ca3c83a 	sub	r17,r17,r18
    4748:	1000161e 	bne	r2,zero,47a4 <__sflush_r+0x1a8>
    474c:	28800517 	ldw	r2,20(r5)
    4750:	80800215 	stw	r2,8(r16)
    4754:	04400316 	blt	zero,r17,4764 <__sflush_r+0x168>
    4758:	003fed06 	br	4710 <__sflush_r+0x114>
    475c:	90a5883a 	add	r18,r18,r2
    4760:	047feb0e 	bge	zero,r17,4710 <__sflush_r+0x114>
    4764:	80800917 	ldw	r2,36(r16)
    4768:	81400717 	ldw	r5,28(r16)
    476c:	880f883a 	mov	r7,r17
    4770:	900d883a 	mov	r6,r18
    4774:	9809883a 	mov	r4,r19
    4778:	103ee83a 	callr	r2
    477c:	88a3c83a 	sub	r17,r17,r2
    4780:	00bff616 	blt	zero,r2,475c <__sflush_r+0x160>
    4784:	80c0030b 	ldhu	r3,12(r16)
    4788:	00bfffc4 	movi	r2,-1
    478c:	18c01014 	ori	r3,r3,64
    4790:	80c0030d 	sth	r3,12(r16)
    4794:	003fdf06 	br	4714 <__sflush_r+0x118>
    4798:	28c00f17 	ldw	r3,60(r5)
    479c:	00ffa916 	blt	zero,r3,4644 <__sflush_r+0x48>
    47a0:	003fdb06 	br	4710 <__sflush_r+0x114>
    47a4:	0005883a 	mov	r2,zero
    47a8:	003fe906 	br	4750 <__sflush_r+0x154>
    47ac:	80801417 	ldw	r2,80(r16)
    47b0:	003fb506 	br	4688 <__sflush_r+0x8c>
    47b4:	80c0030b 	ldhu	r3,12(r16)
    47b8:	81000417 	ldw	r4,16(r16)
    47bc:	80000115 	stw	zero,4(r16)
    47c0:	197dffcc 	andi	r5,r3,63487
    47c4:	8140030d 	sth	r5,12(r16)
    47c8:	81000015 	stw	r4,0(r16)
    47cc:	18c4000c 	andi	r3,r3,4096
    47d0:	183fc726 	beq	r3,zero,46f0 <__sflush_r+0xf4>
    47d4:	80801415 	stw	r2,80(r16)
    47d8:	003fc506 	br	46f0 <__sflush_r+0xf4>
    47dc:	98c00017 	ldw	r3,0(r19)
    47e0:	183fa626 	beq	r3,zero,467c <__sflush_r+0x80>
    47e4:	19000760 	cmpeqi	r4,r3,29
    47e8:	20000e1e 	bne	r4,zero,4824 <__sflush_r+0x228>
    47ec:	18c00598 	cmpnei	r3,r3,22
    47f0:	18000c26 	beq	r3,zero,4824 <__sflush_r+0x228>
    47f4:	80c0030b 	ldhu	r3,12(r16)
    47f8:	18c01014 	ori	r3,r3,64
    47fc:	80c0030d 	sth	r3,12(r16)
    4800:	003fc406 	br	4714 <__sflush_r+0x118>
    4804:	81000417 	ldw	r4,16(r16)
    4808:	197dffcc 	andi	r5,r3,63487
    480c:	8140030d 	sth	r5,12(r16)
    4810:	80000115 	stw	zero,4(r16)
    4814:	81000015 	stw	r4,0(r16)
    4818:	18c4000c 	andi	r3,r3,4096
    481c:	183fb426 	beq	r3,zero,46f0 <__sflush_r+0xf4>
    4820:	003fec06 	br	47d4 <__sflush_r+0x1d8>
    4824:	9c400015 	stw	r17,0(r19)
    4828:	0005883a 	mov	r2,zero
    482c:	003fb906 	br	4714 <__sflush_r+0x118>

00004830 <_fflush_r>:
    4830:	f811883a 	mov	r8,ra
    4834:	000e1ac0 	call	e1ac <_mcount>
    4838:	403f883a 	mov	ra,r8
    483c:	defffd04 	addi	sp,sp,-12
    4840:	dfc00215 	stw	ra,8(sp)
    4844:	dc000115 	stw	r16,4(sp)
    4848:	2021883a 	mov	r16,r4
    484c:	20000226 	beq	r4,zero,4858 <_fflush_r+0x28>
    4850:	20800e17 	ldw	r2,56(r4)
    4854:	10000726 	beq	r2,zero,4874 <_fflush_r+0x44>
    4858:	2880030f 	ldh	r2,12(r5)
    485c:	10000a1e 	bne	r2,zero,4888 <_fflush_r+0x58>
    4860:	0005883a 	mov	r2,zero
    4864:	dfc00217 	ldw	ra,8(sp)
    4868:	dc000117 	ldw	r16,4(sp)
    486c:	dec00304 	addi	sp,sp,12
    4870:	f800283a 	ret
    4874:	d9400015 	stw	r5,0(sp)
    4878:	0004cd40 	call	4cd4 <__sinit>
    487c:	d9400017 	ldw	r5,0(sp)
    4880:	2880030f 	ldh	r2,12(r5)
    4884:	103ff626 	beq	r2,zero,4860 <_fflush_r+0x30>
    4888:	8009883a 	mov	r4,r16
    488c:	dfc00217 	ldw	ra,8(sp)
    4890:	dc000117 	ldw	r16,4(sp)
    4894:	dec00304 	addi	sp,sp,12
    4898:	00045fc1 	jmpi	45fc <__sflush_r>

0000489c <fflush>:
    489c:	f811883a 	mov	r8,ra
    48a0:	000e1ac0 	call	e1ac <_mcount>
    48a4:	403f883a 	mov	ra,r8
    48a8:	20001726 	beq	r4,zero,4908 <fflush+0x6c>
    48ac:	00800074 	movhi	r2,1
    48b0:	200b883a 	mov	r5,r4
    48b4:	1108d117 	ldw	r4,9028(r2)
    48b8:	20000226 	beq	r4,zero,48c4 <fflush+0x28>
    48bc:	20800e17 	ldw	r2,56(r4)
    48c0:	10000526 	beq	r2,zero,48d8 <fflush+0x3c>
    48c4:	2880030f 	ldh	r2,12(r5)
    48c8:	1000021e 	bne	r2,zero,48d4 <fflush+0x38>
    48cc:	0005883a 	mov	r2,zero
    48d0:	f800283a 	ret
    48d4:	00045fc1 	jmpi	45fc <__sflush_r>
    48d8:	defffd04 	addi	sp,sp,-12
    48dc:	dfc00215 	stw	ra,8(sp)
    48e0:	d9400115 	stw	r5,4(sp)
    48e4:	d9000015 	stw	r4,0(sp)
    48e8:	0004cd40 	call	4cd4 <__sinit>
    48ec:	d9400117 	ldw	r5,4(sp)
    48f0:	d9000017 	ldw	r4,0(sp)
    48f4:	2880030f 	ldh	r2,12(r5)
    48f8:	10000826 	beq	r2,zero,491c <fflush+0x80>
    48fc:	dfc00217 	ldw	ra,8(sp)
    4900:	dec00304 	addi	sp,sp,12
    4904:	00045fc1 	jmpi	45fc <__sflush_r>
    4908:	00800074 	movhi	r2,1
    490c:	1108d017 	ldw	r4,9024(r2)
    4910:	01400034 	movhi	r5,0
    4914:	29520c04 	addi	r5,r5,18480
    4918:	00057081 	jmpi	5708 <_fwalk_reent>
    491c:	0005883a 	mov	r2,zero
    4920:	dfc00217 	ldw	ra,8(sp)
    4924:	dec00304 	addi	sp,sp,12
    4928:	f800283a 	ret

0000492c <__fp_lock>:
    492c:	f811883a 	mov	r8,ra
    4930:	000e1ac0 	call	e1ac <_mcount>
    4934:	403f883a 	mov	ra,r8
    4938:	0005883a 	mov	r2,zero
    493c:	f800283a 	ret

00004940 <_cleanup_r>:
    4940:	f811883a 	mov	r8,ra
    4944:	000e1ac0 	call	e1ac <_mcount>
    4948:	403f883a 	mov	ra,r8
    494c:	01400074 	movhi	r5,1
    4950:	2965c904 	addi	r5,r5,-26844
    4954:	00057081 	jmpi	5708 <_fwalk_reent>

00004958 <__fp_unlock>:
    4958:	f811883a 	mov	r8,ra
    495c:	000e1ac0 	call	e1ac <_mcount>
    4960:	403f883a 	mov	ra,r8
    4964:	0005883a 	mov	r2,zero
    4968:	f800283a 	ret

0000496c <__sinit.part.0>:
    496c:	f811883a 	mov	r8,ra
    4970:	000e1ac0 	call	e1ac <_mcount>
    4974:	403f883a 	mov	ra,r8
    4978:	00c00034 	movhi	r3,0
    497c:	20800117 	ldw	r2,4(r4)
    4980:	18d25004 	addi	r3,r3,18752
    4984:	20c00f15 	stw	r3,60(r4)
    4988:	2140bb04 	addi	r5,r4,748
    498c:	00c000c4 	movi	r3,3
    4990:	20c0b915 	stw	r3,740(r4)
    4994:	2140ba15 	stw	r5,744(r4)
    4998:	2000b815 	stw	zero,736(r4)
    499c:	10001705 	stb	zero,92(r2)
    49a0:	10001745 	stb	zero,93(r2)
    49a4:	10001785 	stb	zero,94(r2)
    49a8:	100017c5 	stb	zero,95(r2)
    49ac:	10001805 	stb	zero,96(r2)
    49b0:	10001845 	stb	zero,97(r2)
    49b4:	10001885 	stb	zero,98(r2)
    49b8:	100018c5 	stb	zero,99(r2)
    49bc:	00c00104 	movi	r3,4
    49c0:	10c00315 	stw	r3,12(r2)
    49c4:	02000034 	movhi	r8,0
    49c8:	20c00217 	ldw	r3,8(r4)
    49cc:	01c00034 	movhi	r7,0
    49d0:	01800034 	movhi	r6,0
    49d4:	01400034 	movhi	r5,0
    49d8:	421f5804 	addi	r8,r8,32096
    49dc:	39df7504 	addi	r7,r7,32212
    49e0:	319f9804 	addi	r6,r6,32352
    49e4:	295fb204 	addi	r5,r5,32456
    49e8:	02400074 	movhi	r9,1
    49ec:	12000815 	stw	r8,32(r2)
    49f0:	11c00915 	stw	r7,36(r2)
    49f4:	11800a15 	stw	r6,40(r2)
    49f8:	11400b15 	stw	r5,44(r2)
    49fc:	10001915 	stw	zero,100(r2)
    4a00:	10000015 	stw	zero,0(r2)
    4a04:	10000115 	stw	zero,4(r2)
    4a08:	10000215 	stw	zero,8(r2)
    4a0c:	10000415 	stw	zero,16(r2)
    4a10:	10000515 	stw	zero,20(r2)
    4a14:	10000615 	stw	zero,24(r2)
    4a18:	10800715 	stw	r2,28(r2)
    4a1c:	4a400284 	addi	r9,r9,10
    4a20:	1a400315 	stw	r9,12(r3)
    4a24:	18001915 	stw	zero,100(r3)
    4a28:	18000015 	stw	zero,0(r3)
    4a2c:	18000115 	stw	zero,4(r3)
    4a30:	18000215 	stw	zero,8(r3)
    4a34:	18000415 	stw	zero,16(r3)
    4a38:	18001705 	stb	zero,92(r3)
    4a3c:	18001745 	stb	zero,93(r3)
    4a40:	18001785 	stb	zero,94(r3)
    4a44:	180017c5 	stb	zero,95(r3)
    4a48:	18001805 	stb	zero,96(r3)
    4a4c:	18001845 	stb	zero,97(r3)
    4a50:	18001885 	stb	zero,98(r3)
    4a54:	180018c5 	stb	zero,99(r3)
    4a58:	20800317 	ldw	r2,12(r4)
    4a5c:	024000b4 	movhi	r9,2
    4a60:	18000515 	stw	zero,20(r3)
    4a64:	18000615 	stw	zero,24(r3)
    4a68:	18c00715 	stw	r3,28(r3)
    4a6c:	1a000815 	stw	r8,32(r3)
    4a70:	19c00915 	stw	r7,36(r3)
    4a74:	19800a15 	stw	r6,40(r3)
    4a78:	19400b15 	stw	r5,44(r3)
    4a7c:	4a400484 	addi	r9,r9,18
    4a80:	12400315 	stw	r9,12(r2)
    4a84:	10001915 	stw	zero,100(r2)
    4a88:	10000015 	stw	zero,0(r2)
    4a8c:	10000115 	stw	zero,4(r2)
    4a90:	10000215 	stw	zero,8(r2)
    4a94:	10000415 	stw	zero,16(r2)
    4a98:	10000515 	stw	zero,20(r2)
    4a9c:	10000615 	stw	zero,24(r2)
    4aa0:	10001705 	stb	zero,92(r2)
    4aa4:	10001745 	stb	zero,93(r2)
    4aa8:	10001785 	stb	zero,94(r2)
    4aac:	100017c5 	stb	zero,95(r2)
    4ab0:	10001805 	stb	zero,96(r2)
    4ab4:	10001845 	stb	zero,97(r2)
    4ab8:	10001885 	stb	zero,98(r2)
    4abc:	100018c5 	stb	zero,99(r2)
    4ac0:	10800715 	stw	r2,28(r2)
    4ac4:	12000815 	stw	r8,32(r2)
    4ac8:	11c00915 	stw	r7,36(r2)
    4acc:	11800a15 	stw	r6,40(r2)
    4ad0:	11400b15 	stw	r5,44(r2)
    4ad4:	00800044 	movi	r2,1
    4ad8:	20800e15 	stw	r2,56(r4)
    4adc:	f800283a 	ret

00004ae0 <__sfmoreglue>:
    4ae0:	f811883a 	mov	r8,ra
    4ae4:	000e1ac0 	call	e1ac <_mcount>
    4ae8:	403f883a 	mov	ra,r8
    4aec:	defffc04 	addi	sp,sp,-16
    4af0:	dfc00315 	stw	ra,12(sp)
    4af4:	dc800215 	stw	r18,8(sp)
    4af8:	dc400115 	stw	r17,4(sp)
    4afc:	dc000015 	stw	r16,0(sp)
    4b00:	2c7fffc4 	addi	r17,r5,-1
    4b04:	8c401a24 	muli	r17,r17,104
    4b08:	2825883a 	mov	r18,r5
    4b0c:	89401d04 	addi	r5,r17,116
    4b10:	0005a600 	call	5a60 <_malloc_r>
    4b14:	1021883a 	mov	r16,r2
    4b18:	10000726 	beq	r2,zero,4b38 <__sfmoreglue+0x58>
    4b1c:	11000304 	addi	r4,r2,12
    4b20:	10000015 	stw	zero,0(r2)
    4b24:	14800115 	stw	r18,4(r2)
    4b28:	11000215 	stw	r4,8(r2)
    4b2c:	89801a04 	addi	r6,r17,104
    4b30:	000b883a 	mov	r5,zero
    4b34:	00064540 	call	6454 <memset>
    4b38:	8005883a 	mov	r2,r16
    4b3c:	dfc00317 	ldw	ra,12(sp)
    4b40:	dc800217 	ldw	r18,8(sp)
    4b44:	dc400117 	ldw	r17,4(sp)
    4b48:	dc000017 	ldw	r16,0(sp)
    4b4c:	dec00404 	addi	sp,sp,16
    4b50:	f800283a 	ret

00004b54 <__sfp>:
    4b54:	f811883a 	mov	r8,ra
    4b58:	000e1ac0 	call	e1ac <_mcount>
    4b5c:	403f883a 	mov	ra,r8
    4b60:	defffb04 	addi	sp,sp,-20
    4b64:	dfc00415 	stw	ra,16(sp)
    4b68:	dcc00315 	stw	r19,12(sp)
    4b6c:	dc800215 	stw	r18,8(sp)
    4b70:	dc400115 	stw	r17,4(sp)
    4b74:	dc000015 	stw	r16,0(sp)
    4b78:	00800074 	movhi	r2,1
    4b7c:	1408d017 	ldw	r16,9024(r2)
    4b80:	2023883a 	mov	r17,r4
    4b84:	80800e17 	ldw	r2,56(r16)
    4b88:	10003126 	beq	r2,zero,4c50 <__sfp+0xfc>
    4b8c:	8100ba17 	ldw	r4,744(r16)
    4b90:	8140b917 	ldw	r5,740(r16)
    4b94:	04c00104 	movi	r19,4
    4b98:	8400b804 	addi	r16,r16,736
    4b9c:	297fffc4 	addi	r5,r5,-1
    4ba0:	2800050e 	bge	r5,zero,4bb8 <__sfp+0x64>
    4ba4:	00002406 	br	4c38 <__sfp+0xe4>
    4ba8:	297fffc4 	addi	r5,r5,-1
    4bac:	28bfffd8 	cmpnei	r2,r5,-1
    4bb0:	21001a04 	addi	r4,r4,104
    4bb4:	10002026 	beq	r2,zero,4c38 <__sfp+0xe4>
    4bb8:	2080030f 	ldh	r2,12(r4)
    4bbc:	103ffa1e 	bne	r2,zero,4ba8 <__sfp+0x54>
    4bc0:	00bffff4 	movhi	r2,65535
    4bc4:	10800044 	addi	r2,r2,1
    4bc8:	20001915 	stw	zero,100(r4)
    4bcc:	20000015 	stw	zero,0(r4)
    4bd0:	20000115 	stw	zero,4(r4)
    4bd4:	20000215 	stw	zero,8(r4)
    4bd8:	20800315 	stw	r2,12(r4)
    4bdc:	20000415 	stw	zero,16(r4)
    4be0:	20000515 	stw	zero,20(r4)
    4be4:	20000615 	stw	zero,24(r4)
    4be8:	20001705 	stb	zero,92(r4)
    4bec:	20001745 	stb	zero,93(r4)
    4bf0:	20001785 	stb	zero,94(r4)
    4bf4:	200017c5 	stb	zero,95(r4)
    4bf8:	20001805 	stb	zero,96(r4)
    4bfc:	20001845 	stb	zero,97(r4)
    4c00:	20001885 	stb	zero,98(r4)
    4c04:	200018c5 	stb	zero,99(r4)
    4c08:	20000c15 	stw	zero,48(r4)
    4c0c:	20000d15 	stw	zero,52(r4)
    4c10:	20001115 	stw	zero,68(r4)
    4c14:	20001215 	stw	zero,72(r4)
    4c18:	2005883a 	mov	r2,r4
    4c1c:	dfc00417 	ldw	ra,16(sp)
    4c20:	dcc00317 	ldw	r19,12(sp)
    4c24:	dc800217 	ldw	r18,8(sp)
    4c28:	dc400117 	ldw	r17,4(sp)
    4c2c:	dc000017 	ldw	r16,0(sp)
    4c30:	dec00504 	addi	sp,sp,20
    4c34:	f800283a 	ret
    4c38:	80800017 	ldw	r2,0(r16)
    4c3c:	10000726 	beq	r2,zero,4c5c <__sfp+0x108>
    4c40:	11000217 	ldw	r4,8(r2)
    4c44:	11400117 	ldw	r5,4(r2)
    4c48:	1021883a 	mov	r16,r2
    4c4c:	003fd306 	br	4b9c <__sfp+0x48>
    4c50:	8009883a 	mov	r4,r16
    4c54:	000496c0 	call	496c <__sinit.part.0>
    4c58:	003fcc06 	br	4b8c <__sfp+0x38>
    4c5c:	01406b04 	movi	r5,428
    4c60:	8809883a 	mov	r4,r17
    4c64:	0005a600 	call	5a60 <_malloc_r>
    4c68:	1025883a 	mov	r18,r2
    4c6c:	10000c26 	beq	r2,zero,4ca0 <__sfp+0x14c>
    4c70:	11000304 	addi	r4,r2,12
    4c74:	11000215 	stw	r4,8(r2)
    4c78:	000b883a 	mov	r5,zero
    4c7c:	10000015 	stw	zero,0(r2)
    4c80:	14c00115 	stw	r19,4(r2)
    4c84:	01806804 	movi	r6,416
    4c88:	00064540 	call	6454 <memset>
    4c8c:	1009883a 	mov	r4,r2
    4c90:	84800015 	stw	r18,0(r16)
    4c94:	014000c4 	movi	r5,3
    4c98:	9021883a 	mov	r16,r18
    4c9c:	003fc606 	br	4bb8 <__sfp+0x64>
    4ca0:	80000015 	stw	zero,0(r16)
    4ca4:	00800304 	movi	r2,12
    4ca8:	88800015 	stw	r2,0(r17)
    4cac:	0009883a 	mov	r4,zero
    4cb0:	003fd906 	br	4c18 <__sfp+0xc4>

00004cb4 <_cleanup>:
    4cb4:	f811883a 	mov	r8,ra
    4cb8:	000e1ac0 	call	e1ac <_mcount>
    4cbc:	403f883a 	mov	ra,r8
    4cc0:	00800074 	movhi	r2,1
    4cc4:	1108d017 	ldw	r4,9024(r2)
    4cc8:	01400074 	movhi	r5,1
    4ccc:	2965c904 	addi	r5,r5,-26844
    4cd0:	00057081 	jmpi	5708 <_fwalk_reent>

00004cd4 <__sinit>:
    4cd4:	f811883a 	mov	r8,ra
    4cd8:	000e1ac0 	call	e1ac <_mcount>
    4cdc:	403f883a 	mov	ra,r8
    4ce0:	20800e17 	ldw	r2,56(r4)
    4ce4:	10000126 	beq	r2,zero,4cec <__sinit+0x18>
    4ce8:	f800283a 	ret
    4cec:	000496c1 	jmpi	496c <__sinit.part.0>

00004cf0 <__sfp_lock_acquire>:
    4cf0:	f811883a 	mov	r8,ra
    4cf4:	000e1ac0 	call	e1ac <_mcount>
    4cf8:	403f883a 	mov	ra,r8
    4cfc:	f800283a 	ret

00004d00 <__sfp_lock_release>:
    4d00:	f811883a 	mov	r8,ra
    4d04:	000e1ac0 	call	e1ac <_mcount>
    4d08:	403f883a 	mov	ra,r8
    4d0c:	f800283a 	ret

00004d10 <__sinit_lock_acquire>:
    4d10:	f811883a 	mov	r8,ra
    4d14:	000e1ac0 	call	e1ac <_mcount>
    4d18:	403f883a 	mov	ra,r8
    4d1c:	f800283a 	ret

00004d20 <__sinit_lock_release>:
    4d20:	f811883a 	mov	r8,ra
    4d24:	000e1ac0 	call	e1ac <_mcount>
    4d28:	403f883a 	mov	ra,r8
    4d2c:	f800283a 	ret

00004d30 <__fp_lock_all>:
    4d30:	f811883a 	mov	r8,ra
    4d34:	000e1ac0 	call	e1ac <_mcount>
    4d38:	403f883a 	mov	ra,r8
    4d3c:	00800074 	movhi	r2,1
    4d40:	1108d117 	ldw	r4,9028(r2)
    4d44:	01400034 	movhi	r5,0
    4d48:	29524b04 	addi	r5,r5,18732
    4d4c:	00056641 	jmpi	5664 <_fwalk>

00004d50 <__fp_unlock_all>:
    4d50:	f811883a 	mov	r8,ra
    4d54:	000e1ac0 	call	e1ac <_mcount>
    4d58:	403f883a 	mov	ra,r8
    4d5c:	00800074 	movhi	r2,1
    4d60:	1108d117 	ldw	r4,9028(r2)
    4d64:	01400034 	movhi	r5,0
    4d68:	29525604 	addi	r5,r5,18776
    4d6c:	00056641 	jmpi	5664 <_fwalk>

00004d70 <_malloc_trim_r>:
    4d70:	f811883a 	mov	r8,ra
    4d74:	000e1ac0 	call	e1ac <_mcount>
    4d78:	403f883a 	mov	ra,r8
    4d7c:	defffb04 	addi	sp,sp,-20
    4d80:	dfc00415 	stw	ra,16(sp)
    4d84:	dcc00315 	stw	r19,12(sp)
    4d88:	dc800215 	stw	r18,8(sp)
    4d8c:	dc400115 	stw	r17,4(sp)
    4d90:	dc000015 	stw	r16,0(sp)
    4d94:	04c00074 	movhi	r19,1
    4d98:	2821883a 	mov	r16,r5
    4d9c:	9cc2e804 	addi	r19,r19,2976
    4da0:	2025883a 	mov	r18,r4
    4da4:	000e18c0 	call	e18c <__malloc_lock>
    4da8:	98800217 	ldw	r2,8(r19)
    4dac:	14400117 	ldw	r17,4(r2)
    4db0:	00bfff04 	movi	r2,-4
    4db4:	88a2703a 	and	r17,r17,r2
    4db8:	8c21c83a 	sub	r16,r17,r16
    4dbc:	8403fbc4 	addi	r16,r16,4079
    4dc0:	8020d33a 	srli	r16,r16,12
    4dc4:	843fffc4 	addi	r16,r16,-1
    4dc8:	8020933a 	slli	r16,r16,12
    4dcc:	80840008 	cmpgei	r2,r16,4096
    4dd0:	10000626 	beq	r2,zero,4dec <_malloc_trim_r+0x7c>
    4dd4:	000b883a 	mov	r5,zero
    4dd8:	9009883a 	mov	r4,r18
    4ddc:	0007cfc0 	call	7cfc <_sbrk_r>
    4de0:	98c00217 	ldw	r3,8(r19)
    4de4:	1c47883a 	add	r3,r3,r17
    4de8:	10c00a26 	beq	r2,r3,4e14 <_malloc_trim_r+0xa4>
    4dec:	9009883a 	mov	r4,r18
    4df0:	000e19c0 	call	e19c <__malloc_unlock>
    4df4:	0005883a 	mov	r2,zero
    4df8:	dfc00417 	ldw	ra,16(sp)
    4dfc:	dcc00317 	ldw	r19,12(sp)
    4e00:	dc800217 	ldw	r18,8(sp)
    4e04:	dc400117 	ldw	r17,4(sp)
    4e08:	dc000017 	ldw	r16,0(sp)
    4e0c:	dec00504 	addi	sp,sp,20
    4e10:	f800283a 	ret
    4e14:	040bc83a 	sub	r5,zero,r16
    4e18:	9009883a 	mov	r4,r18
    4e1c:	0007cfc0 	call	7cfc <_sbrk_r>
    4e20:	10bfffd8 	cmpnei	r2,r2,-1
    4e24:	10000d26 	beq	r2,zero,4e5c <_malloc_trim_r+0xec>
    4e28:	00800074 	movhi	r2,1
    4e2c:	1088ef17 	ldw	r2,9148(r2)
    4e30:	98c00217 	ldw	r3,8(r19)
    4e34:	8c23c83a 	sub	r17,r17,r16
    4e38:	8c400054 	ori	r17,r17,1
    4e3c:	1421c83a 	sub	r16,r2,r16
    4e40:	1c400115 	stw	r17,4(r3)
    4e44:	00800074 	movhi	r2,1
    4e48:	9009883a 	mov	r4,r18
    4e4c:	1408ef15 	stw	r16,9148(r2)
    4e50:	000e19c0 	call	e19c <__malloc_unlock>
    4e54:	00800044 	movi	r2,1
    4e58:	003fe706 	br	4df8 <_malloc_trim_r+0x88>
    4e5c:	000b883a 	mov	r5,zero
    4e60:	9009883a 	mov	r4,r18
    4e64:	0007cfc0 	call	7cfc <_sbrk_r>
    4e68:	99000217 	ldw	r4,8(r19)
    4e6c:	1107c83a 	sub	r3,r2,r4
    4e70:	19400410 	cmplti	r5,r3,16
    4e74:	283fdd1e 	bne	r5,zero,4dec <_malloc_trim_r+0x7c>
    4e78:	01400074 	movhi	r5,1
    4e7c:	2948d217 	ldw	r5,9032(r5)
    4e80:	18c00054 	ori	r3,r3,1
    4e84:	20c00115 	stw	r3,4(r4)
    4e88:	1145c83a 	sub	r2,r2,r5
    4e8c:	01400074 	movhi	r5,1
    4e90:	2888ef15 	stw	r2,9148(r5)
    4e94:	003fd506 	br	4dec <_malloc_trim_r+0x7c>

00004e98 <_free_r>:
    4e98:	f811883a 	mov	r8,ra
    4e9c:	000e1ac0 	call	e1ac <_mcount>
    4ea0:	403f883a 	mov	ra,r8
    4ea4:	28004f26 	beq	r5,zero,4fe4 <_free_r+0x14c>
    4ea8:	defffd04 	addi	sp,sp,-12
    4eac:	dfc00215 	stw	ra,8(sp)
    4eb0:	dc400115 	stw	r17,4(sp)
    4eb4:	dc000015 	stw	r16,0(sp)
    4eb8:	2821883a 	mov	r16,r5
    4ebc:	2023883a 	mov	r17,r4
    4ec0:	000e18c0 	call	e18c <__malloc_lock>
    4ec4:	81ffff17 	ldw	r7,-4(r16)
    4ec8:	00bfff84 	movi	r2,-2
    4ecc:	80fffe04 	addi	r3,r16,-8
    4ed0:	3884703a 	and	r2,r7,r2
    4ed4:	01000074 	movhi	r4,1
    4ed8:	188d883a 	add	r6,r3,r2
    4edc:	2102e804 	addi	r4,r4,2976
    4ee0:	31400117 	ldw	r5,4(r6)
    4ee4:	22000217 	ldw	r8,8(r4)
    4ee8:	027fff04 	movi	r9,-4
    4eec:	2a4a703a 	and	r5,r5,r9
    4ef0:	41806426 	beq	r8,r6,5084 <_free_r+0x1ec>
    4ef4:	31400115 	stw	r5,4(r6)
    4ef8:	39c0004c 	andi	r7,r7,1
    4efc:	3151883a 	add	r8,r6,r5
    4f00:	3800281e 	bne	r7,zero,4fa4 <_free_r+0x10c>
    4f04:	82bffe17 	ldw	r10,-8(r16)
    4f08:	42000117 	ldw	r8,4(r8)
    4f0c:	01c00074 	movhi	r7,1
    4f10:	1a87c83a 	sub	r3,r3,r10
    4f14:	1a400217 	ldw	r9,8(r3)
    4f18:	39c2ea04 	addi	r7,r7,2984
    4f1c:	1285883a 	add	r2,r2,r10
    4f20:	4200004c 	andi	r8,r8,1
    4f24:	49c04c26 	beq	r9,r7,5058 <_free_r+0x1c0>
    4f28:	1a800317 	ldw	r10,12(r3)
    4f2c:	4a800315 	stw	r10,12(r9)
    4f30:	52400215 	stw	r9,8(r10)
    4f34:	40007126 	beq	r8,zero,50fc <_free_r+0x264>
    4f38:	11400054 	ori	r5,r2,1
    4f3c:	19400115 	stw	r5,4(r3)
    4f40:	30800015 	stw	r2,0(r6)
    4f44:	11408028 	cmpgeui	r5,r2,512
    4f48:	28002c1e 	bne	r5,zero,4ffc <_free_r+0x164>
    4f4c:	100ad0fa 	srli	r5,r2,3
    4f50:	100cd17a 	srli	r6,r2,5
    4f54:	00800044 	movi	r2,1
    4f58:	29400044 	addi	r5,r5,1
    4f5c:	280a90fa 	slli	r5,r5,3
    4f60:	21c00117 	ldw	r7,4(r4)
    4f64:	1184983a 	sll	r2,r2,r6
    4f68:	214b883a 	add	r5,r4,r5
    4f6c:	29800017 	ldw	r6,0(r5)
    4f70:	11c4b03a 	or	r2,r2,r7
    4f74:	29fffe04 	addi	r7,r5,-8
    4f78:	19c00315 	stw	r7,12(r3)
    4f7c:	19800215 	stw	r6,8(r3)
    4f80:	20800115 	stw	r2,4(r4)
    4f84:	28c00015 	stw	r3,0(r5)
    4f88:	30c00315 	stw	r3,12(r6)
    4f8c:	8809883a 	mov	r4,r17
    4f90:	dfc00217 	ldw	ra,8(sp)
    4f94:	dc400117 	ldw	r17,4(sp)
    4f98:	dc000017 	ldw	r16,0(sp)
    4f9c:	dec00304 	addi	sp,sp,12
    4fa0:	000e19c1 	jmpi	e19c <__malloc_unlock>
    4fa4:	41c00117 	ldw	r7,4(r8)
    4fa8:	39c0004c 	andi	r7,r7,1
    4fac:	38000e1e 	bne	r7,zero,4fe8 <_free_r+0x150>
    4fb0:	01c00074 	movhi	r7,1
    4fb4:	1145883a 	add	r2,r2,r5
    4fb8:	39c2ea04 	addi	r7,r7,2984
    4fbc:	31400217 	ldw	r5,8(r6)
    4fc0:	12400054 	ori	r9,r2,1
    4fc4:	1891883a 	add	r8,r3,r2
    4fc8:	29c05226 	beq	r5,r7,5114 <_free_r+0x27c>
    4fcc:	31800317 	ldw	r6,12(r6)
    4fd0:	29800315 	stw	r6,12(r5)
    4fd4:	31400215 	stw	r5,8(r6)
    4fd8:	1a400115 	stw	r9,4(r3)
    4fdc:	40800015 	stw	r2,0(r8)
    4fe0:	003fd806 	br	4f44 <_free_r+0xac>
    4fe4:	f800283a 	ret
    4fe8:	11400054 	ori	r5,r2,1
    4fec:	817fff15 	stw	r5,-4(r16)
    4ff0:	30800015 	stw	r2,0(r6)
    4ff4:	11408028 	cmpgeui	r5,r2,512
    4ff8:	283fd426 	beq	r5,zero,4f4c <_free_r+0xb4>
    4ffc:	100ad27a 	srli	r5,r2,9
    5000:	29800168 	cmpgeui	r6,r5,5
    5004:	3000341e 	bne	r6,zero,50d8 <_free_r+0x240>
    5008:	100ad1ba 	srli	r5,r2,6
    500c:	29800e44 	addi	r6,r5,57
    5010:	300c90fa 	slli	r6,r6,3
    5014:	29c00e04 	addi	r7,r5,56
    5018:	218d883a 	add	r6,r4,r6
    501c:	31400017 	ldw	r5,0(r6)
    5020:	31bffe04 	addi	r6,r6,-8
    5024:	31404226 	beq	r6,r5,5130 <_free_r+0x298>
    5028:	01ffff04 	movi	r7,-4
    502c:	29000117 	ldw	r4,4(r5)
    5030:	21c8703a 	and	r4,r4,r7
    5034:	1100022e 	bgeu	r2,r4,5040 <_free_r+0x1a8>
    5038:	29400217 	ldw	r5,8(r5)
    503c:	317ffb1e 	bne	r6,r5,502c <_free_r+0x194>
    5040:	29800317 	ldw	r6,12(r5)
    5044:	19800315 	stw	r6,12(r3)
    5048:	19400215 	stw	r5,8(r3)
    504c:	30c00215 	stw	r3,8(r6)
    5050:	28c00315 	stw	r3,12(r5)
    5054:	003fcd06 	br	4f8c <_free_r+0xf4>
    5058:	40004d1e 	bne	r8,zero,5190 <_free_r+0x2f8>
    505c:	31000317 	ldw	r4,12(r6)
    5060:	31800217 	ldw	r6,8(r6)
    5064:	2885883a 	add	r2,r5,r2
    5068:	11400054 	ori	r5,r2,1
    506c:	31000315 	stw	r4,12(r6)
    5070:	21800215 	stw	r6,8(r4)
    5074:	19400115 	stw	r5,4(r3)
    5078:	1887883a 	add	r3,r3,r2
    507c:	18800015 	stw	r2,0(r3)
    5080:	003fc206 	br	4f8c <_free_r+0xf4>
    5084:	39c0004c 	andi	r7,r7,1
    5088:	1145883a 	add	r2,r2,r5
    508c:	3800071e 	bne	r7,zero,50ac <_free_r+0x214>
    5090:	81fffe17 	ldw	r7,-8(r16)
    5094:	19c7c83a 	sub	r3,r3,r7
    5098:	19400317 	ldw	r5,12(r3)
    509c:	19800217 	ldw	r6,8(r3)
    50a0:	11c5883a 	add	r2,r2,r7
    50a4:	31400315 	stw	r5,12(r6)
    50a8:	29800215 	stw	r6,8(r5)
    50ac:	01400074 	movhi	r5,1
    50b0:	11800054 	ori	r6,r2,1
    50b4:	2948d317 	ldw	r5,9036(r5)
    50b8:	19800115 	stw	r6,4(r3)
    50bc:	20c00215 	stw	r3,8(r4)
    50c0:	117fb236 	bltu	r2,r5,4f8c <_free_r+0xf4>
    50c4:	00800074 	movhi	r2,1
    50c8:	1148e217 	ldw	r5,9096(r2)
    50cc:	8809883a 	mov	r4,r17
    50d0:	0004d700 	call	4d70 <_malloc_trim_r>
    50d4:	003fad06 	br	4f8c <_free_r+0xf4>
    50d8:	29800568 	cmpgeui	r6,r5,21
    50dc:	30000926 	beq	r6,zero,5104 <_free_r+0x26c>
    50e0:	29801568 	cmpgeui	r6,r5,85
    50e4:	3000191e 	bne	r6,zero,514c <_free_r+0x2b4>
    50e8:	100ad33a 	srli	r5,r2,12
    50ec:	29801bc4 	addi	r6,r5,111
    50f0:	300c90fa 	slli	r6,r6,3
    50f4:	29c01b84 	addi	r7,r5,110
    50f8:	003fc706 	br	5018 <_free_r+0x180>
    50fc:	1145883a 	add	r2,r2,r5
    5100:	003fae06 	br	4fbc <_free_r+0x124>
    5104:	29801704 	addi	r6,r5,92
    5108:	300c90fa 	slli	r6,r6,3
    510c:	29c016c4 	addi	r7,r5,91
    5110:	003fc106 	br	5018 <_free_r+0x180>
    5114:	20c00515 	stw	r3,20(r4)
    5118:	20c00415 	stw	r3,16(r4)
    511c:	19c00315 	stw	r7,12(r3)
    5120:	19c00215 	stw	r7,8(r3)
    5124:	1a400115 	stw	r9,4(r3)
    5128:	40800015 	stw	r2,0(r8)
    512c:	003f9706 	br	4f8c <_free_r+0xf4>
    5130:	380fd0ba 	srai	r7,r7,2
    5134:	00800044 	movi	r2,1
    5138:	22000117 	ldw	r8,4(r4)
    513c:	11ce983a 	sll	r7,r2,r7
    5140:	3a0eb03a 	or	r7,r7,r8
    5144:	21c00115 	stw	r7,4(r4)
    5148:	003fbe06 	br	5044 <_free_r+0x1ac>
    514c:	29805568 	cmpgeui	r6,r5,341
    5150:	3000051e 	bne	r6,zero,5168 <_free_r+0x2d0>
    5154:	100ad3fa 	srli	r5,r2,15
    5158:	29801e04 	addi	r6,r5,120
    515c:	300c90fa 	slli	r6,r6,3
    5160:	29c01dc4 	addi	r7,r5,119
    5164:	003fac06 	br	5018 <_free_r+0x180>
    5168:	29415568 	cmpgeui	r5,r5,1365
    516c:	2800051e 	bne	r5,zero,5184 <_free_r+0x2ec>
    5170:	100ad4ba 	srli	r5,r2,18
    5174:	29801f44 	addi	r6,r5,125
    5178:	300c90fa 	slli	r6,r6,3
    517c:	29c01f04 	addi	r7,r5,124
    5180:	003fa506 	br	5018 <_free_r+0x180>
    5184:	0180fe04 	movi	r6,1016
    5188:	01c01f84 	movi	r7,126
    518c:	003fa206 	br	5018 <_free_r+0x180>
    5190:	11000054 	ori	r4,r2,1
    5194:	19000115 	stw	r4,4(r3)
    5198:	30800015 	stw	r2,0(r6)
    519c:	003f7b06 	br	4f8c <_free_r+0xf4>

000051a0 <__sfvwrite_r>:
    51a0:	f811883a 	mov	r8,ra
    51a4:	000e1ac0 	call	e1ac <_mcount>
    51a8:	403f883a 	mov	ra,r8
    51ac:	30800217 	ldw	r2,8(r6)
    51b0:	1000a226 	beq	r2,zero,543c <__sfvwrite_r+0x29c>
    51b4:	defff404 	addi	sp,sp,-48
    51b8:	dfc00b15 	stw	ra,44(sp)
    51bc:	df000a15 	stw	fp,40(sp)
    51c0:	ddc00915 	stw	r23,36(sp)
    51c4:	dd800815 	stw	r22,32(sp)
    51c8:	dd400715 	stw	r21,28(sp)
    51cc:	dd000615 	stw	r20,24(sp)
    51d0:	dcc00515 	stw	r19,20(sp)
    51d4:	dc800415 	stw	r18,16(sp)
    51d8:	dc400315 	stw	r17,12(sp)
    51dc:	dc000215 	stw	r16,8(sp)
    51e0:	29c0030b 	ldhu	r7,12(r5)
    51e4:	302f883a 	mov	r23,r6
    51e8:	202b883a 	mov	r21,r4
    51ec:	3880020c 	andi	r2,r7,8
    51f0:	2821883a 	mov	r16,r5
    51f4:	10002226 	beq	r2,zero,5280 <__sfvwrite_r+0xe0>
    51f8:	28800417 	ldw	r2,16(r5)
    51fc:	10002026 	beq	r2,zero,5280 <__sfvwrite_r+0xe0>
    5200:	3880008c 	andi	r2,r7,2
    5204:	bc400017 	ldw	r17,0(r23)
    5208:	10002526 	beq	r2,zero,52a0 <__sfvwrite_r+0x100>
    520c:	80800917 	ldw	r2,36(r16)
    5210:	81400717 	ldw	r5,28(r16)
    5214:	05200034 	movhi	r20,32768
    5218:	0027883a 	mov	r19,zero
    521c:	0025883a 	mov	r18,zero
    5220:	a53f0004 	addi	r20,r20,-1024
    5224:	980d883a 	mov	r6,r19
    5228:	a809883a 	mov	r4,r21
    522c:	90001026 	beq	r18,zero,5270 <__sfvwrite_r+0xd0>
    5230:	900f883a 	mov	r7,r18
    5234:	a480012e 	bgeu	r20,r18,523c <__sfvwrite_r+0x9c>
    5238:	a00f883a 	mov	r7,r20
    523c:	103ee83a 	callr	r2
    5240:	0080790e 	bge	zero,r2,5428 <__sfvwrite_r+0x288>
    5244:	b9000217 	ldw	r4,8(r23)
    5248:	98a7883a 	add	r19,r19,r2
    524c:	90a5c83a 	sub	r18,r18,r2
    5250:	2085c83a 	sub	r2,r4,r2
    5254:	b8800215 	stw	r2,8(r23)
    5258:	10006226 	beq	r2,zero,53e4 <__sfvwrite_r+0x244>
    525c:	80800917 	ldw	r2,36(r16)
    5260:	81400717 	ldw	r5,28(r16)
    5264:	980d883a 	mov	r6,r19
    5268:	a809883a 	mov	r4,r21
    526c:	903ff01e 	bne	r18,zero,5230 <__sfvwrite_r+0x90>
    5270:	8cc00017 	ldw	r19,0(r17)
    5274:	8c800117 	ldw	r18,4(r17)
    5278:	8c400204 	addi	r17,r17,8
    527c:	003fe906 	br	5224 <__sfvwrite_r+0x84>
    5280:	800b883a 	mov	r5,r16
    5284:	a809883a 	mov	r4,r21
    5288:	0002a040 	call	2a04 <__swsetup_r>
    528c:	1000f31e 	bne	r2,zero,565c <__sfvwrite_r+0x4bc>
    5290:	81c0030b 	ldhu	r7,12(r16)
    5294:	bc400017 	ldw	r17,0(r23)
    5298:	3880008c 	andi	r2,r7,2
    529c:	103fdb1e 	bne	r2,zero,520c <__sfvwrite_r+0x6c>
    52a0:	3880004c 	andi	r2,r7,1
    52a4:	84800217 	ldw	r18,8(r16)
    52a8:	82000017 	ldw	r8,0(r16)
    52ac:	1000651e 	bne	r2,zero,5444 <__sfvwrite_r+0x2a4>
    52b0:	00a00034 	movhi	r2,32768
    52b4:	10bfff84 	addi	r2,r2,-2
    52b8:	00e00034 	movhi	r3,32768
    52bc:	d8800015 	stw	r2,0(sp)
    52c0:	18bfffc4 	addi	r2,r3,-1
    52c4:	0039883a 	mov	fp,zero
    52c8:	0027883a 	mov	r19,zero
    52cc:	d8800115 	stw	r2,4(sp)
    52d0:	98004026 	beq	r19,zero,53d4 <__sfvwrite_r+0x234>
    52d4:	3880800c 	andi	r2,r7,512
    52d8:	10009626 	beq	r2,zero,5534 <__sfvwrite_r+0x394>
    52dc:	902d883a 	mov	r22,r18
    52e0:	9c80ba36 	bltu	r19,r18,55cc <__sfvwrite_r+0x42c>
    52e4:	3881200c 	andi	r2,r7,1152
    52e8:	10002526 	beq	r2,zero,5380 <__sfvwrite_r+0x1e0>
    52ec:	81000517 	ldw	r4,20(r16)
    52f0:	81400417 	ldw	r5,16(r16)
    52f4:	98800044 	addi	r2,r19,1
    52f8:	210000e4 	muli	r4,r4,3
    52fc:	4165c83a 	sub	r18,r8,r5
    5300:	1485883a 	add	r2,r2,r18
    5304:	2028d7fa 	srli	r20,r4,31
    5308:	a109883a 	add	r4,r20,r4
    530c:	2029d07a 	srai	r20,r4,1
    5310:	a00d883a 	mov	r6,r20
    5314:	a080022e 	bgeu	r20,r2,5320 <__sfvwrite_r+0x180>
    5318:	1029883a 	mov	r20,r2
    531c:	100d883a 	mov	r6,r2
    5320:	39c1000c 	andi	r7,r7,1024
    5324:	3800bd26 	beq	r7,zero,561c <__sfvwrite_r+0x47c>
    5328:	a809883a 	mov	r4,r21
    532c:	300b883a 	mov	r5,r6
    5330:	0005a600 	call	5a60 <_malloc_r>
    5334:	1009883a 	mov	r4,r2
    5338:	1000c426 	beq	r2,zero,564c <__sfvwrite_r+0x4ac>
    533c:	81400417 	ldw	r5,16(r16)
    5340:	900d883a 	mov	r6,r18
    5344:	00004ec0 	call	4ec <memcpy>
    5348:	1009883a 	mov	r4,r2
    534c:	8080030b 	ldhu	r2,12(r16)
    5350:	00fedfc4 	movi	r3,-1153
    5354:	10c4703a 	and	r2,r2,r3
    5358:	10802014 	ori	r2,r2,128
    535c:	8080030d 	sth	r2,12(r16)
    5360:	2491883a 	add	r8,r4,r18
    5364:	a485c83a 	sub	r2,r20,r18
    5368:	81000415 	stw	r4,16(r16)
    536c:	82000015 	stw	r8,0(r16)
    5370:	85000515 	stw	r20,20(r16)
    5374:	9825883a 	mov	r18,r19
    5378:	80800215 	stw	r2,8(r16)
    537c:	982d883a 	mov	r22,r19
    5380:	4009883a 	mov	r4,r8
    5384:	b00d883a 	mov	r6,r22
    5388:	e00b883a 	mov	r5,fp
    538c:	00063240 	call	6324 <memmove>
    5390:	81000217 	ldw	r4,8(r16)
    5394:	80800017 	ldw	r2,0(r16)
    5398:	9829883a 	mov	r20,r19
    539c:	24a5c83a 	sub	r18,r4,r18
    53a0:	1585883a 	add	r2,r2,r22
    53a4:	84800215 	stw	r18,8(r16)
    53a8:	80800015 	stw	r2,0(r16)
    53ac:	0027883a 	mov	r19,zero
    53b0:	b8800217 	ldw	r2,8(r23)
    53b4:	e539883a 	add	fp,fp,r20
    53b8:	1529c83a 	sub	r20,r2,r20
    53bc:	bd000215 	stw	r20,8(r23)
    53c0:	a0000826 	beq	r20,zero,53e4 <__sfvwrite_r+0x244>
    53c4:	81c0030b 	ldhu	r7,12(r16)
    53c8:	84800217 	ldw	r18,8(r16)
    53cc:	82000017 	ldw	r8,0(r16)
    53d0:	983fc01e 	bne	r19,zero,52d4 <__sfvwrite_r+0x134>
    53d4:	8f000017 	ldw	fp,0(r17)
    53d8:	8cc00117 	ldw	r19,4(r17)
    53dc:	8c400204 	addi	r17,r17,8
    53e0:	003fbb06 	br	52d0 <__sfvwrite_r+0x130>
    53e4:	0005883a 	mov	r2,zero
    53e8:	dfc00b17 	ldw	ra,44(sp)
    53ec:	df000a17 	ldw	fp,40(sp)
    53f0:	ddc00917 	ldw	r23,36(sp)
    53f4:	dd800817 	ldw	r22,32(sp)
    53f8:	dd400717 	ldw	r21,28(sp)
    53fc:	dd000617 	ldw	r20,24(sp)
    5400:	dcc00517 	ldw	r19,20(sp)
    5404:	dc800417 	ldw	r18,16(sp)
    5408:	dc400317 	ldw	r17,12(sp)
    540c:	dc000217 	ldw	r16,8(sp)
    5410:	dec00c04 	addi	sp,sp,48
    5414:	f800283a 	ret
    5418:	800b883a 	mov	r5,r16
    541c:	a809883a 	mov	r4,r21
    5420:	00048300 	call	4830 <_fflush_r>
    5424:	10002026 	beq	r2,zero,54a8 <__sfvwrite_r+0x308>
    5428:	8080030b 	ldhu	r2,12(r16)
    542c:	10801014 	ori	r2,r2,64
    5430:	8080030d 	sth	r2,12(r16)
    5434:	00bfffc4 	movi	r2,-1
    5438:	003feb06 	br	53e8 <__sfvwrite_r+0x248>
    543c:	0005883a 	mov	r2,zero
    5440:	f800283a 	ret
    5444:	002d883a 	mov	r22,zero
    5448:	0027883a 	mov	r19,zero
    544c:	0005883a 	mov	r2,zero
    5450:	0039883a 	mov	fp,zero
    5454:	b0001d26 	beq	r22,zero,54cc <__sfvwrite_r+0x32c>
    5458:	10002026 	beq	r2,zero,54dc <__sfvwrite_r+0x33c>
    545c:	9829883a 	mov	r20,r19
    5460:	b500012e 	bgeu	r22,r20,5468 <__sfvwrite_r+0x2c8>
    5464:	b029883a 	mov	r20,r22
    5468:	80800417 	ldw	r2,16(r16)
    546c:	81c00517 	ldw	r7,20(r16)
    5470:	1200022e 	bgeu	r2,r8,547c <__sfvwrite_r+0x2dc>
    5474:	3ca5883a 	add	r18,r7,r18
    5478:	95002216 	blt	r18,r20,5504 <__sfvwrite_r+0x364>
    547c:	a1c05616 	blt	r20,r7,55d8 <__sfvwrite_r+0x438>
    5480:	80800917 	ldw	r2,36(r16)
    5484:	81400717 	ldw	r5,28(r16)
    5488:	e00d883a 	mov	r6,fp
    548c:	a809883a 	mov	r4,r21
    5490:	103ee83a 	callr	r2
    5494:	1025883a 	mov	r18,r2
    5498:	00bfe30e 	bge	zero,r2,5428 <__sfvwrite_r+0x288>
    549c:	9ca7c83a 	sub	r19,r19,r18
    54a0:	983fdd26 	beq	r19,zero,5418 <__sfvwrite_r+0x278>
    54a4:	00800044 	movi	r2,1
    54a8:	b9800217 	ldw	r6,8(r23)
    54ac:	e4b9883a 	add	fp,fp,r18
    54b0:	b4adc83a 	sub	r22,r22,r18
    54b4:	34a5c83a 	sub	r18,r6,r18
    54b8:	bc800215 	stw	r18,8(r23)
    54bc:	903fc926 	beq	r18,zero,53e4 <__sfvwrite_r+0x244>
    54c0:	84800217 	ldw	r18,8(r16)
    54c4:	82000017 	ldw	r8,0(r16)
    54c8:	b03fe31e 	bne	r22,zero,5458 <__sfvwrite_r+0x2b8>
    54cc:	8d800117 	ldw	r22,4(r17)
    54d0:	8f000017 	ldw	fp,0(r17)
    54d4:	8c400204 	addi	r17,r17,8
    54d8:	b03ffc26 	beq	r22,zero,54cc <__sfvwrite_r+0x32c>
    54dc:	b00d883a 	mov	r6,r22
    54e0:	01400284 	movi	r5,10
    54e4:	e009883a 	mov	r4,fp
    54e8:	da000015 	stw	r8,0(sp)
    54ec:	000624c0 	call	624c <memchr>
    54f0:	da000017 	ldw	r8,0(sp)
    54f4:	10004626 	beq	r2,zero,5610 <__sfvwrite_r+0x470>
    54f8:	10800044 	addi	r2,r2,1
    54fc:	1727c83a 	sub	r19,r2,fp
    5500:	003fd606 	br	545c <__sfvwrite_r+0x2bc>
    5504:	e00b883a 	mov	r5,fp
    5508:	4009883a 	mov	r4,r8
    550c:	900d883a 	mov	r6,r18
    5510:	00063240 	call	6324 <memmove>
    5514:	80800017 	ldw	r2,0(r16)
    5518:	800b883a 	mov	r5,r16
    551c:	a809883a 	mov	r4,r21
    5520:	1485883a 	add	r2,r2,r18
    5524:	80800015 	stw	r2,0(r16)
    5528:	00048300 	call	4830 <_fflush_r>
    552c:	103fdb26 	beq	r2,zero,549c <__sfvwrite_r+0x2fc>
    5530:	003fbd06 	br	5428 <__sfvwrite_r+0x288>
    5534:	80800417 	ldw	r2,16(r16)
    5538:	12001136 	bltu	r2,r8,5580 <__sfvwrite_r+0x3e0>
    553c:	85000517 	ldw	r20,20(r16)
    5540:	9d000f36 	bltu	r19,r20,5580 <__sfvwrite_r+0x3e0>
    5544:	d8800017 	ldw	r2,0(sp)
    5548:	14c02f2e 	bgeu	r2,r19,5608 <__sfvwrite_r+0x468>
    554c:	d9000117 	ldw	r4,4(sp)
    5550:	a00b883a 	mov	r5,r20
    5554:	000b24c0 	call	b24c <__divsi3>
    5558:	150f383a 	mul	r7,r2,r20
    555c:	82000917 	ldw	r8,36(r16)
    5560:	81400717 	ldw	r5,28(r16)
    5564:	e00d883a 	mov	r6,fp
    5568:	a809883a 	mov	r4,r21
    556c:	403ee83a 	callr	r8
    5570:	1029883a 	mov	r20,r2
    5574:	00bfac0e 	bge	zero,r2,5428 <__sfvwrite_r+0x288>
    5578:	9d27c83a 	sub	r19,r19,r20
    557c:	003f8c06 	br	53b0 <__sfvwrite_r+0x210>
    5580:	9029883a 	mov	r20,r18
    5584:	9c80012e 	bgeu	r19,r18,558c <__sfvwrite_r+0x3ec>
    5588:	9829883a 	mov	r20,r19
    558c:	4009883a 	mov	r4,r8
    5590:	a00d883a 	mov	r6,r20
    5594:	e00b883a 	mov	r5,fp
    5598:	00063240 	call	6324 <memmove>
    559c:	80800217 	ldw	r2,8(r16)
    55a0:	81000017 	ldw	r4,0(r16)
    55a4:	1505c83a 	sub	r2,r2,r20
    55a8:	2509883a 	add	r4,r4,r20
    55ac:	80800215 	stw	r2,8(r16)
    55b0:	81000015 	stw	r4,0(r16)
    55b4:	103ff01e 	bne	r2,zero,5578 <__sfvwrite_r+0x3d8>
    55b8:	800b883a 	mov	r5,r16
    55bc:	a809883a 	mov	r4,r21
    55c0:	00048300 	call	4830 <_fflush_r>
    55c4:	103fec26 	beq	r2,zero,5578 <__sfvwrite_r+0x3d8>
    55c8:	003f9706 	br	5428 <__sfvwrite_r+0x288>
    55cc:	9825883a 	mov	r18,r19
    55d0:	982d883a 	mov	r22,r19
    55d4:	003f6a06 	br	5380 <__sfvwrite_r+0x1e0>
    55d8:	4009883a 	mov	r4,r8
    55dc:	a00d883a 	mov	r6,r20
    55e0:	e00b883a 	mov	r5,fp
    55e4:	00063240 	call	6324 <memmove>
    55e8:	81000217 	ldw	r4,8(r16)
    55ec:	80800017 	ldw	r2,0(r16)
    55f0:	a025883a 	mov	r18,r20
    55f4:	2509c83a 	sub	r4,r4,r20
    55f8:	1505883a 	add	r2,r2,r20
    55fc:	81000215 	stw	r4,8(r16)
    5600:	80800015 	stw	r2,0(r16)
    5604:	003fa506 	br	549c <__sfvwrite_r+0x2fc>
    5608:	9809883a 	mov	r4,r19
    560c:	003fd006 	br	5550 <__sfvwrite_r+0x3b0>
    5610:	b5000044 	addi	r20,r22,1
    5614:	a027883a 	mov	r19,r20
    5618:	003f9106 	br	5460 <__sfvwrite_r+0x2c0>
    561c:	a809883a 	mov	r4,r21
    5620:	000778c0 	call	778c <_realloc_r>
    5624:	1009883a 	mov	r4,r2
    5628:	103f4d1e 	bne	r2,zero,5360 <__sfvwrite_r+0x1c0>
    562c:	81400417 	ldw	r5,16(r16)
    5630:	a809883a 	mov	r4,r21
    5634:	0004e980 	call	4e98 <_free_r>
    5638:	8080030b 	ldhu	r2,12(r16)
    563c:	00c00304 	movi	r3,12
    5640:	a8c00015 	stw	r3,0(r21)
    5644:	10bfdfcc 	andi	r2,r2,65407
    5648:	003f7806 	br	542c <__sfvwrite_r+0x28c>
    564c:	00c00304 	movi	r3,12
    5650:	8080030b 	ldhu	r2,12(r16)
    5654:	a8c00015 	stw	r3,0(r21)
    5658:	003f7406 	br	542c <__sfvwrite_r+0x28c>
    565c:	00bfffc4 	movi	r2,-1
    5660:	003f6106 	br	53e8 <__sfvwrite_r+0x248>

00005664 <_fwalk>:
    5664:	f811883a 	mov	r8,ra
    5668:	000e1ac0 	call	e1ac <_mcount>
    566c:	403f883a 	mov	ra,r8
    5670:	defffa04 	addi	sp,sp,-24
    5674:	dfc00515 	stw	ra,20(sp)
    5678:	dd000415 	stw	r20,16(sp)
    567c:	dcc00315 	stw	r19,12(sp)
    5680:	dc800215 	stw	r18,8(sp)
    5684:	dc400115 	stw	r17,4(sp)
    5688:	dc000015 	stw	r16,0(sp)
    568c:	0029883a 	mov	r20,zero
    5690:	2827883a 	mov	r19,r5
    5694:	2480b804 	addi	r18,r4,736
    5698:	94400117 	ldw	r17,4(r18)
    569c:	94000217 	ldw	r16,8(r18)
    56a0:	8c7fffc4 	addi	r17,r17,-1
    56a4:	88000d16 	blt	r17,zero,56dc <_fwalk+0x78>
    56a8:	8080030b 	ldhu	r2,12(r16)
    56ac:	8c7fffc4 	addi	r17,r17,-1
    56b0:	108000b0 	cmpltui	r2,r2,2
    56b4:	1000061e 	bne	r2,zero,56d0 <_fwalk+0x6c>
    56b8:	8080038f 	ldh	r2,14(r16)
    56bc:	8009883a 	mov	r4,r16
    56c0:	10bfffe0 	cmpeqi	r2,r2,-1
    56c4:	1000021e 	bne	r2,zero,56d0 <_fwalk+0x6c>
    56c8:	983ee83a 	callr	r19
    56cc:	a0a8b03a 	or	r20,r20,r2
    56d0:	88bfffd8 	cmpnei	r2,r17,-1
    56d4:	84001a04 	addi	r16,r16,104
    56d8:	103ff31e 	bne	r2,zero,56a8 <_fwalk+0x44>
    56dc:	94800017 	ldw	r18,0(r18)
    56e0:	903fed1e 	bne	r18,zero,5698 <_fwalk+0x34>
    56e4:	a005883a 	mov	r2,r20
    56e8:	dfc00517 	ldw	ra,20(sp)
    56ec:	dd000417 	ldw	r20,16(sp)
    56f0:	dcc00317 	ldw	r19,12(sp)
    56f4:	dc800217 	ldw	r18,8(sp)
    56f8:	dc400117 	ldw	r17,4(sp)
    56fc:	dc000017 	ldw	r16,0(sp)
    5700:	dec00604 	addi	sp,sp,24
    5704:	f800283a 	ret

00005708 <_fwalk_reent>:
    5708:	f811883a 	mov	r8,ra
    570c:	000e1ac0 	call	e1ac <_mcount>
    5710:	403f883a 	mov	ra,r8
    5714:	defff904 	addi	sp,sp,-28
    5718:	dfc00615 	stw	ra,24(sp)
    571c:	dd400515 	stw	r21,20(sp)
    5720:	dd000415 	stw	r20,16(sp)
    5724:	dcc00315 	stw	r19,12(sp)
    5728:	dc800215 	stw	r18,8(sp)
    572c:	dc400115 	stw	r17,4(sp)
    5730:	dc000015 	stw	r16,0(sp)
    5734:	0029883a 	mov	r20,zero
    5738:	202b883a 	mov	r21,r4
    573c:	2827883a 	mov	r19,r5
    5740:	2480b804 	addi	r18,r4,736
    5744:	94400117 	ldw	r17,4(r18)
    5748:	94000217 	ldw	r16,8(r18)
    574c:	8c7fffc4 	addi	r17,r17,-1
    5750:	88000e16 	blt	r17,zero,578c <_fwalk_reent+0x84>
    5754:	8080030b 	ldhu	r2,12(r16)
    5758:	8c7fffc4 	addi	r17,r17,-1
    575c:	108000b0 	cmpltui	r2,r2,2
    5760:	1000071e 	bne	r2,zero,5780 <_fwalk_reent+0x78>
    5764:	8080038f 	ldh	r2,14(r16)
    5768:	800b883a 	mov	r5,r16
    576c:	a809883a 	mov	r4,r21
    5770:	10bfffe0 	cmpeqi	r2,r2,-1
    5774:	1000021e 	bne	r2,zero,5780 <_fwalk_reent+0x78>
    5778:	983ee83a 	callr	r19
    577c:	a0a8b03a 	or	r20,r20,r2
    5780:	88bfffd8 	cmpnei	r2,r17,-1
    5784:	84001a04 	addi	r16,r16,104
    5788:	103ff21e 	bne	r2,zero,5754 <_fwalk_reent+0x4c>
    578c:	94800017 	ldw	r18,0(r18)
    5790:	903fec1e 	bne	r18,zero,5744 <_fwalk_reent+0x3c>
    5794:	a005883a 	mov	r2,r20
    5798:	dfc00617 	ldw	ra,24(sp)
    579c:	dd400517 	ldw	r21,20(sp)
    57a0:	dd000417 	ldw	r20,16(sp)
    57a4:	dcc00317 	ldw	r19,12(sp)
    57a8:	dc800217 	ldw	r18,8(sp)
    57ac:	dc400117 	ldw	r17,4(sp)
    57b0:	dc000017 	ldw	r16,0(sp)
    57b4:	dec00704 	addi	sp,sp,28
    57b8:	f800283a 	ret

000057bc <__localeconv_l>:
    57bc:	f811883a 	mov	r8,ra
    57c0:	000e1ac0 	call	e1ac <_mcount>
    57c4:	403f883a 	mov	ra,r8
    57c8:	20803c04 	addi	r2,r4,240
    57cc:	f800283a 	ret

000057d0 <_localeconv_r>:
    57d0:	f811883a 	mov	r8,ra
    57d4:	000e1ac0 	call	e1ac <_mcount>
    57d8:	403f883a 	mov	ra,r8
    57dc:	00800074 	movhi	r2,1
    57e0:	10842604 	addi	r2,r2,4248
    57e4:	f800283a 	ret

000057e8 <localeconv>:
    57e8:	f811883a 	mov	r8,ra
    57ec:	000e1ac0 	call	e1ac <_mcount>
    57f0:	403f883a 	mov	ra,r8
    57f4:	00800074 	movhi	r2,1
    57f8:	10842604 	addi	r2,r2,4248
    57fc:	f800283a 	ret

00005800 <__smakebuf_r>:
    5800:	f811883a 	mov	r8,ra
    5804:	000e1ac0 	call	e1ac <_mcount>
    5808:	403f883a 	mov	ra,r8
    580c:	deffe804 	addi	sp,sp,-96
    5810:	dfc01715 	stw	ra,92(sp)
    5814:	dd001615 	stw	r20,88(sp)
    5818:	dcc01515 	stw	r19,84(sp)
    581c:	dc801415 	stw	r18,80(sp)
    5820:	dc401315 	stw	r17,76(sp)
    5824:	dc001215 	stw	r16,72(sp)
    5828:	2880030b 	ldhu	r2,12(r5)
    582c:	2821883a 	mov	r16,r5
    5830:	10c0008c 	andi	r3,r2,2
    5834:	18000d26 	beq	r3,zero,586c <__smakebuf_r+0x6c>
    5838:	288010c4 	addi	r2,r5,67
    583c:	28800015 	stw	r2,0(r5)
    5840:	28800415 	stw	r2,16(r5)
    5844:	00800044 	movi	r2,1
    5848:	28800515 	stw	r2,20(r5)
    584c:	dfc01717 	ldw	ra,92(sp)
    5850:	dd001617 	ldw	r20,88(sp)
    5854:	dcc01517 	ldw	r19,84(sp)
    5858:	dc801417 	ldw	r18,80(sp)
    585c:	dc401317 	ldw	r17,76(sp)
    5860:	dc001217 	ldw	r16,72(sp)
    5864:	dec01804 	addi	sp,sp,96
    5868:	f800283a 	ret
    586c:	2940038f 	ldh	r5,14(r5)
    5870:	2023883a 	mov	r17,r4
    5874:	28002816 	blt	r5,zero,5918 <__smakebuf_r+0x118>
    5878:	d80d883a 	mov	r6,sp
    587c:	0009ab00 	call	9ab0 <_fstat_r>
    5880:	10002416 	blt	r2,zero,5914 <__smakebuf_r+0x114>
    5884:	d8800117 	ldw	r2,4(sp)
    5888:	10bc000c 	andi	r2,r2,61440
    588c:	10880018 	cmpnei	r2,r2,8192
    5890:	1000461e 	bne	r2,zero,59ac <__smakebuf_r+0x1ac>
    5894:	8140038f 	ldh	r5,14(r16)
    5898:	8809883a 	mov	r4,r17
    589c:	0009b1c0 	call	9b1c <_isatty_r>
    58a0:	10003e26 	beq	r2,zero,599c <__smakebuf_r+0x19c>
    58a4:	8080030b 	ldhu	r2,12(r16)
    58a8:	80c010c4 	addi	r3,r16,67
    58ac:	80c00015 	stw	r3,0(r16)
    58b0:	10800054 	ori	r2,r2,1
    58b4:	8080030d 	sth	r2,12(r16)
    58b8:	00800044 	movi	r2,1
    58bc:	80c00415 	stw	r3,16(r16)
    58c0:	80800515 	stw	r2,20(r16)
    58c4:	04c00044 	movi	r19,1
    58c8:	05010004 	movi	r20,1024
    58cc:	04820004 	movi	r18,2048
    58d0:	a00b883a 	mov	r5,r20
    58d4:	8809883a 	mov	r4,r17
    58d8:	0005a600 	call	5a60 <_malloc_r>
    58dc:	10001726 	beq	r2,zero,593c <__smakebuf_r+0x13c>
    58e0:	80c0030b 	ldhu	r3,12(r16)
    58e4:	01000034 	movhi	r4,0
    58e8:	21125004 	addi	r4,r4,18752
    58ec:	89000f15 	stw	r4,60(r17)
    58f0:	18c02014 	ori	r3,r3,128
    58f4:	80c0030d 	sth	r3,12(r16)
    58f8:	80800015 	stw	r2,0(r16)
    58fc:	80800415 	stw	r2,16(r16)
    5900:	85000515 	stw	r20,20(r16)
    5904:	98001d1e 	bne	r19,zero,597c <__smakebuf_r+0x17c>
    5908:	90c6b03a 	or	r3,r18,r3
    590c:	80c0030d 	sth	r3,12(r16)
    5910:	003fce06 	br	584c <__smakebuf_r+0x4c>
    5914:	8080030b 	ldhu	r2,12(r16)
    5918:	1080200c 	andi	r2,r2,128
    591c:	0027883a 	mov	r19,zero
    5920:	10001326 	beq	r2,zero,5970 <__smakebuf_r+0x170>
    5924:	05001004 	movi	r20,64
    5928:	a00b883a 	mov	r5,r20
    592c:	8809883a 	mov	r4,r17
    5930:	0025883a 	mov	r18,zero
    5934:	0005a600 	call	5a60 <_malloc_r>
    5938:	103fe91e 	bne	r2,zero,58e0 <__smakebuf_r+0xe0>
    593c:	8080030b 	ldhu	r2,12(r16)
    5940:	10c0800c 	andi	r3,r2,512
    5944:	183fc11e 	bne	r3,zero,584c <__smakebuf_r+0x4c>
    5948:	00ffff04 	movi	r3,-4
    594c:	10c4703a 	and	r2,r2,r3
    5950:	10800094 	ori	r2,r2,2
    5954:	80c010c4 	addi	r3,r16,67
    5958:	8080030d 	sth	r2,12(r16)
    595c:	00800044 	movi	r2,1
    5960:	80c00015 	stw	r3,0(r16)
    5964:	80c00415 	stw	r3,16(r16)
    5968:	80800515 	stw	r2,20(r16)
    596c:	003fb706 	br	584c <__smakebuf_r+0x4c>
    5970:	05010004 	movi	r20,1024
    5974:	0025883a 	mov	r18,zero
    5978:	003fd506 	br	58d0 <__smakebuf_r+0xd0>
    597c:	8140038f 	ldh	r5,14(r16)
    5980:	8809883a 	mov	r4,r17
    5984:	0009b1c0 	call	9b1c <_isatty_r>
    5988:	80c0030b 	ldhu	r3,12(r16)
    598c:	103fde26 	beq	r2,zero,5908 <__smakebuf_r+0x108>
    5990:	18ffff0c 	andi	r3,r3,65532
    5994:	18c00054 	ori	r3,r3,1
    5998:	003fdb06 	br	5908 <__smakebuf_r+0x108>
    599c:	04c00044 	movi	r19,1
    59a0:	05010004 	movi	r20,1024
    59a4:	04820004 	movi	r18,2048
    59a8:	003fc906 	br	58d0 <__smakebuf_r+0xd0>
    59ac:	0027883a 	mov	r19,zero
    59b0:	05010004 	movi	r20,1024
    59b4:	04820004 	movi	r18,2048
    59b8:	003fc506 	br	58d0 <__smakebuf_r+0xd0>

000059bc <__swhatbuf_r>:
    59bc:	f811883a 	mov	r8,ra
    59c0:	000e1ac0 	call	e1ac <_mcount>
    59c4:	403f883a 	mov	ra,r8
    59c8:	deffea04 	addi	sp,sp,-88
    59cc:	dfc01515 	stw	ra,84(sp)
    59d0:	dc801415 	stw	r18,80(sp)
    59d4:	dc401315 	stw	r17,76(sp)
    59d8:	dc001215 	stw	r16,72(sp)
    59dc:	2821883a 	mov	r16,r5
    59e0:	2940038f 	ldh	r5,14(r5)
    59e4:	3023883a 	mov	r17,r6
    59e8:	3825883a 	mov	r18,r7
    59ec:	28001016 	blt	r5,zero,5a30 <__swhatbuf_r+0x74>
    59f0:	d80d883a 	mov	r6,sp
    59f4:	0009ab00 	call	9ab0 <_fstat_r>
    59f8:	10000d16 	blt	r2,zero,5a30 <__swhatbuf_r+0x74>
    59fc:	d8c00117 	ldw	r3,4(sp)
    5a00:	00820004 	movi	r2,2048
    5a04:	18fc000c 	andi	r3,r3,61440
    5a08:	18c80020 	cmpeqi	r3,r3,8192
    5a0c:	90c00015 	stw	r3,0(r18)
    5a10:	00c10004 	movi	r3,1024
    5a14:	88c00015 	stw	r3,0(r17)
    5a18:	dfc01517 	ldw	ra,84(sp)
    5a1c:	dc801417 	ldw	r18,80(sp)
    5a20:	dc401317 	ldw	r17,76(sp)
    5a24:	dc001217 	ldw	r16,72(sp)
    5a28:	dec01604 	addi	sp,sp,88
    5a2c:	f800283a 	ret
    5a30:	8080030b 	ldhu	r2,12(r16)
    5a34:	90000015 	stw	zero,0(r18)
    5a38:	1080200c 	andi	r2,r2,128
    5a3c:	10000426 	beq	r2,zero,5a50 <__swhatbuf_r+0x94>
    5a40:	00801004 	movi	r2,64
    5a44:	88800015 	stw	r2,0(r17)
    5a48:	0005883a 	mov	r2,zero
    5a4c:	003ff206 	br	5a18 <__swhatbuf_r+0x5c>
    5a50:	00810004 	movi	r2,1024
    5a54:	88800015 	stw	r2,0(r17)
    5a58:	0005883a 	mov	r2,zero
    5a5c:	003fee06 	br	5a18 <__swhatbuf_r+0x5c>

00005a60 <_malloc_r>:
    5a60:	f811883a 	mov	r8,ra
    5a64:	000e1ac0 	call	e1ac <_mcount>
    5a68:	403f883a 	mov	ra,r8
    5a6c:	defff604 	addi	sp,sp,-40
    5a70:	dfc00915 	stw	ra,36(sp)
    5a74:	df000815 	stw	fp,32(sp)
    5a78:	ddc00715 	stw	r23,28(sp)
    5a7c:	dd800615 	stw	r22,24(sp)
    5a80:	dd400515 	stw	r21,20(sp)
    5a84:	dd000415 	stw	r20,16(sp)
    5a88:	dcc00315 	stw	r19,12(sp)
    5a8c:	dc800215 	stw	r18,8(sp)
    5a90:	dc400115 	stw	r17,4(sp)
    5a94:	dc000015 	stw	r16,0(sp)
    5a98:	2c4002c4 	addi	r17,r5,11
    5a9c:	888005e8 	cmpgeui	r2,r17,23
    5aa0:	2025883a 	mov	r18,r4
    5aa4:	10001b1e 	bne	r2,zero,5b14 <_malloc_r+0xb4>
    5aa8:	29400468 	cmpgeui	r5,r5,17
    5aac:	2800821e 	bne	r5,zero,5cb8 <_malloc_r+0x258>
    5ab0:	000e18c0 	call	e18c <__malloc_lock>
    5ab4:	04400404 	movi	r17,16
    5ab8:	00800604 	movi	r2,24
    5abc:	01c00084 	movi	r7,2
    5ac0:	04c00074 	movhi	r19,1
    5ac4:	9cc2e804 	addi	r19,r19,2976
    5ac8:	9885883a 	add	r2,r19,r2
    5acc:	14000117 	ldw	r16,4(r2)
    5ad0:	10fffe04 	addi	r3,r2,-8
    5ad4:	80c08b26 	beq	r16,r3,5d04 <_malloc_r+0x2a4>
    5ad8:	80800117 	ldw	r2,4(r16)
    5adc:	81000317 	ldw	r4,12(r16)
    5ae0:	00ffff04 	movi	r3,-4
    5ae4:	10c4703a 	and	r2,r2,r3
    5ae8:	81400217 	ldw	r5,8(r16)
    5aec:	8085883a 	add	r2,r16,r2
    5af0:	10c00117 	ldw	r3,4(r2)
    5af4:	29000315 	stw	r4,12(r5)
    5af8:	21400215 	stw	r5,8(r4)
    5afc:	18c00054 	ori	r3,r3,1
    5b00:	10c00115 	stw	r3,4(r2)
    5b04:	9009883a 	mov	r4,r18
    5b08:	000e19c0 	call	e19c <__malloc_unlock>
    5b0c:	80800204 	addi	r2,r16,8
    5b10:	00006c06 	br	5cc4 <_malloc_r+0x264>
    5b14:	00bffe04 	movi	r2,-8
    5b18:	88a2703a 	and	r17,r17,r2
    5b1c:	88006616 	blt	r17,zero,5cb8 <_malloc_r+0x258>
    5b20:	89406536 	bltu	r17,r5,5cb8 <_malloc_r+0x258>
    5b24:	000e18c0 	call	e18c <__malloc_lock>
    5b28:	88807e28 	cmpgeui	r2,r17,504
    5b2c:	10012226 	beq	r2,zero,5fb8 <_malloc_r+0x558>
    5b30:	8804d27a 	srli	r2,r17,9
    5b34:	10006f26 	beq	r2,zero,5cf4 <_malloc_r+0x294>
    5b38:	10c00168 	cmpgeui	r3,r2,5
    5b3c:	1800fe1e 	bne	r3,zero,5f38 <_malloc_r+0x4d8>
    5b40:	8804d1ba 	srli	r2,r17,6
    5b44:	11c00e44 	addi	r7,r2,57
    5b48:	380890fa 	slli	r4,r7,3
    5b4c:	12000e04 	addi	r8,r2,56
    5b50:	04c00074 	movhi	r19,1
    5b54:	9cc2e804 	addi	r19,r19,2976
    5b58:	9909883a 	add	r4,r19,r4
    5b5c:	24000117 	ldw	r16,4(r4)
    5b60:	213ffe04 	addi	r4,r4,-8
    5b64:	24000b26 	beq	r4,r16,5b94 <_malloc_r+0x134>
    5b68:	01bfff04 	movi	r6,-4
    5b6c:	00000306 	br	5b7c <_malloc_r+0x11c>
    5b70:	1800d60e 	bge	r3,zero,5ecc <_malloc_r+0x46c>
    5b74:	84000317 	ldw	r16,12(r16)
    5b78:	24000626 	beq	r4,r16,5b94 <_malloc_r+0x134>
    5b7c:	80800117 	ldw	r2,4(r16)
    5b80:	1184703a 	and	r2,r2,r6
    5b84:	1447c83a 	sub	r3,r2,r17
    5b88:	19400408 	cmpgei	r5,r3,16
    5b8c:	283ff826 	beq	r5,zero,5b70 <_malloc_r+0x110>
    5b90:	400f883a 	mov	r7,r8
    5b94:	9c000417 	ldw	r16,16(r19)
    5b98:	02400074 	movhi	r9,1
    5b9c:	4a42ea04 	addi	r9,r9,2984
    5ba0:	82405f26 	beq	r16,r9,5d20 <_malloc_r+0x2c0>
    5ba4:	80c00117 	ldw	r3,4(r16)
    5ba8:	00bfff04 	movi	r2,-4
    5bac:	1884703a 	and	r2,r3,r2
    5bb0:	1447c83a 	sub	r3,r2,r17
    5bb4:	19000410 	cmplti	r4,r3,16
    5bb8:	20010a26 	beq	r4,zero,5fe4 <_malloc_r+0x584>
    5bbc:	9a400515 	stw	r9,20(r19)
    5bc0:	9a400415 	stw	r9,16(r19)
    5bc4:	1800ff0e 	bge	r3,zero,5fc4 <_malloc_r+0x564>
    5bc8:	10c08028 	cmpgeui	r3,r2,512
    5bcc:	1800c11e 	bne	r3,zero,5ed4 <_malloc_r+0x474>
    5bd0:	1006d0fa 	srli	r3,r2,3
    5bd4:	1008d17a 	srli	r4,r2,5
    5bd8:	00800044 	movi	r2,1
    5bdc:	18c00044 	addi	r3,r3,1
    5be0:	180690fa 	slli	r3,r3,3
    5be4:	99400117 	ldw	r5,4(r19)
    5be8:	1104983a 	sll	r2,r2,r4
    5bec:	98c7883a 	add	r3,r19,r3
    5bf0:	19000017 	ldw	r4,0(r3)
    5bf4:	1144b03a 	or	r2,r2,r5
    5bf8:	197ffe04 	addi	r5,r3,-8
    5bfc:	81400315 	stw	r5,12(r16)
    5c00:	81000215 	stw	r4,8(r16)
    5c04:	98800115 	stw	r2,4(r19)
    5c08:	1c000015 	stw	r16,0(r3)
    5c0c:	24000315 	stw	r16,12(r4)
    5c10:	3807d0ba 	srai	r3,r7,2
    5c14:	01000044 	movi	r4,1
    5c18:	20c8983a 	sll	r4,r4,r3
    5c1c:	11004536 	bltu	r2,r4,5d34 <_malloc_r+0x2d4>
    5c20:	2086703a 	and	r3,r4,r2
    5c24:	18000a1e 	bne	r3,zero,5c50 <_malloc_r+0x1f0>
    5c28:	00ffff04 	movi	r3,-4
    5c2c:	2109883a 	add	r4,r4,r4
    5c30:	38ce703a 	and	r7,r7,r3
    5c34:	2086703a 	and	r3,r4,r2
    5c38:	39c00104 	addi	r7,r7,4
    5c3c:	1800041e 	bne	r3,zero,5c50 <_malloc_r+0x1f0>
    5c40:	2109883a 	add	r4,r4,r4
    5c44:	2086703a 	and	r3,r4,r2
    5c48:	39c00104 	addi	r7,r7,4
    5c4c:	183ffc26 	beq	r3,zero,5c40 <_malloc_r+0x1e0>
    5c50:	02bfff04 	movi	r10,-4
    5c54:	381690fa 	slli	r11,r7,3
    5c58:	3819883a 	mov	r12,r7
    5c5c:	9ad7883a 	add	r11,r19,r11
    5c60:	5811883a 	mov	r8,r11
    5c64:	40800317 	ldw	r2,12(r8)
    5c68:	4080bc26 	beq	r8,r2,5f5c <_malloc_r+0x4fc>
    5c6c:	10c00117 	ldw	r3,4(r2)
    5c70:	1021883a 	mov	r16,r2
    5c74:	10800317 	ldw	r2,12(r2)
    5c78:	1a86703a 	and	r3,r3,r10
    5c7c:	1c4bc83a 	sub	r5,r3,r17
    5c80:	29800410 	cmplti	r6,r5,16
    5c84:	3000ba26 	beq	r6,zero,5f70 <_malloc_r+0x510>
    5c88:	283ff716 	blt	r5,zero,5c68 <_malloc_r+0x208>
    5c8c:	80c7883a 	add	r3,r16,r3
    5c90:	19400117 	ldw	r5,4(r3)
    5c94:	81800217 	ldw	r6,8(r16)
    5c98:	9009883a 	mov	r4,r18
    5c9c:	29400054 	ori	r5,r5,1
    5ca0:	19400115 	stw	r5,4(r3)
    5ca4:	30800315 	stw	r2,12(r6)
    5ca8:	11800215 	stw	r6,8(r2)
    5cac:	000e19c0 	call	e19c <__malloc_unlock>
    5cb0:	80800204 	addi	r2,r16,8
    5cb4:	00000306 	br	5cc4 <_malloc_r+0x264>
    5cb8:	00800304 	movi	r2,12
    5cbc:	90800015 	stw	r2,0(r18)
    5cc0:	0005883a 	mov	r2,zero
    5cc4:	dfc00917 	ldw	ra,36(sp)
    5cc8:	df000817 	ldw	fp,32(sp)
    5ccc:	ddc00717 	ldw	r23,28(sp)
    5cd0:	dd800617 	ldw	r22,24(sp)
    5cd4:	dd400517 	ldw	r21,20(sp)
    5cd8:	dd000417 	ldw	r20,16(sp)
    5cdc:	dcc00317 	ldw	r19,12(sp)
    5ce0:	dc800217 	ldw	r18,8(sp)
    5ce4:	dc400117 	ldw	r17,4(sp)
    5ce8:	dc000017 	ldw	r16,0(sp)
    5cec:	dec00a04 	addi	sp,sp,40
    5cf0:	f800283a 	ret
    5cf4:	01008004 	movi	r4,512
    5cf8:	01c01004 	movi	r7,64
    5cfc:	02000fc4 	movi	r8,63
    5d00:	003f9306 	br	5b50 <_malloc_r+0xf0>
    5d04:	14000317 	ldw	r16,12(r2)
    5d08:	39c00084 	addi	r7,r7,2
    5d0c:	143f721e 	bne	r2,r16,5ad8 <_malloc_r+0x78>
    5d10:	9c000417 	ldw	r16,16(r19)
    5d14:	02400074 	movhi	r9,1
    5d18:	4a42ea04 	addi	r9,r9,2984
    5d1c:	827fa11e 	bne	r16,r9,5ba4 <_malloc_r+0x144>
    5d20:	3807d0ba 	srai	r3,r7,2
    5d24:	01000044 	movi	r4,1
    5d28:	98800117 	ldw	r2,4(r19)
    5d2c:	20c8983a 	sll	r4,r4,r3
    5d30:	113fbb2e 	bgeu	r2,r4,5c20 <_malloc_r+0x1c0>
    5d34:	9c000217 	ldw	r16,8(r19)
    5d38:	00bfff04 	movi	r2,-4
    5d3c:	85400117 	ldw	r21,4(r16)
    5d40:	a8ac703a 	and	r22,r21,r2
    5d44:	b4400336 	bltu	r22,r17,5d54 <_malloc_r+0x2f4>
    5d48:	b445c83a 	sub	r2,r22,r17
    5d4c:	10c00408 	cmpgei	r3,r2,16
    5d50:	1800541e 	bne	r3,zero,5ea4 <_malloc_r+0x444>
    5d54:	00800074 	movhi	r2,1
    5d58:	1088d217 	ldw	r2,9032(r2)
    5d5c:	00c00074 	movhi	r3,1
    5d60:	1d48e217 	ldw	r21,9096(r3)
    5d64:	10bfffd8 	cmpnei	r2,r2,-1
    5d68:	85b9883a 	add	fp,r16,r22
    5d6c:	8d6b883a 	add	r21,r17,r21
    5d70:	1000d626 	beq	r2,zero,60cc <_malloc_r+0x66c>
    5d74:	ad4403c4 	addi	r21,r21,4111
    5d78:	00bc0004 	movi	r2,-4096
    5d7c:	a8aa703a 	and	r21,r21,r2
    5d80:	a80b883a 	mov	r5,r21
    5d84:	9009883a 	mov	r4,r18
    5d88:	0007cfc0 	call	7cfc <_sbrk_r>
    5d8c:	102f883a 	mov	r23,r2
    5d90:	10bfffd8 	cmpnei	r2,r2,-1
    5d94:	1000a826 	beq	r2,zero,6038 <_malloc_r+0x5d8>
    5d98:	bf00a636 	bltu	r23,fp,6034 <_malloc_r+0x5d4>
    5d9c:	00800074 	movhi	r2,1
    5da0:	1508ef17 	ldw	r20,9148(r2)
    5da4:	ad29883a 	add	r20,r21,r20
    5da8:	1508ef15 	stw	r20,9148(r2)
    5dac:	a007883a 	mov	r3,r20
    5db0:	e5c0ec26 	beq	fp,r23,6164 <_malloc_r+0x704>
    5db4:	00800074 	movhi	r2,1
    5db8:	1088d217 	ldw	r2,9032(r2)
    5dbc:	10bfffd8 	cmpnei	r2,r2,-1
    5dc0:	1000ef26 	beq	r2,zero,6180 <_malloc_r+0x720>
    5dc4:	bf39c83a 	sub	fp,r23,fp
    5dc8:	e0c7883a 	add	r3,fp,r3
    5dcc:	00800074 	movhi	r2,1
    5dd0:	10c8ef15 	stw	r3,9148(r2)
    5dd4:	bf0001cc 	andi	fp,r23,7
    5dd8:	e000c526 	beq	fp,zero,60f0 <_malloc_r+0x690>
    5ddc:	bf2fc83a 	sub	r23,r23,fp
    5de0:	bdc00204 	addi	r23,r23,8
    5de4:	05040204 	movi	r20,4104
    5de8:	a729c83a 	sub	r20,r20,fp
    5dec:	bd6b883a 	add	r21,r23,r21
    5df0:	a569c83a 	sub	r20,r20,r21
    5df4:	a503ffcc 	andi	r20,r20,4095
    5df8:	a00b883a 	mov	r5,r20
    5dfc:	9009883a 	mov	r4,r18
    5e00:	0007cfc0 	call	7cfc <_sbrk_r>
    5e04:	10ffffe0 	cmpeqi	r3,r2,-1
    5e08:	1800f31e 	bne	r3,zero,61d8 <_malloc_r+0x778>
    5e0c:	15c5c83a 	sub	r2,r2,r23
    5e10:	152b883a 	add	r21,r2,r20
    5e14:	00800074 	movhi	r2,1
    5e18:	1148ef17 	ldw	r5,9148(r2)
    5e1c:	9dc00215 	stw	r23,8(r19)
    5e20:	ad400054 	ori	r21,r21,1
    5e24:	a169883a 	add	r20,r20,r5
    5e28:	1508ef15 	stw	r20,9148(r2)
    5e2c:	bd400115 	stw	r21,4(r23)
    5e30:	84c0d626 	beq	r16,r19,618c <_malloc_r+0x72c>
    5e34:	b0800428 	cmpgeui	r2,r22,16
    5e38:	1000d626 	beq	r2,zero,6194 <_malloc_r+0x734>
    5e3c:	80c00117 	ldw	r3,4(r16)
    5e40:	013ffe04 	movi	r4,-8
    5e44:	b0bffd04 	addi	r2,r22,-12
    5e48:	1104703a 	and	r2,r2,r4
    5e4c:	18c0004c 	andi	r3,r3,1
    5e50:	1886b03a 	or	r3,r3,r2
    5e54:	80c00115 	stw	r3,4(r16)
    5e58:	01000144 	movi	r4,5
    5e5c:	8087883a 	add	r3,r16,r2
    5e60:	19000115 	stw	r4,4(r3)
    5e64:	19000215 	stw	r4,8(r3)
    5e68:	10800428 	cmpgeui	r2,r2,16
    5e6c:	1000df1e 	bne	r2,zero,61ec <_malloc_r+0x78c>
    5e70:	bd400117 	ldw	r21,4(r23)
    5e74:	b821883a 	mov	r16,r23
    5e78:	00800074 	movhi	r2,1
    5e7c:	1088e117 	ldw	r2,9092(r2)
    5e80:	1500022e 	bgeu	r2,r20,5e8c <_malloc_r+0x42c>
    5e84:	00800074 	movhi	r2,1
    5e88:	1508e115 	stw	r20,9092(r2)
    5e8c:	00800074 	movhi	r2,1
    5e90:	1088e017 	ldw	r2,9088(r2)
    5e94:	15006a2e 	bgeu	r2,r20,6040 <_malloc_r+0x5e0>
    5e98:	00800074 	movhi	r2,1
    5e9c:	1508e015 	stw	r20,9088(r2)
    5ea0:	00006706 	br	6040 <_malloc_r+0x5e0>
    5ea4:	88c00054 	ori	r3,r17,1
    5ea8:	80c00115 	stw	r3,4(r16)
    5eac:	8463883a 	add	r17,r16,r17
    5eb0:	10800054 	ori	r2,r2,1
    5eb4:	9c400215 	stw	r17,8(r19)
    5eb8:	88800115 	stw	r2,4(r17)
    5ebc:	9009883a 	mov	r4,r18
    5ec0:	000e19c0 	call	e19c <__malloc_unlock>
    5ec4:	80800204 	addi	r2,r16,8
    5ec8:	003f7e06 	br	5cc4 <_malloc_r+0x264>
    5ecc:	81000317 	ldw	r4,12(r16)
    5ed0:	003f0506 	br	5ae8 <_malloc_r+0x88>
    5ed4:	1006d27a 	srli	r3,r2,9
    5ed8:	19000168 	cmpgeui	r4,r3,5
    5edc:	20005026 	beq	r4,zero,6020 <_malloc_r+0x5c0>
    5ee0:	19000568 	cmpgeui	r4,r3,21
    5ee4:	20008c1e 	bne	r4,zero,6118 <_malloc_r+0x6b8>
    5ee8:	19401704 	addi	r5,r3,92
    5eec:	280a90fa 	slli	r5,r5,3
    5ef0:	190016c4 	addi	r4,r3,91
    5ef4:	994b883a 	add	r5,r19,r5
    5ef8:	28c00017 	ldw	r3,0(r5)
    5efc:	297ffe04 	addi	r5,r5,-8
    5f00:	28c07426 	beq	r5,r3,60d4 <_malloc_r+0x674>
    5f04:	01bfff04 	movi	r6,-4
    5f08:	19000117 	ldw	r4,4(r3)
    5f0c:	2188703a 	and	r4,r4,r6
    5f10:	1100022e 	bgeu	r2,r4,5f1c <_malloc_r+0x4bc>
    5f14:	18c00217 	ldw	r3,8(r3)
    5f18:	28fffb1e 	bne	r5,r3,5f08 <_malloc_r+0x4a8>
    5f1c:	19400317 	ldw	r5,12(r3)
    5f20:	98800117 	ldw	r2,4(r19)
    5f24:	81400315 	stw	r5,12(r16)
    5f28:	80c00215 	stw	r3,8(r16)
    5f2c:	2c000215 	stw	r16,8(r5)
    5f30:	1c000315 	stw	r16,12(r3)
    5f34:	003f3606 	br	5c10 <_malloc_r+0x1b0>
    5f38:	10c00568 	cmpgeui	r3,r2,21
    5f3c:	18004a26 	beq	r3,zero,6068 <_malloc_r+0x608>
    5f40:	10c01568 	cmpgeui	r3,r2,85
    5f44:	18007b1e 	bne	r3,zero,6134 <_malloc_r+0x6d4>
    5f48:	8804d33a 	srli	r2,r17,12
    5f4c:	11c01bc4 	addi	r7,r2,111
    5f50:	380890fa 	slli	r4,r7,3
    5f54:	12001b84 	addi	r8,r2,110
    5f58:	003efd06 	br	5b50 <_malloc_r+0xf0>
    5f5c:	63000044 	addi	r12,r12,1
    5f60:	608000cc 	andi	r2,r12,3
    5f64:	42000204 	addi	r8,r8,8
    5f68:	103f3e1e 	bne	r2,zero,5c64 <_malloc_r+0x204>
    5f6c:	00004506 	br	6084 <_malloc_r+0x624>
    5f70:	81000217 	ldw	r4,8(r16)
    5f74:	89800054 	ori	r6,r17,1
    5f78:	81800115 	stw	r6,4(r16)
    5f7c:	20800315 	stw	r2,12(r4)
    5f80:	11000215 	stw	r4,8(r2)
    5f84:	8463883a 	add	r17,r16,r17
    5f88:	9c400515 	stw	r17,20(r19)
    5f8c:	9c400415 	stw	r17,16(r19)
    5f90:	28800054 	ori	r2,r5,1
    5f94:	88800115 	stw	r2,4(r17)
    5f98:	8a400315 	stw	r9,12(r17)
    5f9c:	8a400215 	stw	r9,8(r17)
    5fa0:	80c7883a 	add	r3,r16,r3
    5fa4:	19400015 	stw	r5,0(r3)
    5fa8:	9009883a 	mov	r4,r18
    5fac:	000e19c0 	call	e19c <__malloc_unlock>
    5fb0:	80800204 	addi	r2,r16,8
    5fb4:	003f4306 	br	5cc4 <_malloc_r+0x264>
    5fb8:	880ed0fa 	srli	r7,r17,3
    5fbc:	88800204 	addi	r2,r17,8
    5fc0:	003ebf06 	br	5ac0 <_malloc_r+0x60>
    5fc4:	8085883a 	add	r2,r16,r2
    5fc8:	10c00117 	ldw	r3,4(r2)
    5fcc:	9009883a 	mov	r4,r18
    5fd0:	18c00054 	ori	r3,r3,1
    5fd4:	10c00115 	stw	r3,4(r2)
    5fd8:	000e19c0 	call	e19c <__malloc_unlock>
    5fdc:	80800204 	addi	r2,r16,8
    5fe0:	003f3806 	br	5cc4 <_malloc_r+0x264>
    5fe4:	89000054 	ori	r4,r17,1
    5fe8:	81000115 	stw	r4,4(r16)
    5fec:	8463883a 	add	r17,r16,r17
    5ff0:	9c400515 	stw	r17,20(r19)
    5ff4:	9c400415 	stw	r17,16(r19)
    5ff8:	19000054 	ori	r4,r3,1
    5ffc:	89000115 	stw	r4,4(r17)
    6000:	8085883a 	add	r2,r16,r2
    6004:	8a400315 	stw	r9,12(r17)
    6008:	8a400215 	stw	r9,8(r17)
    600c:	10c00015 	stw	r3,0(r2)
    6010:	9009883a 	mov	r4,r18
    6014:	000e19c0 	call	e19c <__malloc_unlock>
    6018:	80800204 	addi	r2,r16,8
    601c:	003f2906 	br	5cc4 <_malloc_r+0x264>
    6020:	1006d1ba 	srli	r3,r2,6
    6024:	19400e44 	addi	r5,r3,57
    6028:	280a90fa 	slli	r5,r5,3
    602c:	19000e04 	addi	r4,r3,56
    6030:	003fb006 	br	5ef4 <_malloc_r+0x494>
    6034:	84c04626 	beq	r16,r19,6150 <_malloc_r+0x6f0>
    6038:	9c000217 	ldw	r16,8(r19)
    603c:	85400117 	ldw	r21,4(r16)
    6040:	00bfff04 	movi	r2,-4
    6044:	a8aa703a 	and	r21,r21,r2
    6048:	ac45c83a 	sub	r2,r21,r17
    604c:	ac400236 	bltu	r21,r17,6058 <_malloc_r+0x5f8>
    6050:	10c00408 	cmpgei	r3,r2,16
    6054:	183f931e 	bne	r3,zero,5ea4 <_malloc_r+0x444>
    6058:	9009883a 	mov	r4,r18
    605c:	000e19c0 	call	e19c <__malloc_unlock>
    6060:	0005883a 	mov	r2,zero
    6064:	003f1706 	br	5cc4 <_malloc_r+0x264>
    6068:	11c01704 	addi	r7,r2,92
    606c:	380890fa 	slli	r4,r7,3
    6070:	120016c4 	addi	r8,r2,91
    6074:	003eb606 	br	5b50 <_malloc_r+0xf0>
    6078:	58800217 	ldw	r2,8(r11)
    607c:	39ffffc4 	addi	r7,r7,-1
    6080:	12c0701e 	bne	r2,r11,6244 <_malloc_r+0x7e4>
    6084:	388000cc 	andi	r2,r7,3
    6088:	5afffe04 	addi	r11,r11,-8
    608c:	103ffa1e 	bne	r2,zero,6078 <_malloc_r+0x618>
    6090:	98c00117 	ldw	r3,4(r19)
    6094:	0104303a 	nor	r2,zero,r4
    6098:	10c4703a 	and	r2,r2,r3
    609c:	98800115 	stw	r2,4(r19)
    60a0:	2109883a 	add	r4,r4,r4
    60a4:	113f2336 	bltu	r2,r4,5d34 <_malloc_r+0x2d4>
    60a8:	203f2226 	beq	r4,zero,5d34 <_malloc_r+0x2d4>
    60ac:	2086703a 	and	r3,r4,r2
    60b0:	1800041e 	bne	r3,zero,60c4 <_malloc_r+0x664>
    60b4:	2109883a 	add	r4,r4,r4
    60b8:	2086703a 	and	r3,r4,r2
    60bc:	63000104 	addi	r12,r12,4
    60c0:	183ffc26 	beq	r3,zero,60b4 <_malloc_r+0x654>
    60c4:	600f883a 	mov	r7,r12
    60c8:	003ee206 	br	5c54 <_malloc_r+0x1f4>
    60cc:	ad400404 	addi	r21,r21,16
    60d0:	003f2b06 	br	5d80 <_malloc_r+0x320>
    60d4:	2009d0ba 	srai	r4,r4,2
    60d8:	00800044 	movi	r2,1
    60dc:	99800117 	ldw	r6,4(r19)
    60e0:	1104983a 	sll	r2,r2,r4
    60e4:	1184b03a 	or	r2,r2,r6
    60e8:	98800115 	stw	r2,4(r19)
    60ec:	003f8d06 	br	5f24 <_malloc_r+0x4c4>
    60f0:	bd69883a 	add	r20,r23,r21
    60f4:	0529c83a 	sub	r20,zero,r20
    60f8:	a503ffcc 	andi	r20,r20,4095
    60fc:	a00b883a 	mov	r5,r20
    6100:	9009883a 	mov	r4,r18
    6104:	0007cfc0 	call	7cfc <_sbrk_r>
    6108:	10ffffe0 	cmpeqi	r3,r2,-1
    610c:	183f3f26 	beq	r3,zero,5e0c <_malloc_r+0x3ac>
    6110:	0029883a 	mov	r20,zero
    6114:	003f3f06 	br	5e14 <_malloc_r+0x3b4>
    6118:	19001568 	cmpgeui	r4,r3,85
    611c:	2000201e 	bne	r4,zero,61a0 <_malloc_r+0x740>
    6120:	1006d33a 	srli	r3,r2,12
    6124:	19401bc4 	addi	r5,r3,111
    6128:	280a90fa 	slli	r5,r5,3
    612c:	19001b84 	addi	r4,r3,110
    6130:	003f7006 	br	5ef4 <_malloc_r+0x494>
    6134:	10c05568 	cmpgeui	r3,r2,341
    6138:	1800201e 	bne	r3,zero,61bc <_malloc_r+0x75c>
    613c:	8804d3fa 	srli	r2,r17,15
    6140:	11c01e04 	addi	r7,r2,120
    6144:	380890fa 	slli	r4,r7,3
    6148:	12001dc4 	addi	r8,r2,119
    614c:	003e8006 	br	5b50 <_malloc_r+0xf0>
    6150:	00800074 	movhi	r2,1
    6154:	10c8ef17 	ldw	r3,9148(r2)
    6158:	a8c7883a 	add	r3,r21,r3
    615c:	10c8ef15 	stw	r3,9148(r2)
    6160:	003f1406 	br	5db4 <_malloc_r+0x354>
    6164:	e083ffcc 	andi	r2,fp,4095
    6168:	103f121e 	bne	r2,zero,5db4 <_malloc_r+0x354>
    616c:	9c000217 	ldw	r16,8(r19)
    6170:	b56b883a 	add	r21,r22,r21
    6174:	ad400054 	ori	r21,r21,1
    6178:	85400115 	stw	r21,4(r16)
    617c:	003f3e06 	br	5e78 <_malloc_r+0x418>
    6180:	00800074 	movhi	r2,1
    6184:	15c8d215 	stw	r23,9032(r2)
    6188:	003f1206 	br	5dd4 <_malloc_r+0x374>
    618c:	b821883a 	mov	r16,r23
    6190:	003f3906 	br	5e78 <_malloc_r+0x418>
    6194:	00800044 	movi	r2,1
    6198:	b8800115 	stw	r2,4(r23)
    619c:	003fae06 	br	6058 <_malloc_r+0x5f8>
    61a0:	19005568 	cmpgeui	r4,r3,341
    61a4:	2000191e 	bne	r4,zero,620c <_malloc_r+0x7ac>
    61a8:	1006d3fa 	srli	r3,r2,15
    61ac:	19401e04 	addi	r5,r3,120
    61b0:	280a90fa 	slli	r5,r5,3
    61b4:	19001dc4 	addi	r4,r3,119
    61b8:	003f4e06 	br	5ef4 <_malloc_r+0x494>
    61bc:	10815568 	cmpgeui	r2,r2,1365
    61c0:	1000191e 	bne	r2,zero,6228 <_malloc_r+0x7c8>
    61c4:	8804d4ba 	srli	r2,r17,18
    61c8:	11c01f44 	addi	r7,r2,125
    61cc:	380890fa 	slli	r4,r7,3
    61d0:	12001f04 	addi	r8,r2,124
    61d4:	003e5e06 	br	5b50 <_malloc_r+0xf0>
    61d8:	e73ffe04 	addi	fp,fp,-8
    61dc:	af2b883a 	add	r21,r21,fp
    61e0:	adebc83a 	sub	r21,r21,r23
    61e4:	0029883a 	mov	r20,zero
    61e8:	003f0a06 	br	5e14 <_malloc_r+0x3b4>
    61ec:	81400204 	addi	r5,r16,8
    61f0:	9009883a 	mov	r4,r18
    61f4:	0004e980 	call	4e98 <_free_r>
    61f8:	9c000217 	ldw	r16,8(r19)
    61fc:	00800074 	movhi	r2,1
    6200:	1508ef17 	ldw	r20,9148(r2)
    6204:	85400117 	ldw	r21,4(r16)
    6208:	003f1b06 	br	5e78 <_malloc_r+0x418>
    620c:	18c15568 	cmpgeui	r3,r3,1365
    6210:	1800091e 	bne	r3,zero,6238 <_malloc_r+0x7d8>
    6214:	1006d4ba 	srli	r3,r2,18
    6218:	19401f44 	addi	r5,r3,125
    621c:	280a90fa 	slli	r5,r5,3
    6220:	19001f04 	addi	r4,r3,124
    6224:	003f3306 	br	5ef4 <_malloc_r+0x494>
    6228:	0100fe04 	movi	r4,1016
    622c:	01c01fc4 	movi	r7,127
    6230:	02001f84 	movi	r8,126
    6234:	003e4606 	br	5b50 <_malloc_r+0xf0>
    6238:	0140fe04 	movi	r5,1016
    623c:	01001f84 	movi	r4,126
    6240:	003f2c06 	br	5ef4 <_malloc_r+0x494>
    6244:	98800117 	ldw	r2,4(r19)
    6248:	003f9506 	br	60a0 <_malloc_r+0x640>

0000624c <memchr>:
    624c:	f811883a 	mov	r8,ra
    6250:	000e1ac0 	call	e1ac <_mcount>
    6254:	403f883a 	mov	ra,r8
    6258:	208000cc 	andi	r2,r4,3
    625c:	280f883a 	mov	r7,r5
    6260:	10000e26 	beq	r2,zero,629c <memchr+0x50>
    6264:	30bfffc4 	addi	r2,r6,-1
    6268:	30001726 	beq	r6,zero,62c8 <memchr+0x7c>
    626c:	29803fcc 	andi	r6,r5,255
    6270:	00000606 	br	628c <memchr+0x40>
    6274:	21000044 	addi	r4,r4,1
    6278:	20c000cc 	andi	r3,r4,3
    627c:	18000826 	beq	r3,zero,62a0 <memchr+0x54>
    6280:	10bfffc4 	addi	r2,r2,-1
    6284:	10ffffe0 	cmpeqi	r3,r2,-1
    6288:	18000f1e 	bne	r3,zero,62c8 <memchr+0x7c>
    628c:	20c00003 	ldbu	r3,0(r4)
    6290:	19bff81e 	bne	r3,r6,6274 <memchr+0x28>
    6294:	2005883a 	mov	r2,r4
    6298:	f800283a 	ret
    629c:	3005883a 	mov	r2,r6
    62a0:	10c00128 	cmpgeui	r3,r2,4
    62a4:	18000a1e 	bne	r3,zero,62d0 <memchr+0x84>
    62a8:	103ffb26 	beq	r2,zero,6298 <memchr+0x4c>
    62ac:	2087883a 	add	r3,r4,r2
    62b0:	39803fcc 	andi	r6,r7,255
    62b4:	2005883a 	mov	r2,r4
    62b8:	11000003 	ldbu	r4,0(r2)
    62bc:	21bff626 	beq	r4,r6,6298 <memchr+0x4c>
    62c0:	10800044 	addi	r2,r2,1
    62c4:	18bffc1e 	bne	r3,r2,62b8 <memchr+0x6c>
    62c8:	0005883a 	mov	r2,zero
    62cc:	f800283a 	ret
    62d0:	29403fcc 	andi	r5,r5,255
    62d4:	280c923a 	slli	r6,r5,8
    62d8:	027fbff4 	movhi	r9,65279
    62dc:	02202074 	movhi	r8,32897
    62e0:	314ab03a 	or	r5,r6,r5
    62e4:	280c943a 	slli	r6,r5,16
    62e8:	4a7fbfc4 	addi	r9,r9,-257
    62ec:	42202004 	addi	r8,r8,-32640
    62f0:	314cb03a 	or	r6,r6,r5
    62f4:	20c00017 	ldw	r3,0(r4)
    62f8:	30c6f03a 	xor	r3,r6,r3
    62fc:	1a4b883a 	add	r5,r3,r9
    6300:	00c6303a 	nor	r3,zero,r3
    6304:	28c6703a 	and	r3,r5,r3
    6308:	1a06703a 	and	r3,r3,r8
    630c:	183fe71e 	bne	r3,zero,62ac <memchr+0x60>
    6310:	10bfff04 	addi	r2,r2,-4
    6314:	10c00128 	cmpgeui	r3,r2,4
    6318:	21000104 	addi	r4,r4,4
    631c:	183ff51e 	bne	r3,zero,62f4 <memchr+0xa8>
    6320:	003fe106 	br	62a8 <memchr+0x5c>

00006324 <memmove>:
    6324:	f811883a 	mov	r8,ra
    6328:	000e1ac0 	call	e1ac <_mcount>
    632c:	403f883a 	mov	ra,r8
    6330:	2005883a 	mov	r2,r4
    6334:	29000a2e 	bgeu	r5,r4,6360 <memmove+0x3c>
    6338:	2989883a 	add	r4,r5,r6
    633c:	1100082e 	bgeu	r2,r4,6360 <memmove+0x3c>
    6340:	1187883a 	add	r3,r2,r6
    6344:	30000526 	beq	r6,zero,635c <memmove+0x38>
    6348:	217fffc3 	ldbu	r5,-1(r4)
    634c:	18ffffc4 	addi	r3,r3,-1
    6350:	213fffc4 	addi	r4,r4,-1
    6354:	19400005 	stb	r5,0(r3)
    6358:	10fffb1e 	bne	r2,r3,6348 <memmove+0x24>
    635c:	f800283a 	ret
    6360:	30c00430 	cmpltui	r3,r6,16
    6364:	18000b26 	beq	r3,zero,6394 <memmove+0x70>
    6368:	1007883a 	mov	r3,r2
    636c:	31ffffc4 	addi	r7,r6,-1
    6370:	303ffa26 	beq	r6,zero,635c <memmove+0x38>
    6374:	39c00044 	addi	r7,r7,1
    6378:	29cf883a 	add	r7,r5,r7
    637c:	29800003 	ldbu	r6,0(r5)
    6380:	29400044 	addi	r5,r5,1
    6384:	18c00044 	addi	r3,r3,1
    6388:	19bfffc5 	stb	r6,-1(r3)
    638c:	29fffb1e 	bne	r5,r7,637c <memmove+0x58>
    6390:	f800283a 	ret
    6394:	2886b03a 	or	r3,r5,r2
    6398:	18c000cc 	andi	r3,r3,3
    639c:	1800281e 	bne	r3,zero,6440 <memmove+0x11c>
    63a0:	327ffc04 	addi	r9,r6,-16
    63a4:	4812d13a 	srli	r9,r9,4
    63a8:	280f883a 	mov	r7,r5
    63ac:	1007883a 	mov	r3,r2
    63b0:	4a400044 	addi	r9,r9,1
    63b4:	4812913a 	slli	r9,r9,4
    63b8:	1251883a 	add	r8,r2,r9
    63bc:	39000017 	ldw	r4,0(r7)
    63c0:	39c00404 	addi	r7,r7,16
    63c4:	18c00404 	addi	r3,r3,16
    63c8:	193ffc15 	stw	r4,-16(r3)
    63cc:	393ffd17 	ldw	r4,-12(r7)
    63d0:	193ffd15 	stw	r4,-12(r3)
    63d4:	393ffe17 	ldw	r4,-8(r7)
    63d8:	193ffe15 	stw	r4,-8(r3)
    63dc:	393fff17 	ldw	r4,-4(r7)
    63e0:	193fff15 	stw	r4,-4(r3)
    63e4:	40fff51e 	bne	r8,r3,63bc <memmove+0x98>
    63e8:	3100030c 	andi	r4,r6,12
    63ec:	2a4b883a 	add	r5,r5,r9
    63f0:	320003cc 	andi	r8,r6,15
    63f4:	20001526 	beq	r4,zero,644c <memmove+0x128>
    63f8:	2813883a 	mov	r9,r5
    63fc:	180f883a 	mov	r7,r3
    6400:	4a800017 	ldw	r10,0(r9)
    6404:	39c00104 	addi	r7,r7,4
    6408:	41c9c83a 	sub	r4,r8,r7
    640c:	1909883a 	add	r4,r3,r4
    6410:	21000128 	cmpgeui	r4,r4,4
    6414:	3abfff15 	stw	r10,-4(r7)
    6418:	4a400104 	addi	r9,r9,4
    641c:	203ff81e 	bne	r4,zero,6400 <memmove+0xdc>
    6420:	413fff04 	addi	r4,r8,-4
    6424:	2008d0ba 	srli	r4,r4,2
    6428:	318000cc 	andi	r6,r6,3
    642c:	21000044 	addi	r4,r4,1
    6430:	200890ba 	slli	r4,r4,2
    6434:	1907883a 	add	r3,r3,r4
    6438:	290b883a 	add	r5,r5,r4
    643c:	003fcb06 	br	636c <memmove+0x48>
    6440:	31ffffc4 	addi	r7,r6,-1
    6444:	1007883a 	mov	r3,r2
    6448:	003fca06 	br	6374 <memmove+0x50>
    644c:	400d883a 	mov	r6,r8
    6450:	003fc606 	br	636c <memmove+0x48>

00006454 <memset>:
    6454:	f811883a 	mov	r8,ra
    6458:	000e1ac0 	call	e1ac <_mcount>
    645c:	403f883a 	mov	ra,r8
    6460:	20c000cc 	andi	r3,r4,3
    6464:	2005883a 	mov	r2,r4
    6468:	18003626 	beq	r3,zero,6544 <memset+0xf0>
    646c:	31ffffc4 	addi	r7,r6,-1
    6470:	30003326 	beq	r6,zero,6540 <memset+0xec>
    6474:	2811883a 	mov	r8,r5
    6478:	2007883a 	mov	r3,r4
    647c:	00000306 	br	648c <memset+0x38>
    6480:	39ffffc4 	addi	r7,r7,-1
    6484:	39bfffe0 	cmpeqi	r6,r7,-1
    6488:	30002d1e 	bne	r6,zero,6540 <memset+0xec>
    648c:	18c00044 	addi	r3,r3,1
    6490:	198000cc 	andi	r6,r3,3
    6494:	1a3fffc5 	stb	r8,-1(r3)
    6498:	303ff91e 	bne	r6,zero,6480 <memset+0x2c>
    649c:	39000130 	cmpltui	r4,r7,4
    64a0:	2000221e 	bne	r4,zero,652c <memset+0xd8>
    64a4:	29003fcc 	andi	r4,r5,255
    64a8:	200c923a 	slli	r6,r4,8
    64ac:	3a000430 	cmpltui	r8,r7,16
    64b0:	3108b03a 	or	r4,r6,r4
    64b4:	200c943a 	slli	r6,r4,16
    64b8:	310cb03a 	or	r6,r6,r4
    64bc:	40000e1e 	bne	r8,zero,64f8 <memset+0xa4>
    64c0:	393ffc04 	addi	r4,r7,-16
    64c4:	2008d13a 	srli	r4,r4,4
    64c8:	21000044 	addi	r4,r4,1
    64cc:	2008913a 	slli	r4,r4,4
    64d0:	1909883a 	add	r4,r3,r4
    64d4:	19800015 	stw	r6,0(r3)
    64d8:	19800115 	stw	r6,4(r3)
    64dc:	19800215 	stw	r6,8(r3)
    64e0:	19800315 	stw	r6,12(r3)
    64e4:	18c00404 	addi	r3,r3,16
    64e8:	20fffa1e 	bne	r4,r3,64d4 <memset+0x80>
    64ec:	3900030c 	andi	r4,r7,12
    64f0:	39c003cc 	andi	r7,r7,15
    64f4:	20000d26 	beq	r4,zero,652c <memset+0xd8>
    64f8:	1811883a 	mov	r8,r3
    64fc:	42000104 	addi	r8,r8,4
    6500:	3a09c83a 	sub	r4,r7,r8
    6504:	1909883a 	add	r4,r3,r4
    6508:	21000128 	cmpgeui	r4,r4,4
    650c:	41bfff15 	stw	r6,-4(r8)
    6510:	203ffa1e 	bne	r4,zero,64fc <memset+0xa8>
    6514:	393fff04 	addi	r4,r7,-4
    6518:	2008d0ba 	srli	r4,r4,2
    651c:	39c000cc 	andi	r7,r7,3
    6520:	21000044 	addi	r4,r4,1
    6524:	200890ba 	slli	r4,r4,2
    6528:	1907883a 	add	r3,r3,r4
    652c:	38000426 	beq	r7,zero,6540 <memset+0xec>
    6530:	19cf883a 	add	r7,r3,r7
    6534:	18c00044 	addi	r3,r3,1
    6538:	197fffc5 	stb	r5,-1(r3)
    653c:	38fffd1e 	bne	r7,r3,6534 <memset+0xe0>
    6540:	f800283a 	ret
    6544:	2007883a 	mov	r3,r4
    6548:	300f883a 	mov	r7,r6
    654c:	003fd306 	br	649c <memset+0x48>

00006550 <_Balloc>:
    6550:	f811883a 	mov	r8,ra
    6554:	000e1ac0 	call	e1ac <_mcount>
    6558:	403f883a 	mov	ra,r8
    655c:	defffc04 	addi	sp,sp,-16
    6560:	dfc00315 	stw	ra,12(sp)
    6564:	dc800215 	stw	r18,8(sp)
    6568:	dc400115 	stw	r17,4(sp)
    656c:	dc000015 	stw	r16,0(sp)
    6570:	20801317 	ldw	r2,76(r4)
    6574:	2021883a 	mov	r16,r4
    6578:	2823883a 	mov	r17,r5
    657c:	10000e26 	beq	r2,zero,65b8 <_Balloc+0x68>
    6580:	880690ba 	slli	r3,r17,2
    6584:	10c7883a 	add	r3,r2,r3
    6588:	18800017 	ldw	r2,0(r3)
    658c:	10001126 	beq	r2,zero,65d4 <_Balloc+0x84>
    6590:	11000017 	ldw	r4,0(r2)
    6594:	19000015 	stw	r4,0(r3)
    6598:	10000415 	stw	zero,16(r2)
    659c:	10000315 	stw	zero,12(r2)
    65a0:	dfc00317 	ldw	ra,12(sp)
    65a4:	dc800217 	ldw	r18,8(sp)
    65a8:	dc400117 	ldw	r17,4(sp)
    65ac:	dc000017 	ldw	r16,0(sp)
    65b0:	dec00404 	addi	sp,sp,16
    65b4:	f800283a 	ret
    65b8:	01800844 	movi	r6,33
    65bc:	01400104 	movi	r5,4
    65c0:	00095980 	call	9598 <_calloc_r>
    65c4:	80801315 	stw	r2,76(r16)
    65c8:	103fed1e 	bne	r2,zero,6580 <_Balloc+0x30>
    65cc:	0005883a 	mov	r2,zero
    65d0:	003ff306 	br	65a0 <_Balloc+0x50>
    65d4:	04800044 	movi	r18,1
    65d8:	9464983a 	sll	r18,r18,r17
    65dc:	01400044 	movi	r5,1
    65e0:	8009883a 	mov	r4,r16
    65e4:	91800144 	addi	r6,r18,5
    65e8:	300c90ba 	slli	r6,r6,2
    65ec:	00095980 	call	9598 <_calloc_r>
    65f0:	103ff626 	beq	r2,zero,65cc <_Balloc+0x7c>
    65f4:	14400115 	stw	r17,4(r2)
    65f8:	14800215 	stw	r18,8(r2)
    65fc:	003fe606 	br	6598 <_Balloc+0x48>

00006600 <_Bfree>:
    6600:	f811883a 	mov	r8,ra
    6604:	000e1ac0 	call	e1ac <_mcount>
    6608:	403f883a 	mov	ra,r8
    660c:	28000726 	beq	r5,zero,662c <_Bfree+0x2c>
    6610:	28c00117 	ldw	r3,4(r5)
    6614:	20801317 	ldw	r2,76(r4)
    6618:	180690ba 	slli	r3,r3,2
    661c:	10c5883a 	add	r2,r2,r3
    6620:	10c00017 	ldw	r3,0(r2)
    6624:	28c00015 	stw	r3,0(r5)
    6628:	11400015 	stw	r5,0(r2)
    662c:	f800283a 	ret

00006630 <__multadd>:
    6630:	f811883a 	mov	r8,ra
    6634:	000e1ac0 	call	e1ac <_mcount>
    6638:	403f883a 	mov	ra,r8
    663c:	defffa04 	addi	sp,sp,-24
    6640:	dfc00515 	stw	ra,20(sp)
    6644:	dd000415 	stw	r20,16(sp)
    6648:	dcc00315 	stw	r19,12(sp)
    664c:	dc800215 	stw	r18,8(sp)
    6650:	dc400115 	stw	r17,4(sp)
    6654:	dc000015 	stw	r16,0(sp)
    6658:	2c400417 	ldw	r17,16(r5)
    665c:	2825883a 	mov	r18,r5
    6660:	2027883a 	mov	r19,r4
    6664:	3821883a 	mov	r16,r7
    6668:	2a400504 	addi	r9,r5,20
    666c:	0015883a 	mov	r10,zero
    6670:	48c00017 	ldw	r3,0(r9)
    6674:	4a400104 	addi	r9,r9,4
    6678:	52800044 	addi	r10,r10,1
    667c:	1a3fffcc 	andi	r8,r3,65535
    6680:	4191383a 	mul	r8,r8,r6
    6684:	180ed43a 	srli	r7,r3,16
    6688:	4407883a 	add	r3,r8,r16
    668c:	1810d43a 	srli	r8,r3,16
    6690:	398f383a 	mul	r7,r7,r6
    6694:	18ffffcc 	andi	r3,r3,65535
    6698:	3a0f883a 	add	r7,r7,r8
    669c:	3810943a 	slli	r8,r7,16
    66a0:	3820d43a 	srli	r16,r7,16
    66a4:	40c7883a 	add	r3,r8,r3
    66a8:	48ffff15 	stw	r3,-4(r9)
    66ac:	547ff016 	blt	r10,r17,6670 <__multadd+0x40>
    66b0:	80000826 	beq	r16,zero,66d4 <__multadd+0xa4>
    66b4:	90800217 	ldw	r2,8(r18)
    66b8:	88800f0e 	bge	r17,r2,66f8 <__multadd+0xc8>
    66bc:	88800144 	addi	r2,r17,5
    66c0:	100490ba 	slli	r2,r2,2
    66c4:	8c400044 	addi	r17,r17,1
    66c8:	9085883a 	add	r2,r18,r2
    66cc:	14000015 	stw	r16,0(r2)
    66d0:	94400415 	stw	r17,16(r18)
    66d4:	9005883a 	mov	r2,r18
    66d8:	dfc00517 	ldw	ra,20(sp)
    66dc:	dd000417 	ldw	r20,16(sp)
    66e0:	dcc00317 	ldw	r19,12(sp)
    66e4:	dc800217 	ldw	r18,8(sp)
    66e8:	dc400117 	ldw	r17,4(sp)
    66ec:	dc000017 	ldw	r16,0(sp)
    66f0:	dec00604 	addi	sp,sp,24
    66f4:	f800283a 	ret
    66f8:	91400117 	ldw	r5,4(r18)
    66fc:	9809883a 	mov	r4,r19
    6700:	29400044 	addi	r5,r5,1
    6704:	00065500 	call	6550 <_Balloc>
    6708:	1029883a 	mov	r20,r2
    670c:	10001226 	beq	r2,zero,6758 <__multadd+0x128>
    6710:	91800417 	ldw	r6,16(r18)
    6714:	91400304 	addi	r5,r18,12
    6718:	11000304 	addi	r4,r2,12
    671c:	31800084 	addi	r6,r6,2
    6720:	300c90ba 	slli	r6,r6,2
    6724:	00004ec0 	call	4ec <memcpy>
    6728:	90000926 	beq	r18,zero,6750 <__multadd+0x120>
    672c:	90c00117 	ldw	r3,4(r18)
    6730:	98801317 	ldw	r2,76(r19)
    6734:	180690ba 	slli	r3,r3,2
    6738:	10c5883a 	add	r2,r2,r3
    673c:	10c00017 	ldw	r3,0(r2)
    6740:	90c00015 	stw	r3,0(r18)
    6744:	14800015 	stw	r18,0(r2)
    6748:	a025883a 	mov	r18,r20
    674c:	003fdb06 	br	66bc <__multadd+0x8c>
    6750:	a025883a 	mov	r18,r20
    6754:	003fd906 	br	66bc <__multadd+0x8c>
    6758:	01c00074 	movhi	r7,1
    675c:	01000074 	movhi	r4,1
    6760:	39c02d04 	addi	r7,r7,180
    6764:	000d883a 	mov	r6,zero
    6768:	01402d44 	movi	r5,181
    676c:	21004204 	addi	r4,r4,264
    6770:	00095080 	call	9508 <__assert_func>

00006774 <__s2b>:
    6774:	f811883a 	mov	r8,ra
    6778:	000e1ac0 	call	e1ac <_mcount>
    677c:	403f883a 	mov	ra,r8
    6780:	defff904 	addi	sp,sp,-28
    6784:	dfc00615 	stw	ra,24(sp)
    6788:	dd400515 	stw	r21,20(sp)
    678c:	dd000415 	stw	r20,16(sp)
    6790:	dcc00315 	stw	r19,12(sp)
    6794:	dc800215 	stw	r18,8(sp)
    6798:	dc400115 	stw	r17,4(sp)
    679c:	dc000015 	stw	r16,0(sp)
    67a0:	2025883a 	mov	r18,r4
    67a4:	2821883a 	mov	r16,r5
    67a8:	39000204 	addi	r4,r7,8
    67ac:	01400244 	movi	r5,9
    67b0:	3823883a 	mov	r17,r7
    67b4:	3027883a 	mov	r19,r6
    67b8:	000b24c0 	call	b24c <__divsi3>
    67bc:	88c00290 	cmplti	r3,r17,10
    67c0:	1800341e 	bne	r3,zero,6894 <__s2b+0x120>
    67c4:	00c00044 	movi	r3,1
    67c8:	000b883a 	mov	r5,zero
    67cc:	18c7883a 	add	r3,r3,r3
    67d0:	29400044 	addi	r5,r5,1
    67d4:	18bffd16 	blt	r3,r2,67cc <__s2b+0x58>
    67d8:	9009883a 	mov	r4,r18
    67dc:	00065500 	call	6550 <_Balloc>
    67e0:	100b883a 	mov	r5,r2
    67e4:	10002d26 	beq	r2,zero,689c <__s2b+0x128>
    67e8:	d8800717 	ldw	r2,28(sp)
    67ec:	28800515 	stw	r2,20(r5)
    67f0:	00800044 	movi	r2,1
    67f4:	28800415 	stw	r2,16(r5)
    67f8:	98800290 	cmplti	r2,r19,10
    67fc:	1000221e 	bne	r2,zero,6888 <__s2b+0x114>
    6800:	85400244 	addi	r21,r16,9
    6804:	a829883a 	mov	r20,r21
    6808:	84e1883a 	add	r16,r16,r19
    680c:	a1c00007 	ldb	r7,0(r20)
    6810:	01800284 	movi	r6,10
    6814:	9009883a 	mov	r4,r18
    6818:	39fff404 	addi	r7,r7,-48
    681c:	00066300 	call	6630 <__multadd>
    6820:	a5000044 	addi	r20,r20,1
    6824:	100b883a 	mov	r5,r2
    6828:	a43ff81e 	bne	r20,r16,680c <__s2b+0x98>
    682c:	9c3ffe04 	addi	r16,r19,-8
    6830:	ac21883a 	add	r16,r21,r16
    6834:	9c400a0e 	bge	r19,r17,6860 <__s2b+0xec>
    6838:	8ce3c83a 	sub	r17,r17,r19
    683c:	8463883a 	add	r17,r16,r17
    6840:	81c00007 	ldb	r7,0(r16)
    6844:	01800284 	movi	r6,10
    6848:	9009883a 	mov	r4,r18
    684c:	39fff404 	addi	r7,r7,-48
    6850:	00066300 	call	6630 <__multadd>
    6854:	84000044 	addi	r16,r16,1
    6858:	100b883a 	mov	r5,r2
    685c:	8c3ff81e 	bne	r17,r16,6840 <__s2b+0xcc>
    6860:	2805883a 	mov	r2,r5
    6864:	dfc00617 	ldw	ra,24(sp)
    6868:	dd400517 	ldw	r21,20(sp)
    686c:	dd000417 	ldw	r20,16(sp)
    6870:	dcc00317 	ldw	r19,12(sp)
    6874:	dc800217 	ldw	r18,8(sp)
    6878:	dc400117 	ldw	r17,4(sp)
    687c:	dc000017 	ldw	r16,0(sp)
    6880:	dec00704 	addi	sp,sp,28
    6884:	f800283a 	ret
    6888:	84000284 	addi	r16,r16,10
    688c:	04c00244 	movi	r19,9
    6890:	003fe806 	br	6834 <__s2b+0xc0>
    6894:	000b883a 	mov	r5,zero
    6898:	003fcf06 	br	67d8 <__s2b+0x64>
    689c:	01c00074 	movhi	r7,1
    68a0:	01000074 	movhi	r4,1
    68a4:	39c02d04 	addi	r7,r7,180
    68a8:	000d883a 	mov	r6,zero
    68ac:	01403384 	movi	r5,206
    68b0:	21004204 	addi	r4,r4,264
    68b4:	00095080 	call	9508 <__assert_func>

000068b8 <__hi0bits>:
    68b8:	f811883a 	mov	r8,ra
    68bc:	000e1ac0 	call	e1ac <_mcount>
    68c0:	403f883a 	mov	ra,r8
    68c4:	20bfffec 	andhi	r2,r4,65535
    68c8:	1000131e 	bne	r2,zero,6918 <__hi0bits+0x60>
    68cc:	2008943a 	slli	r4,r4,16
    68d0:	00800404 	movi	r2,16
    68d4:	20ffc02c 	andhi	r3,r4,65280
    68d8:	1800021e 	bne	r3,zero,68e4 <__hi0bits+0x2c>
    68dc:	2008923a 	slli	r4,r4,8
    68e0:	10800204 	addi	r2,r2,8
    68e4:	20fc002c 	andhi	r3,r4,61440
    68e8:	1800021e 	bne	r3,zero,68f4 <__hi0bits+0x3c>
    68ec:	2008913a 	slli	r4,r4,4
    68f0:	10800104 	addi	r2,r2,4
    68f4:	20f0002c 	andhi	r3,r4,49152
    68f8:	1800021e 	bne	r3,zero,6904 <__hi0bits+0x4c>
    68fc:	200890ba 	slli	r4,r4,2
    6900:	10800084 	addi	r2,r2,2
    6904:	20000316 	blt	r4,zero,6914 <__hi0bits+0x5c>
    6908:	2110002c 	andhi	r4,r4,16384
    690c:	10800044 	addi	r2,r2,1
    6910:	20000326 	beq	r4,zero,6920 <__hi0bits+0x68>
    6914:	f800283a 	ret
    6918:	0005883a 	mov	r2,zero
    691c:	003fed06 	br	68d4 <__hi0bits+0x1c>
    6920:	00800804 	movi	r2,32
    6924:	f800283a 	ret

00006928 <__lo0bits>:
    6928:	f811883a 	mov	r8,ra
    692c:	000e1ac0 	call	e1ac <_mcount>
    6930:	403f883a 	mov	ra,r8
    6934:	20c00017 	ldw	r3,0(r4)
    6938:	188001cc 	andi	r2,r3,7
    693c:	10000826 	beq	r2,zero,6960 <__lo0bits+0x38>
    6940:	1880004c 	andi	r2,r3,1
    6944:	10001f1e 	bne	r2,zero,69c4 <__lo0bits+0x9c>
    6948:	1880008c 	andi	r2,r3,2
    694c:	10002126 	beq	r2,zero,69d4 <__lo0bits+0xac>
    6950:	1806d07a 	srli	r3,r3,1
    6954:	00800044 	movi	r2,1
    6958:	20c00015 	stw	r3,0(r4)
    695c:	f800283a 	ret
    6960:	18bfffcc 	andi	r2,r3,65535
    6964:	10001426 	beq	r2,zero,69b8 <__lo0bits+0x90>
    6968:	0005883a 	mov	r2,zero
    696c:	19403fcc 	andi	r5,r3,255
    6970:	2800021e 	bne	r5,zero,697c <__lo0bits+0x54>
    6974:	1806d23a 	srli	r3,r3,8
    6978:	10800204 	addi	r2,r2,8
    697c:	194003cc 	andi	r5,r3,15
    6980:	2800021e 	bne	r5,zero,698c <__lo0bits+0x64>
    6984:	1806d13a 	srli	r3,r3,4
    6988:	10800104 	addi	r2,r2,4
    698c:	194000cc 	andi	r5,r3,3
    6990:	2800021e 	bne	r5,zero,699c <__lo0bits+0x74>
    6994:	1806d0ba 	srli	r3,r3,2
    6998:	10800084 	addi	r2,r2,2
    699c:	1940004c 	andi	r5,r3,1
    69a0:	2800031e 	bne	r5,zero,69b0 <__lo0bits+0x88>
    69a4:	1806d07a 	srli	r3,r3,1
    69a8:	10800044 	addi	r2,r2,1
    69ac:	18000726 	beq	r3,zero,69cc <__lo0bits+0xa4>
    69b0:	20c00015 	stw	r3,0(r4)
    69b4:	f800283a 	ret
    69b8:	1806d43a 	srli	r3,r3,16
    69bc:	00800404 	movi	r2,16
    69c0:	003fea06 	br	696c <__lo0bits+0x44>
    69c4:	0005883a 	mov	r2,zero
    69c8:	f800283a 	ret
    69cc:	00800804 	movi	r2,32
    69d0:	003fe206 	br	695c <__lo0bits+0x34>
    69d4:	1806d0ba 	srli	r3,r3,2
    69d8:	00800084 	movi	r2,2
    69dc:	20c00015 	stw	r3,0(r4)
    69e0:	f800283a 	ret

000069e4 <__i2b>:
    69e4:	f811883a 	mov	r8,ra
    69e8:	000e1ac0 	call	e1ac <_mcount>
    69ec:	403f883a 	mov	ra,r8
    69f0:	defffd04 	addi	sp,sp,-12
    69f4:	dfc00215 	stw	ra,8(sp)
    69f8:	dc400115 	stw	r17,4(sp)
    69fc:	dc000015 	stw	r16,0(sp)
    6a00:	20c01317 	ldw	r3,76(r4)
    6a04:	2021883a 	mov	r16,r4
    6a08:	2823883a 	mov	r17,r5
    6a0c:	18000d26 	beq	r3,zero,6a44 <__i2b+0x60>
    6a10:	18800117 	ldw	r2,4(r3)
    6a14:	10001826 	beq	r2,zero,6a78 <__i2b+0x94>
    6a18:	11000017 	ldw	r4,0(r2)
    6a1c:	19000115 	stw	r4,4(r3)
    6a20:	00c00044 	movi	r3,1
    6a24:	10000315 	stw	zero,12(r2)
    6a28:	14400515 	stw	r17,20(r2)
    6a2c:	10c00415 	stw	r3,16(r2)
    6a30:	dfc00217 	ldw	ra,8(sp)
    6a34:	dc400117 	ldw	r17,4(sp)
    6a38:	dc000017 	ldw	r16,0(sp)
    6a3c:	dec00304 	addi	sp,sp,12
    6a40:	f800283a 	ret
    6a44:	01800844 	movi	r6,33
    6a48:	01400104 	movi	r5,4
    6a4c:	00095980 	call	9598 <_calloc_r>
    6a50:	80801315 	stw	r2,76(r16)
    6a54:	1007883a 	mov	r3,r2
    6a58:	103fed1e 	bne	r2,zero,6a10 <__i2b+0x2c>
    6a5c:	01c00074 	movhi	r7,1
    6a60:	01000074 	movhi	r4,1
    6a64:	39c02d04 	addi	r7,r7,180
    6a68:	000d883a 	mov	r6,zero
    6a6c:	01405004 	movi	r5,320
    6a70:	21004204 	addi	r4,r4,264
    6a74:	00095080 	call	9508 <__assert_func>
    6a78:	01800704 	movi	r6,28
    6a7c:	01400044 	movi	r5,1
    6a80:	8009883a 	mov	r4,r16
    6a84:	00095980 	call	9598 <_calloc_r>
    6a88:	103ff426 	beq	r2,zero,6a5c <__i2b+0x78>
    6a8c:	00c00044 	movi	r3,1
    6a90:	10c00115 	stw	r3,4(r2)
    6a94:	00c00084 	movi	r3,2
    6a98:	10c00215 	stw	r3,8(r2)
    6a9c:	003fe006 	br	6a20 <__i2b+0x3c>

00006aa0 <__multiply>:
    6aa0:	f811883a 	mov	r8,ra
    6aa4:	000e1ac0 	call	e1ac <_mcount>
    6aa8:	403f883a 	mov	ra,r8
    6aac:	defff804 	addi	sp,sp,-32
    6ab0:	dfc00715 	stw	ra,28(sp)
    6ab4:	dd800615 	stw	r22,24(sp)
    6ab8:	dd400515 	stw	r21,20(sp)
    6abc:	dd000415 	stw	r20,16(sp)
    6ac0:	dcc00315 	stw	r19,12(sp)
    6ac4:	dc800215 	stw	r18,8(sp)
    6ac8:	dc400115 	stw	r17,4(sp)
    6acc:	dc000015 	stw	r16,0(sp)
    6ad0:	2d000417 	ldw	r20,16(r5)
    6ad4:	35400417 	ldw	r21,16(r6)
    6ad8:	282d883a 	mov	r22,r5
    6adc:	3027883a 	mov	r19,r6
    6ae0:	a5400516 	blt	r20,r21,6af8 <__multiply+0x58>
    6ae4:	a807883a 	mov	r3,r21
    6ae8:	2827883a 	mov	r19,r5
    6aec:	a02b883a 	mov	r21,r20
    6af0:	302d883a 	mov	r22,r6
    6af4:	1829883a 	mov	r20,r3
    6af8:	98800217 	ldw	r2,8(r19)
    6afc:	ad23883a 	add	r17,r21,r20
    6b00:	99400117 	ldw	r5,4(r19)
    6b04:	1440010e 	bge	r2,r17,6b0c <__multiply+0x6c>
    6b08:	29400044 	addi	r5,r5,1
    6b0c:	00065500 	call	6550 <_Balloc>
    6b10:	1025883a 	mov	r18,r2
    6b14:	10007326 	beq	r2,zero,6ce4 <__multiply+0x244>
    6b18:	882090ba 	slli	r16,r17,2
    6b1c:	11000504 	addi	r4,r2,20
    6b20:	2421883a 	add	r16,r4,r16
    6b24:	2400082e 	bgeu	r4,r16,6b48 <__multiply+0xa8>
    6b28:	808dc83a 	sub	r6,r16,r2
    6b2c:	31bffac4 	addi	r6,r6,-21
    6b30:	300cd0ba 	srli	r6,r6,2
    6b34:	000b883a 	mov	r5,zero
    6b38:	31800044 	addi	r6,r6,1
    6b3c:	300c90ba 	slli	r6,r6,2
    6b40:	00064540 	call	6454 <memset>
    6b44:	1009883a 	mov	r4,r2
    6b48:	a01290ba 	slli	r9,r20,2
    6b4c:	a80e90ba 	slli	r7,r21,2
    6b50:	b0800504 	addi	r2,r22,20
    6b54:	9a800504 	addi	r10,r19,20
    6b58:	1253883a 	add	r9,r2,r9
    6b5c:	51cf883a 	add	r7,r10,r7
    6b60:	12404b2e 	bgeu	r2,r9,6c90 <__multiply+0x1f0>
    6b64:	98c00544 	addi	r3,r19,21
    6b68:	38c05c36 	bltu	r7,r3,6cdc <__multiply+0x23c>
    6b6c:	3cd1c83a 	sub	r8,r7,r19
    6b70:	423ffac4 	addi	r8,r8,-21
    6b74:	4010d0ba 	srli	r8,r8,2
    6b78:	42000044 	addi	r8,r8,1
    6b7c:	401090ba 	slli	r8,r8,2
    6b80:	00000506 	br	6b98 <__multiply+0xf8>
    6b84:	6018d43a 	srli	r12,r12,16
    6b88:	6000231e 	bne	r12,zero,6c18 <__multiply+0x178>
    6b8c:	10800104 	addi	r2,r2,4
    6b90:	21000104 	addi	r4,r4,4
    6b94:	12403e2e 	bgeu	r2,r9,6c90 <__multiply+0x1f0>
    6b98:	13000017 	ldw	r12,0(r2)
    6b9c:	63bfffcc 	andi	r14,r12,65535
    6ba0:	703ff826 	beq	r14,zero,6b84 <__multiply+0xe4>
    6ba4:	201b883a 	mov	r13,r4
    6ba8:	5019883a 	mov	r12,r10
    6bac:	001f883a 	mov	r15,zero
    6bb0:	61400017 	ldw	r5,0(r12)
    6bb4:	6ac00017 	ldw	r11,0(r13)
    6bb8:	6b400104 	addi	r13,r13,4
    6bbc:	29bfffcc 	andi	r6,r5,65535
    6bc0:	338d383a 	mul	r6,r6,r14
    6bc4:	2806d43a 	srli	r3,r5,16
    6bc8:	597fffcc 	andi	r5,r11,65535
    6bcc:	314d883a 	add	r6,r6,r5
    6bd0:	33cd883a 	add	r6,r6,r15
    6bd4:	1b87383a 	mul	r3,r3,r14
    6bd8:	5816d43a 	srli	r11,r11,16
    6bdc:	300ad43a 	srli	r5,r6,16
    6be0:	31bfffcc 	andi	r6,r6,65535
    6be4:	1ac7883a 	add	r3,r3,r11
    6be8:	1947883a 	add	r3,r3,r5
    6bec:	180a943a 	slli	r5,r3,16
    6bf0:	63000104 	addi	r12,r12,4
    6bf4:	181ed43a 	srli	r15,r3,16
    6bf8:	298cb03a 	or	r6,r5,r6
    6bfc:	69bfff15 	stw	r6,-4(r13)
    6c00:	61ffeb36 	bltu	r12,r7,6bb0 <__multiply+0x110>
    6c04:	2207883a 	add	r3,r4,r8
    6c08:	1bc00015 	stw	r15,0(r3)
    6c0c:	13000017 	ldw	r12,0(r2)
    6c10:	6018d43a 	srli	r12,r12,16
    6c14:	603fdd26 	beq	r12,zero,6b8c <__multiply+0xec>
    6c18:	20c00017 	ldw	r3,0(r4)
    6c1c:	201b883a 	mov	r13,r4
    6c20:	5017883a 	mov	r11,r10
    6c24:	181d883a 	mov	r14,r3
    6c28:	001f883a 	mov	r15,zero
    6c2c:	5980000b 	ldhu	r6,0(r11)
    6c30:	703ed43a 	srli	ra,r14,16
    6c34:	197fffcc 	andi	r5,r3,65535
    6c38:	3307383a 	mul	r3,r6,r12
    6c3c:	5ac00104 	addi	r11,r11,4
    6c40:	6b800117 	ldw	r14,4(r13)
    6c44:	1fc7883a 	add	r3,r3,ra
    6c48:	1bc7883a 	add	r3,r3,r15
    6c4c:	181e943a 	slli	r15,r3,16
    6c50:	180cd43a 	srli	r6,r3,16
    6c54:	77ffffcc 	andi	ra,r14,65535
    6c58:	794ab03a 	or	r5,r15,r5
    6c5c:	69400015 	stw	r5,0(r13)
    6c60:	58ffff8b 	ldhu	r3,-2(r11)
    6c64:	6b400104 	addi	r13,r13,4
    6c68:	1b07383a 	mul	r3,r3,r12
    6c6c:	1fc7883a 	add	r3,r3,ra
    6c70:	1987883a 	add	r3,r3,r6
    6c74:	181ed43a 	srli	r15,r3,16
    6c78:	59ffec36 	bltu	r11,r7,6c2c <__multiply+0x18c>
    6c7c:	220b883a 	add	r5,r4,r8
    6c80:	28c00015 	stw	r3,0(r5)
    6c84:	10800104 	addi	r2,r2,4
    6c88:	21000104 	addi	r4,r4,4
    6c8c:	127fc236 	bltu	r2,r9,6b98 <__multiply+0xf8>
    6c90:	04400316 	blt	zero,r17,6ca0 <__multiply+0x200>
    6c94:	00000506 	br	6cac <__multiply+0x20c>
    6c98:	8c7fffc4 	addi	r17,r17,-1
    6c9c:	88000326 	beq	r17,zero,6cac <__multiply+0x20c>
    6ca0:	80bfff17 	ldw	r2,-4(r16)
    6ca4:	843fff04 	addi	r16,r16,-4
    6ca8:	103ffb26 	beq	r2,zero,6c98 <__multiply+0x1f8>
    6cac:	9005883a 	mov	r2,r18
    6cb0:	94400415 	stw	r17,16(r18)
    6cb4:	dfc00717 	ldw	ra,28(sp)
    6cb8:	dd800617 	ldw	r22,24(sp)
    6cbc:	dd400517 	ldw	r21,20(sp)
    6cc0:	dd000417 	ldw	r20,16(sp)
    6cc4:	dcc00317 	ldw	r19,12(sp)
    6cc8:	dc800217 	ldw	r18,8(sp)
    6ccc:	dc400117 	ldw	r17,4(sp)
    6cd0:	dc000017 	ldw	r16,0(sp)
    6cd4:	dec00804 	addi	sp,sp,32
    6cd8:	f800283a 	ret
    6cdc:	02000104 	movi	r8,4
    6ce0:	003fad06 	br	6b98 <__multiply+0xf8>
    6ce4:	01c00074 	movhi	r7,1
    6ce8:	01000074 	movhi	r4,1
    6cec:	39c02d04 	addi	r7,r7,180
    6cf0:	000d883a 	mov	r6,zero
    6cf4:	01405744 	movi	r5,349
    6cf8:	21004204 	addi	r4,r4,264
    6cfc:	00095080 	call	9508 <__assert_func>

00006d00 <__pow5mult>:
    6d00:	f811883a 	mov	r8,ra
    6d04:	000e1ac0 	call	e1ac <_mcount>
    6d08:	403f883a 	mov	ra,r8
    6d0c:	defffb04 	addi	sp,sp,-20
    6d10:	dfc00415 	stw	ra,16(sp)
    6d14:	dcc00315 	stw	r19,12(sp)
    6d18:	dc800215 	stw	r18,8(sp)
    6d1c:	dc400115 	stw	r17,4(sp)
    6d20:	dc000015 	stw	r16,0(sp)
    6d24:	308000cc 	andi	r2,r6,3
    6d28:	3021883a 	mov	r16,r6
    6d2c:	2027883a 	mov	r19,r4
    6d30:	10002d1e 	bne	r2,zero,6de8 <__pow5mult+0xe8>
    6d34:	2825883a 	mov	r18,r5
    6d38:	8021d0ba 	srai	r16,r16,2
    6d3c:	80001926 	beq	r16,zero,6da4 <__pow5mult+0xa4>
    6d40:	9c401217 	ldw	r17,72(r19)
    6d44:	8800061e 	bne	r17,zero,6d60 <__pow5mult+0x60>
    6d48:	00002f06 	br	6e08 <__pow5mult+0x108>
    6d4c:	8021d07a 	srai	r16,r16,1
    6d50:	80001426 	beq	r16,zero,6da4 <__pow5mult+0xa4>
    6d54:	88800017 	ldw	r2,0(r17)
    6d58:	10001a26 	beq	r2,zero,6dc4 <__pow5mult+0xc4>
    6d5c:	1023883a 	mov	r17,r2
    6d60:	8080004c 	andi	r2,r16,1
    6d64:	103ff926 	beq	r2,zero,6d4c <__pow5mult+0x4c>
    6d68:	880d883a 	mov	r6,r17
    6d6c:	900b883a 	mov	r5,r18
    6d70:	9809883a 	mov	r4,r19
    6d74:	0006aa00 	call	6aa0 <__multiply>
    6d78:	90001926 	beq	r18,zero,6de0 <__pow5mult+0xe0>
    6d7c:	91000117 	ldw	r4,4(r18)
    6d80:	98c01317 	ldw	r3,76(r19)
    6d84:	8021d07a 	srai	r16,r16,1
    6d88:	200890ba 	slli	r4,r4,2
    6d8c:	1907883a 	add	r3,r3,r4
    6d90:	19000017 	ldw	r4,0(r3)
    6d94:	91000015 	stw	r4,0(r18)
    6d98:	1c800015 	stw	r18,0(r3)
    6d9c:	1025883a 	mov	r18,r2
    6da0:	803fec1e 	bne	r16,zero,6d54 <__pow5mult+0x54>
    6da4:	9005883a 	mov	r2,r18
    6da8:	dfc00417 	ldw	ra,16(sp)
    6dac:	dcc00317 	ldw	r19,12(sp)
    6db0:	dc800217 	ldw	r18,8(sp)
    6db4:	dc400117 	ldw	r17,4(sp)
    6db8:	dc000017 	ldw	r16,0(sp)
    6dbc:	dec00504 	addi	sp,sp,20
    6dc0:	f800283a 	ret
    6dc4:	880d883a 	mov	r6,r17
    6dc8:	880b883a 	mov	r5,r17
    6dcc:	9809883a 	mov	r4,r19
    6dd0:	0006aa00 	call	6aa0 <__multiply>
    6dd4:	88800015 	stw	r2,0(r17)
    6dd8:	10000015 	stw	zero,0(r2)
    6ddc:	003fdf06 	br	6d5c <__pow5mult+0x5c>
    6de0:	1025883a 	mov	r18,r2
    6de4:	003fd906 	br	6d4c <__pow5mult+0x4c>
    6de8:	100490ba 	slli	r2,r2,2
    6dec:	00c00074 	movhi	r3,1
    6df0:	000f883a 	mov	r7,zero
    6df4:	10c7883a 	add	r3,r2,r3
    6df8:	19805117 	ldw	r6,324(r3)
    6dfc:	00066300 	call	6630 <__multadd>
    6e00:	1025883a 	mov	r18,r2
    6e04:	003fcc06 	br	6d38 <__pow5mult+0x38>
    6e08:	01400044 	movi	r5,1
    6e0c:	9809883a 	mov	r4,r19
    6e10:	00065500 	call	6550 <_Balloc>
    6e14:	1023883a 	mov	r17,r2
    6e18:	10000726 	beq	r2,zero,6e38 <__pow5mult+0x138>
    6e1c:	00809c44 	movi	r2,625
    6e20:	88800515 	stw	r2,20(r17)
    6e24:	00800044 	movi	r2,1
    6e28:	88800415 	stw	r2,16(r17)
    6e2c:	9c401215 	stw	r17,72(r19)
    6e30:	88000015 	stw	zero,0(r17)
    6e34:	003fca06 	br	6d60 <__pow5mult+0x60>
    6e38:	01c00074 	movhi	r7,1
    6e3c:	01000074 	movhi	r4,1
    6e40:	39c02d04 	addi	r7,r7,180
    6e44:	000d883a 	mov	r6,zero
    6e48:	01405004 	movi	r5,320
    6e4c:	21004204 	addi	r4,r4,264
    6e50:	00095080 	call	9508 <__assert_func>

00006e54 <__lshift>:
    6e54:	f811883a 	mov	r8,ra
    6e58:	000e1ac0 	call	e1ac <_mcount>
    6e5c:	403f883a 	mov	ra,r8
    6e60:	defff804 	addi	sp,sp,-32
    6e64:	dfc00715 	stw	ra,28(sp)
    6e68:	dd800615 	stw	r22,24(sp)
    6e6c:	dd400515 	stw	r21,20(sp)
    6e70:	dd000415 	stw	r20,16(sp)
    6e74:	dcc00315 	stw	r19,12(sp)
    6e78:	dc800215 	stw	r18,8(sp)
    6e7c:	dc400115 	stw	r17,4(sp)
    6e80:	dc000015 	stw	r16,0(sp)
    6e84:	2c000417 	ldw	r16,16(r5)
    6e88:	302dd17a 	srai	r22,r6,5
    6e8c:	28800217 	ldw	r2,8(r5)
    6e90:	2827883a 	mov	r19,r5
    6e94:	b421883a 	add	r16,r22,r16
    6e98:	85000044 	addi	r20,r16,1
    6e9c:	29400117 	ldw	r5,4(r5)
    6ea0:	3025883a 	mov	r18,r6
    6ea4:	2023883a 	mov	r17,r4
    6ea8:	1500030e 	bge	r2,r20,6eb8 <__lshift+0x64>
    6eac:	1085883a 	add	r2,r2,r2
    6eb0:	29400044 	addi	r5,r5,1
    6eb4:	153ffd16 	blt	r2,r20,6eac <__lshift+0x58>
    6eb8:	8809883a 	mov	r4,r17
    6ebc:	00065500 	call	6550 <_Balloc>
    6ec0:	102b883a 	mov	r21,r2
    6ec4:	10004126 	beq	r2,zero,6fcc <__lshift+0x178>
    6ec8:	11000504 	addi	r4,r2,20
    6ecc:	0580050e 	bge	zero,r22,6ee4 <__lshift+0x90>
    6ed0:	b02c90ba 	slli	r22,r22,2
    6ed4:	000b883a 	mov	r5,zero
    6ed8:	b00d883a 	mov	r6,r22
    6edc:	00064540 	call	6454 <memset>
    6ee0:	1589883a 	add	r4,r2,r22
    6ee4:	9a000417 	ldw	r8,16(r19)
    6ee8:	98c00504 	addi	r3,r19,20
    6eec:	948007cc 	andi	r18,r18,31
    6ef0:	401090ba 	slli	r8,r8,2
    6ef4:	1a11883a 	add	r8,r3,r8
    6ef8:	90002c26 	beq	r18,zero,6fac <__lshift+0x158>
    6efc:	01400804 	movi	r5,32
    6f00:	2c8bc83a 	sub	r5,r5,r18
    6f04:	2005883a 	mov	r2,r4
    6f08:	000f883a 	mov	r7,zero
    6f0c:	19800017 	ldw	r6,0(r3)
    6f10:	10800104 	addi	r2,r2,4
    6f14:	18c00104 	addi	r3,r3,4
    6f18:	348c983a 	sll	r6,r6,r18
    6f1c:	31ccb03a 	or	r6,r6,r7
    6f20:	11bfff15 	stw	r6,-4(r2)
    6f24:	19bfff17 	ldw	r6,-4(r3)
    6f28:	314ed83a 	srl	r7,r6,r5
    6f2c:	1a3ff736 	bltu	r3,r8,6f0c <__lshift+0xb8>
    6f30:	98800544 	addi	r2,r19,21
    6f34:	40802336 	bltu	r8,r2,6fc4 <__lshift+0x170>
    6f38:	44c7c83a 	sub	r3,r8,r19
    6f3c:	18fffac4 	addi	r3,r3,-21
    6f40:	1806d0ba 	srli	r3,r3,2
    6f44:	18c00044 	addi	r3,r3,1
    6f48:	180690ba 	slli	r3,r3,2
    6f4c:	20c9883a 	add	r4,r4,r3
    6f50:	21c00015 	stw	r7,0(r4)
    6f54:	38000126 	beq	r7,zero,6f5c <__lshift+0x108>
    6f58:	a021883a 	mov	r16,r20
    6f5c:	ac000415 	stw	r16,16(r21)
    6f60:	98000726 	beq	r19,zero,6f80 <__lshift+0x12c>
    6f64:	98c00117 	ldw	r3,4(r19)
    6f68:	88801317 	ldw	r2,76(r17)
    6f6c:	180690ba 	slli	r3,r3,2
    6f70:	10c5883a 	add	r2,r2,r3
    6f74:	10c00017 	ldw	r3,0(r2)
    6f78:	98c00015 	stw	r3,0(r19)
    6f7c:	14c00015 	stw	r19,0(r2)
    6f80:	a805883a 	mov	r2,r21
    6f84:	dfc00717 	ldw	ra,28(sp)
    6f88:	dd800617 	ldw	r22,24(sp)
    6f8c:	dd400517 	ldw	r21,20(sp)
    6f90:	dd000417 	ldw	r20,16(sp)
    6f94:	dcc00317 	ldw	r19,12(sp)
    6f98:	dc800217 	ldw	r18,8(sp)
    6f9c:	dc400117 	ldw	r17,4(sp)
    6fa0:	dc000017 	ldw	r16,0(sp)
    6fa4:	dec00804 	addi	sp,sp,32
    6fa8:	f800283a 	ret
    6fac:	18800017 	ldw	r2,0(r3)
    6fb0:	18c00104 	addi	r3,r3,4
    6fb4:	21000104 	addi	r4,r4,4
    6fb8:	20bfff15 	stw	r2,-4(r4)
    6fbc:	1a3ffb36 	bltu	r3,r8,6fac <__lshift+0x158>
    6fc0:	003fe606 	br	6f5c <__lshift+0x108>
    6fc4:	00c00104 	movi	r3,4
    6fc8:	003fe006 	br	6f4c <__lshift+0xf8>
    6fcc:	01c00074 	movhi	r7,1
    6fd0:	01000074 	movhi	r4,1
    6fd4:	39c02d04 	addi	r7,r7,180
    6fd8:	000d883a 	mov	r6,zero
    6fdc:	01407644 	movi	r5,473
    6fe0:	21004204 	addi	r4,r4,264
    6fe4:	00095080 	call	9508 <__assert_func>

00006fe8 <__mcmp>:
    6fe8:	f811883a 	mov	r8,ra
    6fec:	000e1ac0 	call	e1ac <_mcount>
    6ff0:	403f883a 	mov	ra,r8
    6ff4:	21800417 	ldw	r6,16(r4)
    6ff8:	28c00417 	ldw	r3,16(r5)
    6ffc:	30c5c83a 	sub	r2,r6,r3
    7000:	30c00e1e 	bne	r6,r3,703c <__mcmp+0x54>
    7004:	180690ba 	slli	r3,r3,2
    7008:	21c00504 	addi	r7,r4,20
    700c:	29400504 	addi	r5,r5,20
    7010:	38c9883a 	add	r4,r7,r3
    7014:	28c7883a 	add	r3,r5,r3
    7018:	00000106 	br	7020 <__mcmp+0x38>
    701c:	3900072e 	bgeu	r7,r4,703c <__mcmp+0x54>
    7020:	21bfff17 	ldw	r6,-4(r4)
    7024:	197fff17 	ldw	r5,-4(r3)
    7028:	213fff04 	addi	r4,r4,-4
    702c:	18ffff04 	addi	r3,r3,-4
    7030:	317ffa26 	beq	r6,r5,701c <__mcmp+0x34>
    7034:	3140022e 	bgeu	r6,r5,7040 <__mcmp+0x58>
    7038:	00bfffc4 	movi	r2,-1
    703c:	f800283a 	ret
    7040:	00800044 	movi	r2,1
    7044:	f800283a 	ret

00007048 <__mdiff>:
    7048:	f811883a 	mov	r8,ra
    704c:	000e1ac0 	call	e1ac <_mcount>
    7050:	403f883a 	mov	ra,r8
    7054:	defffc04 	addi	sp,sp,-16
    7058:	dfc00315 	stw	ra,12(sp)
    705c:	dc800215 	stw	r18,8(sp)
    7060:	dc400115 	stw	r17,4(sp)
    7064:	dc000015 	stw	r16,0(sp)
    7068:	28800417 	ldw	r2,16(r5)
    706c:	30c00417 	ldw	r3,16(r6)
    7070:	2823883a 	mov	r17,r5
    7074:	3021883a 	mov	r16,r6
    7078:	10e5c83a 	sub	r18,r2,r3
    707c:	10c0641e 	bne	r2,r3,7210 <__mdiff+0x1c8>
    7080:	180c90ba 	slli	r6,r3,2
    7084:	29400504 	addi	r5,r5,20
    7088:	80c00504 	addi	r3,r16,20
    708c:	2985883a 	add	r2,r5,r6
    7090:	1987883a 	add	r3,r3,r6
    7094:	00000106 	br	709c <__mdiff+0x54>
    7098:	2880642e 	bgeu	r5,r2,722c <__mdiff+0x1e4>
    709c:	11bfff17 	ldw	r6,-4(r2)
    70a0:	19ffff17 	ldw	r7,-4(r3)
    70a4:	10bfff04 	addi	r2,r2,-4
    70a8:	18ffff04 	addi	r3,r3,-4
    70ac:	31fffa26 	beq	r6,r7,7098 <__mdiff+0x50>
    70b0:	31c05236 	bltu	r6,r7,71fc <__mdiff+0x1b4>
    70b4:	89400117 	ldw	r5,4(r17)
    70b8:	00065500 	call	6550 <_Balloc>
    70bc:	10006226 	beq	r2,zero,7248 <__mdiff+0x200>
    70c0:	8a400417 	ldw	r9,16(r17)
    70c4:	83000417 	ldw	r12,16(r16)
    70c8:	8ac00504 	addi	r11,r17,20
    70cc:	481090ba 	slli	r8,r9,2
    70d0:	601890ba 	slli	r12,r12,2
    70d4:	81800504 	addi	r6,r16,20
    70d8:	13400504 	addi	r13,r2,20
    70dc:	14800315 	stw	r18,12(r2)
    70e0:	5a11883a 	add	r8,r11,r8
    70e4:	3319883a 	add	r12,r6,r12
    70e8:	681d883a 	mov	r14,r13
    70ec:	5815883a 	mov	r10,r11
    70f0:	0007883a 	mov	r3,zero
    70f4:	51000017 	ldw	r4,0(r10)
    70f8:	31c00017 	ldw	r7,0(r6)
    70fc:	73800104 	addi	r14,r14,4
    7100:	217fffcc 	andi	r5,r4,65535
    7104:	28cb883a 	add	r5,r5,r3
    7108:	38ffffcc 	andi	r3,r7,65535
    710c:	28cbc83a 	sub	r5,r5,r3
    7110:	380ed43a 	srli	r7,r7,16
    7114:	2006d43a 	srli	r3,r4,16
    7118:	2809d43a 	srai	r4,r5,16
    711c:	297fffcc 	andi	r5,r5,65535
    7120:	19c7c83a 	sub	r3,r3,r7
    7124:	1907883a 	add	r3,r3,r4
    7128:	1808943a 	slli	r4,r3,16
    712c:	31800104 	addi	r6,r6,4
    7130:	1807d43a 	srai	r3,r3,16
    7134:	214ab03a 	or	r5,r4,r5
    7138:	717fff15 	stw	r5,-4(r14)
    713c:	52800104 	addi	r10,r10,4
    7140:	333fec36 	bltu	r6,r12,70f4 <__mdiff+0xac>
    7144:	640fc83a 	sub	r7,r12,r16
    7148:	39fffac4 	addi	r7,r7,-21
    714c:	84000544 	addi	r16,r16,21
    7150:	380ed0ba 	srli	r7,r7,2
    7154:	64003336 	bltu	r12,r16,7224 <__mdiff+0x1dc>
    7158:	380890ba 	slli	r4,r7,2
    715c:	6909883a 	add	r4,r13,r4
    7160:	64002e36 	bltu	r12,r16,721c <__mdiff+0x1d4>
    7164:	39800044 	addi	r6,r7,1
    7168:	300c90ba 	slli	r6,r6,2
    716c:	5997883a 	add	r11,r11,r6
    7170:	699b883a 	add	r13,r13,r6
    7174:	5a00152e 	bgeu	r11,r8,71cc <__mdiff+0x184>
    7178:	680f883a 	mov	r7,r13
    717c:	580d883a 	mov	r6,r11
    7180:	31000017 	ldw	r4,0(r6)
    7184:	39c00104 	addi	r7,r7,4
    7188:	31800104 	addi	r6,r6,4
    718c:	217fffcc 	andi	r5,r4,65535
    7190:	28cb883a 	add	r5,r5,r3
    7194:	2815d43a 	srai	r10,r5,16
    7198:	2006d43a 	srli	r3,r4,16
    719c:	297fffcc 	andi	r5,r5,65535
    71a0:	1a87883a 	add	r3,r3,r10
    71a4:	1814943a 	slli	r10,r3,16
    71a8:	1807d43a 	srai	r3,r3,16
    71ac:	514ab03a 	or	r5,r10,r5
    71b0:	397fff15 	stw	r5,-4(r7)
    71b4:	323ff236 	bltu	r6,r8,7180 <__mdiff+0x138>
    71b8:	413fffc4 	addi	r4,r8,-1
    71bc:	22c9c83a 	sub	r4,r4,r11
    71c0:	2008d0ba 	srli	r4,r4,2
    71c4:	200890ba 	slli	r4,r4,2
    71c8:	6909883a 	add	r4,r13,r4
    71cc:	2800041e 	bne	r5,zero,71e0 <__mdiff+0x198>
    71d0:	20ffff17 	ldw	r3,-4(r4)
    71d4:	4a7fffc4 	addi	r9,r9,-1
    71d8:	213fff04 	addi	r4,r4,-4
    71dc:	183ffc26 	beq	r3,zero,71d0 <__mdiff+0x188>
    71e0:	12400415 	stw	r9,16(r2)
    71e4:	dfc00317 	ldw	ra,12(sp)
    71e8:	dc800217 	ldw	r18,8(sp)
    71ec:	dc400117 	ldw	r17,4(sp)
    71f0:	dc000017 	ldw	r16,0(sp)
    71f4:	dec00404 	addi	sp,sp,16
    71f8:	f800283a 	ret
    71fc:	8805883a 	mov	r2,r17
    7200:	04800044 	movi	r18,1
    7204:	8023883a 	mov	r17,r16
    7208:	1021883a 	mov	r16,r2
    720c:	003fa906 	br	70b4 <__mdiff+0x6c>
    7210:	903ffa16 	blt	r18,zero,71fc <__mdiff+0x1b4>
    7214:	0025883a 	mov	r18,zero
    7218:	003fa606 	br	70b4 <__mdiff+0x6c>
    721c:	01800104 	movi	r6,4
    7220:	003fd206 	br	716c <__mdiff+0x124>
    7224:	0009883a 	mov	r4,zero
    7228:	003fcc06 	br	715c <__mdiff+0x114>
    722c:	000b883a 	mov	r5,zero
    7230:	00065500 	call	6550 <_Balloc>
    7234:	10000b26 	beq	r2,zero,7264 <__mdiff+0x21c>
    7238:	00c00044 	movi	r3,1
    723c:	10c00415 	stw	r3,16(r2)
    7240:	10000515 	stw	zero,20(r2)
    7244:	003fe706 	br	71e4 <__mdiff+0x19c>
    7248:	01c00074 	movhi	r7,1
    724c:	01000074 	movhi	r4,1
    7250:	39c02d04 	addi	r7,r7,180
    7254:	000d883a 	mov	r6,zero
    7258:	01409004 	movi	r5,576
    725c:	21004204 	addi	r4,r4,264
    7260:	00095080 	call	9508 <__assert_func>
    7264:	01c00074 	movhi	r7,1
    7268:	01000074 	movhi	r4,1
    726c:	39c02d04 	addi	r7,r7,180
    7270:	000d883a 	mov	r6,zero
    7274:	01408c84 	movi	r5,562
    7278:	21004204 	addi	r4,r4,264
    727c:	00095080 	call	9508 <__assert_func>

00007280 <__ulp>:
    7280:	f811883a 	mov	r8,ra
    7284:	000e1ac0 	call	e1ac <_mcount>
    7288:	403f883a 	mov	ra,r8
    728c:	28dffc2c 	andhi	r3,r5,32752
    7290:	017f3034 	movhi	r5,64704
    7294:	1947883a 	add	r3,r3,r5
    7298:	00c0020e 	bge	zero,r3,72a4 <__ulp+0x24>
    729c:	0005883a 	mov	r2,zero
    72a0:	f800283a 	ret
    72a4:	00c7c83a 	sub	r3,zero,r3
    72a8:	1807d53a 	srai	r3,r3,20
    72ac:	18800508 	cmpgei	r2,r3,20
    72b0:	1000031e 	bne	r2,zero,72c0 <__ulp+0x40>
    72b4:	00800234 	movhi	r2,8
    72b8:	10c7d83a 	sra	r3,r2,r3
    72bc:	003ff706 	br	729c <__ulp+0x1c>
    72c0:	193ffb04 	addi	r4,r3,-20
    72c4:	208007c8 	cmpgei	r2,r4,31
    72c8:	0007883a 	mov	r3,zero
    72cc:	1000031e 	bne	r2,zero,72dc <__ulp+0x5c>
    72d0:	00a00034 	movhi	r2,32768
    72d4:	1104d83a 	srl	r2,r2,r4
    72d8:	f800283a 	ret
    72dc:	00800044 	movi	r2,1
    72e0:	f800283a 	ret

000072e4 <__b2d>:
    72e4:	f811883a 	mov	r8,ra
    72e8:	000e1ac0 	call	e1ac <_mcount>
    72ec:	403f883a 	mov	ra,r8
    72f0:	defffa04 	addi	sp,sp,-24
    72f4:	dfc00515 	stw	ra,20(sp)
    72f8:	dd000415 	stw	r20,16(sp)
    72fc:	dcc00315 	stw	r19,12(sp)
    7300:	dc800215 	stw	r18,8(sp)
    7304:	dc400115 	stw	r17,4(sp)
    7308:	dc000015 	stw	r16,0(sp)
    730c:	24400417 	ldw	r17,16(r4)
    7310:	24000504 	addi	r16,r4,20
    7314:	2827883a 	mov	r19,r5
    7318:	882290ba 	slli	r17,r17,2
    731c:	8463883a 	add	r17,r16,r17
    7320:	8cbfff17 	ldw	r18,-4(r17)
    7324:	8d3fff04 	addi	r20,r17,-4
    7328:	9009883a 	mov	r4,r18
    732c:	00068b80 	call	68b8 <__hi0bits>
    7330:	00c00804 	movi	r3,32
    7334:	1889c83a 	sub	r4,r3,r2
    7338:	99000015 	stw	r4,0(r19)
    733c:	110002c8 	cmpgei	r4,r2,11
    7340:	20002026 	beq	r4,zero,73c4 <__b2d+0xe0>
    7344:	10bffd44 	addi	r2,r2,-11
    7348:	85000e2e 	bgeu	r16,r20,7384 <__b2d+0xa0>
    734c:	897ffe17 	ldw	r5,-8(r17)
    7350:	10001226 	beq	r2,zero,739c <__b2d+0xb8>
    7354:	1889c83a 	sub	r4,r3,r2
    7358:	90a4983a 	sll	r18,r18,r2
    735c:	2906d83a 	srl	r3,r5,r4
    7360:	89bffe04 	addi	r6,r17,-8
    7364:	2884983a 	sll	r2,r5,r2
    7368:	90e4b03a 	or	r18,r18,r3
    736c:	90cffc34 	orhi	r3,r18,16368
    7370:	81800c2e 	bgeu	r16,r6,73a4 <__b2d+0xc0>
    7374:	897ffd17 	ldw	r5,-12(r17)
    7378:	2908d83a 	srl	r4,r5,r4
    737c:	1104b03a 	or	r2,r2,r4
    7380:	00000806 	br	73a4 <__b2d+0xc0>
    7384:	10000426 	beq	r2,zero,7398 <__b2d+0xb4>
    7388:	90a4983a 	sll	r18,r18,r2
    738c:	0005883a 	mov	r2,zero
    7390:	90cffc34 	orhi	r3,r18,16368
    7394:	00000306 	br	73a4 <__b2d+0xc0>
    7398:	000b883a 	mov	r5,zero
    739c:	90cffc34 	orhi	r3,r18,16368
    73a0:	2805883a 	mov	r2,r5
    73a4:	dfc00517 	ldw	ra,20(sp)
    73a8:	dd000417 	ldw	r20,16(sp)
    73ac:	dcc00317 	ldw	r19,12(sp)
    73b0:	dc800217 	ldw	r18,8(sp)
    73b4:	dc400117 	ldw	r17,4(sp)
    73b8:	dc000017 	ldw	r16,0(sp)
    73bc:	dec00604 	addi	sp,sp,24
    73c0:	f800283a 	ret
    73c4:	014002c4 	movi	r5,11
    73c8:	2889c83a 	sub	r4,r5,r2
    73cc:	9106d83a 	srl	r3,r18,r4
    73d0:	18cffc34 	orhi	r3,r3,16368
    73d4:	85000536 	bltu	r16,r20,73ec <__b2d+0x108>
    73d8:	000b883a 	mov	r5,zero
    73dc:	10800544 	addi	r2,r2,21
    73e0:	9084983a 	sll	r2,r18,r2
    73e4:	1144b03a 	or	r2,r2,r5
    73e8:	003fee06 	br	73a4 <__b2d+0xc0>
    73ec:	897ffe17 	ldw	r5,-8(r17)
    73f0:	290ad83a 	srl	r5,r5,r4
    73f4:	003ff906 	br	73dc <__b2d+0xf8>

000073f8 <__d2b>:
    73f8:	f811883a 	mov	r8,ra
    73fc:	000e1ac0 	call	e1ac <_mcount>
    7400:	403f883a 	mov	ra,r8
    7404:	defff804 	addi	sp,sp,-32
    7408:	dfc00715 	stw	ra,28(sp)
    740c:	dd000615 	stw	r20,24(sp)
    7410:	dcc00515 	stw	r19,20(sp)
    7414:	dc800415 	stw	r18,16(sp)
    7418:	dc400315 	stw	r17,12(sp)
    741c:	dc000215 	stw	r16,8(sp)
    7420:	2829883a 	mov	r20,r5
    7424:	01400044 	movi	r5,1
    7428:	3021883a 	mov	r16,r6
    742c:	3827883a 	mov	r19,r7
    7430:	00065500 	call	6550 <_Balloc>
    7434:	10004526 	beq	r2,zero,754c <__d2b+0x154>
    7438:	8024d53a 	srli	r18,r16,20
    743c:	01800434 	movhi	r6,16
    7440:	31bfffc4 	addi	r6,r6,-1
    7444:	9481ffcc 	andi	r18,r18,2047
    7448:	1023883a 	mov	r17,r2
    744c:	81a0703a 	and	r16,r16,r6
    7450:	90000126 	beq	r18,zero,7458 <__d2b+0x60>
    7454:	84000434 	orhi	r16,r16,16
    7458:	dc000115 	stw	r16,4(sp)
    745c:	a0002226 	beq	r20,zero,74e8 <__d2b+0xf0>
    7460:	d809883a 	mov	r4,sp
    7464:	dd000015 	stw	r20,0(sp)
    7468:	00069280 	call	6928 <__lo0bits>
    746c:	d8c00117 	ldw	r3,4(sp)
    7470:	10003326 	beq	r2,zero,7540 <__d2b+0x148>
    7474:	01000804 	movi	r4,32
    7478:	2089c83a 	sub	r4,r4,r2
    747c:	1908983a 	sll	r4,r3,r4
    7480:	d9400017 	ldw	r5,0(sp)
    7484:	1886d83a 	srl	r3,r3,r2
    7488:	2148b03a 	or	r4,r4,r5
    748c:	89000515 	stw	r4,20(r17)
    7490:	d8c00115 	stw	r3,4(sp)
    7494:	88c00615 	stw	r3,24(r17)
    7498:	1800271e 	bne	r3,zero,7538 <__d2b+0x140>
    749c:	04000044 	movi	r16,1
    74a0:	8c000415 	stw	r16,16(r17)
    74a4:	90001926 	beq	r18,zero,750c <__d2b+0x114>
    74a8:	00c00d44 	movi	r3,53
    74ac:	94bef344 	addi	r18,r18,-1075
    74b0:	90a5883a 	add	r18,r18,r2
    74b4:	1885c83a 	sub	r2,r3,r2
    74b8:	d8c00817 	ldw	r3,32(sp)
    74bc:	9c800015 	stw	r18,0(r19)
    74c0:	18800015 	stw	r2,0(r3)
    74c4:	8805883a 	mov	r2,r17
    74c8:	dfc00717 	ldw	ra,28(sp)
    74cc:	dd000617 	ldw	r20,24(sp)
    74d0:	dcc00517 	ldw	r19,20(sp)
    74d4:	dc800417 	ldw	r18,16(sp)
    74d8:	dc400317 	ldw	r17,12(sp)
    74dc:	dc000217 	ldw	r16,8(sp)
    74e0:	dec00804 	addi	sp,sp,32
    74e4:	f800283a 	ret
    74e8:	d9000104 	addi	r4,sp,4
    74ec:	00069280 	call	6928 <__lo0bits>
    74f0:	00c00044 	movi	r3,1
    74f4:	88c00415 	stw	r3,16(r17)
    74f8:	d8c00117 	ldw	r3,4(sp)
    74fc:	10800804 	addi	r2,r2,32
    7500:	04000044 	movi	r16,1
    7504:	88c00515 	stw	r3,20(r17)
    7508:	903fe71e 	bne	r18,zero,74a8 <__d2b+0xb0>
    750c:	800690ba 	slli	r3,r16,2
    7510:	10bef384 	addi	r2,r2,-1074
    7514:	98800015 	stw	r2,0(r19)
    7518:	88c5883a 	add	r2,r17,r3
    751c:	11000417 	ldw	r4,16(r2)
    7520:	8020917a 	slli	r16,r16,5
    7524:	00068b80 	call	68b8 <__hi0bits>
    7528:	80a1c83a 	sub	r16,r16,r2
    752c:	d8800817 	ldw	r2,32(sp)
    7530:	14000015 	stw	r16,0(r2)
    7534:	003fe306 	br	74c4 <__d2b+0xcc>
    7538:	04000084 	movi	r16,2
    753c:	003fd806 	br	74a0 <__d2b+0xa8>
    7540:	d9000017 	ldw	r4,0(sp)
    7544:	89000515 	stw	r4,20(r17)
    7548:	003fd206 	br	7494 <__d2b+0x9c>
    754c:	01c00074 	movhi	r7,1
    7550:	01000074 	movhi	r4,1
    7554:	39c02d04 	addi	r7,r7,180
    7558:	000d883a 	mov	r6,zero
    755c:	0140c284 	movi	r5,778
    7560:	21004204 	addi	r4,r4,264
    7564:	00095080 	call	9508 <__assert_func>

00007568 <__ratio>:
    7568:	f811883a 	mov	r8,ra
    756c:	000e1ac0 	call	e1ac <_mcount>
    7570:	403f883a 	mov	ra,r8
    7574:	defff904 	addi	sp,sp,-28
    7578:	dfc00615 	stw	ra,24(sp)
    757c:	dcc00515 	stw	r19,20(sp)
    7580:	dc800415 	stw	r18,16(sp)
    7584:	dc400315 	stw	r17,12(sp)
    7588:	dc000215 	stw	r16,8(sp)
    758c:	2823883a 	mov	r17,r5
    7590:	d80b883a 	mov	r5,sp
    7594:	2027883a 	mov	r19,r4
    7598:	00072e40 	call	72e4 <__b2d>
    759c:	d9400104 	addi	r5,sp,4
    75a0:	8809883a 	mov	r4,r17
    75a4:	1025883a 	mov	r18,r2
    75a8:	1821883a 	mov	r16,r3
    75ac:	00072e40 	call	72e4 <__b2d>
    75b0:	89000417 	ldw	r4,16(r17)
    75b4:	9a000417 	ldw	r8,16(r19)
    75b8:	d9400117 	ldw	r5,4(sp)
    75bc:	100d883a 	mov	r6,r2
    75c0:	4111c83a 	sub	r8,r8,r4
    75c4:	d9000017 	ldw	r4,0(sp)
    75c8:	4010917a 	slli	r8,r8,5
    75cc:	180f883a 	mov	r7,r3
    75d0:	2149c83a 	sub	r4,r4,r5
    75d4:	4111883a 	add	r8,r8,r4
    75d8:	02000c0e 	bge	zero,r8,760c <__ratio+0xa4>
    75dc:	4010953a 	slli	r8,r8,20
    75e0:	4421883a 	add	r16,r8,r16
    75e4:	9009883a 	mov	r4,r18
    75e8:	800b883a 	mov	r5,r16
    75ec:	000bd2c0 	call	bd2c <__divdf3>
    75f0:	dfc00617 	ldw	ra,24(sp)
    75f4:	dcc00517 	ldw	r19,20(sp)
    75f8:	dc800417 	ldw	r18,16(sp)
    75fc:	dc400317 	ldw	r17,12(sp)
    7600:	dc000217 	ldw	r16,8(sp)
    7604:	dec00704 	addi	sp,sp,28
    7608:	f800283a 	ret
    760c:	00bffc34 	movhi	r2,65520
    7610:	4091383a 	mul	r8,r8,r2
    7614:	40cf883a 	add	r7,r8,r3
    7618:	003ff206 	br	75e4 <__ratio+0x7c>

0000761c <_mprec_log10>:
    761c:	f811883a 	mov	r8,ra
    7620:	000e1ac0 	call	e1ac <_mcount>
    7624:	403f883a 	mov	ra,r8
    7628:	defffe04 	addi	sp,sp,-8
    762c:	dfc00115 	stw	ra,4(sp)
    7630:	dc000015 	stw	r16,0(sp)
    7634:	20800608 	cmpgei	r2,r4,24
    7638:	2021883a 	mov	r16,r4
    763c:	10000f26 	beq	r2,zero,767c <_mprec_log10+0x60>
    7640:	0009883a 	mov	r4,zero
    7644:	014ffc34 	movhi	r5,16368
    7648:	000d883a 	mov	r6,zero
    764c:	01d00934 	movhi	r7,16420
    7650:	000c8080 	call	c808 <__muldf3>
    7654:	843fffc4 	addi	r16,r16,-1
    7658:	1009883a 	mov	r4,r2
    765c:	180b883a 	mov	r5,r3
    7660:	803ff91e 	bne	r16,zero,7648 <_mprec_log10+0x2c>
    7664:	2005883a 	mov	r2,r4
    7668:	2807883a 	mov	r3,r5
    766c:	dfc00117 	ldw	ra,4(sp)
    7670:	dc000017 	ldw	r16,0(sp)
    7674:	dec00204 	addi	sp,sp,8
    7678:	f800283a 	ret
    767c:	202090fa 	slli	r16,r4,3
    7680:	00800074 	movhi	r2,1
    7684:	10806904 	addi	r2,r2,420
    7688:	1421883a 	add	r16,r2,r16
    768c:	81000017 	ldw	r4,0(r16)
    7690:	81400117 	ldw	r5,4(r16)
    7694:	003ff306 	br	7664 <_mprec_log10+0x48>

00007698 <__copybits>:
    7698:	f811883a 	mov	r8,ra
    769c:	000e1ac0 	call	e1ac <_mcount>
    76a0:	403f883a 	mov	ra,r8
    76a4:	297fffc4 	addi	r5,r5,-1
    76a8:	280fd17a 	srai	r7,r5,5
    76ac:	31400417 	ldw	r5,16(r6)
    76b0:	30800504 	addi	r2,r6,20
    76b4:	39c00044 	addi	r7,r7,1
    76b8:	280a90ba 	slli	r5,r5,2
    76bc:	380e90ba 	slli	r7,r7,2
    76c0:	114b883a 	add	r5,r2,r5
    76c4:	21cf883a 	add	r7,r4,r7
    76c8:	11400c2e 	bgeu	r2,r5,76fc <__copybits+0x64>
    76cc:	2007883a 	mov	r3,r4
    76d0:	12000017 	ldw	r8,0(r2)
    76d4:	10800104 	addi	r2,r2,4
    76d8:	18c00104 	addi	r3,r3,4
    76dc:	1a3fff15 	stw	r8,-4(r3)
    76e0:	117ffb36 	bltu	r2,r5,76d0 <__copybits+0x38>
    76e4:	2985c83a 	sub	r2,r5,r6
    76e8:	10bffac4 	addi	r2,r2,-21
    76ec:	1004d0ba 	srli	r2,r2,2
    76f0:	10800044 	addi	r2,r2,1
    76f4:	100490ba 	slli	r2,r2,2
    76f8:	2089883a 	add	r4,r4,r2
    76fc:	21c0072e 	bgeu	r4,r7,771c <__copybits+0x84>
    7700:	39bfffc4 	addi	r6,r7,-1
    7704:	310dc83a 	sub	r6,r6,r4
    7708:	300cd0ba 	srli	r6,r6,2
    770c:	000b883a 	mov	r5,zero
    7710:	31800044 	addi	r6,r6,1
    7714:	300c90ba 	slli	r6,r6,2
    7718:	00064541 	jmpi	6454 <memset>
    771c:	f800283a 	ret

00007720 <__any_on>:
    7720:	f811883a 	mov	r8,ra
    7724:	000e1ac0 	call	e1ac <_mcount>
    7728:	403f883a 	mov	ra,r8
    772c:	20c00417 	ldw	r3,16(r4)
    7730:	280dd17a 	srai	r6,r5,5
    7734:	21000504 	addi	r4,r4,20
    7738:	1980080e 	bge	r3,r6,775c <__any_on+0x3c>
    773c:	180490ba 	slli	r2,r3,2
    7740:	2085883a 	add	r2,r4,r2
    7744:	20800f2e 	bgeu	r4,r2,7784 <__any_on+0x64>
    7748:	10ffff17 	ldw	r3,-4(r2)
    774c:	10bfff04 	addi	r2,r2,-4
    7750:	183ffc26 	beq	r3,zero,7744 <__any_on+0x24>
    7754:	00800044 	movi	r2,1
    7758:	f800283a 	ret
    775c:	300490ba 	slli	r2,r6,2
    7760:	2085883a 	add	r2,r4,r2
    7764:	30fff70e 	bge	r6,r3,7744 <__any_on+0x24>
    7768:	294007cc 	andi	r5,r5,31
    776c:	283ff526 	beq	r5,zero,7744 <__any_on+0x24>
    7770:	11800017 	ldw	r6,0(r2)
    7774:	3146d83a 	srl	r3,r6,r5
    7778:	194a983a 	sll	r5,r3,r5
    777c:	317ff51e 	bne	r6,r5,7754 <__any_on+0x34>
    7780:	20bff136 	bltu	r4,r2,7748 <__any_on+0x28>
    7784:	0005883a 	mov	r2,zero
    7788:	f800283a 	ret

0000778c <_realloc_r>:
    778c:	f811883a 	mov	r8,ra
    7790:	000e1ac0 	call	e1ac <_mcount>
    7794:	403f883a 	mov	ra,r8
    7798:	defff504 	addi	sp,sp,-44
    779c:	dfc00a15 	stw	ra,40(sp)
    77a0:	df000915 	stw	fp,36(sp)
    77a4:	ddc00815 	stw	r23,32(sp)
    77a8:	dd800715 	stw	r22,28(sp)
    77ac:	dd400615 	stw	r21,24(sp)
    77b0:	dd000515 	stw	r20,20(sp)
    77b4:	dcc00415 	stw	r19,16(sp)
    77b8:	dc800315 	stw	r18,12(sp)
    77bc:	dc400215 	stw	r17,8(sp)
    77c0:	dc000115 	stw	r16,4(sp)
    77c4:	3025883a 	mov	r18,r6
    77c8:	28008b26 	beq	r5,zero,79f8 <_realloc_r+0x26c>
    77cc:	2821883a 	mov	r16,r5
    77d0:	2027883a 	mov	r19,r4
    77d4:	944002c4 	addi	r17,r18,11
    77d8:	000e18c0 	call	e18c <__malloc_lock>
    77dc:	888005f0 	cmpltui	r2,r17,23
    77e0:	1000521e 	bne	r2,zero,792c <_realloc_r+0x1a0>
    77e4:	017ffe04 	movi	r5,-8
    77e8:	8962703a 	and	r17,r17,r5
    77ec:	8807883a 	mov	r3,r17
    77f0:	88005116 	blt	r17,zero,7938 <_realloc_r+0x1ac>
    77f4:	8c805036 	bltu	r17,r18,7938 <_realloc_r+0x1ac>
    77f8:	80bfff17 	ldw	r2,-4(r16)
    77fc:	017fff04 	movi	r5,-4
    7800:	857ffe04 	addi	r21,r16,-8
    7804:	1168703a 	and	r20,r2,r5
    7808:	ad2d883a 	add	r22,r21,r20
    780c:	a0c0390e 	bge	r20,r3,78f4 <_realloc_r+0x168>
    7810:	07000074 	movhi	fp,1
    7814:	e702e804 	addi	fp,fp,2976
    7818:	e2000217 	ldw	r8,8(fp)
    781c:	b1000117 	ldw	r4,4(r22)
    7820:	45808e26 	beq	r8,r22,7a5c <_realloc_r+0x2d0>
    7824:	01bfff84 	movi	r6,-2
    7828:	218c703a 	and	r6,r4,r6
    782c:	b18d883a 	add	r6,r22,r6
    7830:	31800117 	ldw	r6,4(r6)
    7834:	3180004c 	andi	r6,r6,1
    7838:	30004f1e 	bne	r6,zero,7978 <_realloc_r+0x1ec>
    783c:	2148703a 	and	r4,r4,r5
    7840:	a10b883a 	add	r5,r20,r4
    7844:	28c0bf0e 	bge	r5,r3,7b44 <_realloc_r+0x3b8>
    7848:	1080004c 	andi	r2,r2,1
    784c:	10004c1e 	bne	r2,zero,7980 <_realloc_r+0x1f4>
    7850:	81fffe17 	ldw	r7,-8(r16)
    7854:	00bfff04 	movi	r2,-4
    7858:	a9cfc83a 	sub	r7,r21,r7
    785c:	39400117 	ldw	r5,4(r7)
    7860:	288a703a 	and	r5,r5,r2
    7864:	b0000426 	beq	r22,zero,7878 <_realloc_r+0xec>
    7868:	a16f883a 	add	r23,r20,r5
    786c:	b92f883a 	add	r23,r23,r4
    7870:	4580bf26 	beq	r8,r22,7b70 <_realloc_r+0x3e4>
    7874:	b8c0930e 	bge	r23,r3,7ac4 <_realloc_r+0x338>
    7878:	38004126 	beq	r7,zero,7980 <_realloc_r+0x1f4>
    787c:	a16f883a 	add	r23,r20,r5
    7880:	b8c03f16 	blt	r23,r3,7980 <_realloc_r+0x1f4>
    7884:	38800317 	ldw	r2,12(r7)
    7888:	38c00217 	ldw	r3,8(r7)
    788c:	a1bfff04 	addi	r6,r20,-4
    7890:	31400968 	cmpgeui	r5,r6,37
    7894:	18800315 	stw	r2,12(r3)
    7898:	10c00215 	stw	r3,8(r2)
    789c:	39000204 	addi	r4,r7,8
    78a0:	3ded883a 	add	r22,r7,r23
    78a4:	2800941e 	bne	r5,zero,7af8 <_realloc_r+0x36c>
    78a8:	30800530 	cmpltui	r2,r6,20
    78ac:	80c00017 	ldw	r3,0(r16)
    78b0:	1000df1e 	bne	r2,zero,7c30 <_realloc_r+0x4a4>
    78b4:	38c00215 	stw	r3,8(r7)
    78b8:	80c00117 	ldw	r3,4(r16)
    78bc:	30800728 	cmpgeui	r2,r6,28
    78c0:	38c00315 	stw	r3,12(r7)
    78c4:	1000dc1e 	bne	r2,zero,7c38 <_realloc_r+0x4ac>
    78c8:	80c00217 	ldw	r3,8(r16)
    78cc:	38800404 	addi	r2,r7,16
    78d0:	84000204 	addi	r16,r16,8
    78d4:	10c00015 	stw	r3,0(r2)
    78d8:	80c00117 	ldw	r3,4(r16)
    78dc:	b829883a 	mov	r20,r23
    78e0:	382b883a 	mov	r21,r7
    78e4:	10c00115 	stw	r3,4(r2)
    78e8:	80c00217 	ldw	r3,8(r16)
    78ec:	2021883a 	mov	r16,r4
    78f0:	10c00215 	stw	r3,8(r2)
    78f4:	a9800117 	ldw	r6,4(r21)
    78f8:	a445c83a 	sub	r2,r20,r17
    78fc:	10c00430 	cmpltui	r3,r2,16
    7900:	3180004c 	andi	r6,r6,1
    7904:	18004926 	beq	r3,zero,7a2c <_realloc_r+0x2a0>
    7908:	a18cb03a 	or	r6,r20,r6
    790c:	a9800115 	stw	r6,4(r21)
    7910:	b0800117 	ldw	r2,4(r22)
    7914:	10800054 	ori	r2,r2,1
    7918:	b0800115 	stw	r2,4(r22)
    791c:	9809883a 	mov	r4,r19
    7920:	000e19c0 	call	e19c <__malloc_unlock>
    7924:	8025883a 	mov	r18,r16
    7928:	00000606 	br	7944 <_realloc_r+0x1b8>
    792c:	04400404 	movi	r17,16
    7930:	00c00404 	movi	r3,16
    7934:	8cbfb02e 	bgeu	r17,r18,77f8 <_realloc_r+0x6c>
    7938:	00800304 	movi	r2,12
    793c:	98800015 	stw	r2,0(r19)
    7940:	0025883a 	mov	r18,zero
    7944:	9005883a 	mov	r2,r18
    7948:	dfc00a17 	ldw	ra,40(sp)
    794c:	df000917 	ldw	fp,36(sp)
    7950:	ddc00817 	ldw	r23,32(sp)
    7954:	dd800717 	ldw	r22,28(sp)
    7958:	dd400617 	ldw	r21,24(sp)
    795c:	dd000517 	ldw	r20,20(sp)
    7960:	dcc00417 	ldw	r19,16(sp)
    7964:	dc800317 	ldw	r18,12(sp)
    7968:	dc400217 	ldw	r17,8(sp)
    796c:	dc000117 	ldw	r16,4(sp)
    7970:	dec00b04 	addi	sp,sp,44
    7974:	f800283a 	ret
    7978:	1080004c 	andi	r2,r2,1
    797c:	10006c26 	beq	r2,zero,7b30 <_realloc_r+0x3a4>
    7980:	900b883a 	mov	r5,r18
    7984:	9809883a 	mov	r4,r19
    7988:	0005a600 	call	5a60 <_malloc_r>
    798c:	1025883a 	mov	r18,r2
    7990:	10001626 	beq	r2,zero,79ec <_realloc_r+0x260>
    7994:	80bfff17 	ldw	r2,-4(r16)
    7998:	013fff84 	movi	r4,-2
    799c:	90fffe04 	addi	r3,r18,-8
    79a0:	1104703a 	and	r2,r2,r4
    79a4:	a885883a 	add	r2,r21,r2
    79a8:	10c05b26 	beq	r2,r3,7b18 <_realloc_r+0x38c>
    79ac:	a1bfff04 	addi	r6,r20,-4
    79b0:	30800968 	cmpgeui	r2,r6,37
    79b4:	10006a1e 	bne	r2,zero,7b60 <_realloc_r+0x3d4>
    79b8:	30800530 	cmpltui	r2,r6,20
    79bc:	81000017 	ldw	r4,0(r16)
    79c0:	10003726 	beq	r2,zero,7aa0 <_realloc_r+0x314>
    79c4:	9005883a 	mov	r2,r18
    79c8:	8007883a 	mov	r3,r16
    79cc:	11000015 	stw	r4,0(r2)
    79d0:	19000117 	ldw	r4,4(r3)
    79d4:	11000115 	stw	r4,4(r2)
    79d8:	18c00217 	ldw	r3,8(r3)
    79dc:	10c00215 	stw	r3,8(r2)
    79e0:	800b883a 	mov	r5,r16
    79e4:	9809883a 	mov	r4,r19
    79e8:	0004e980 	call	4e98 <_free_r>
    79ec:	9809883a 	mov	r4,r19
    79f0:	000e19c0 	call	e19c <__malloc_unlock>
    79f4:	003fd306 	br	7944 <_realloc_r+0x1b8>
    79f8:	300b883a 	mov	r5,r6
    79fc:	dfc00a17 	ldw	ra,40(sp)
    7a00:	df000917 	ldw	fp,36(sp)
    7a04:	ddc00817 	ldw	r23,32(sp)
    7a08:	dd800717 	ldw	r22,28(sp)
    7a0c:	dd400617 	ldw	r21,24(sp)
    7a10:	dd000517 	ldw	r20,20(sp)
    7a14:	dcc00417 	ldw	r19,16(sp)
    7a18:	dc800317 	ldw	r18,12(sp)
    7a1c:	dc400217 	ldw	r17,8(sp)
    7a20:	dc000117 	ldw	r16,4(sp)
    7a24:	dec00b04 	addi	sp,sp,44
    7a28:	0005a601 	jmpi	5a60 <_malloc_r>
    7a2c:	344cb03a 	or	r6,r6,r17
    7a30:	a9800115 	stw	r6,4(r21)
    7a34:	ac4b883a 	add	r5,r21,r17
    7a38:	10800054 	ori	r2,r2,1
    7a3c:	28800115 	stw	r2,4(r5)
    7a40:	b0800117 	ldw	r2,4(r22)
    7a44:	29400204 	addi	r5,r5,8
    7a48:	9809883a 	mov	r4,r19
    7a4c:	10800054 	ori	r2,r2,1
    7a50:	b0800115 	stw	r2,4(r22)
    7a54:	0004e980 	call	4e98 <_free_r>
    7a58:	003fb006 	br	791c <_realloc_r+0x190>
    7a5c:	2148703a 	and	r4,r4,r5
    7a60:	a10b883a 	add	r5,r20,r4
    7a64:	89800404 	addi	r6,r17,16
    7a68:	29bf7716 	blt	r5,r6,7848 <_realloc_r+0xbc>
    7a6c:	ac6b883a 	add	r21,r21,r17
    7a70:	2c45c83a 	sub	r2,r5,r17
    7a74:	e5400215 	stw	r21,8(fp)
    7a78:	10800054 	ori	r2,r2,1
    7a7c:	a8800115 	stw	r2,4(r21)
    7a80:	80bfff17 	ldw	r2,-4(r16)
    7a84:	9809883a 	mov	r4,r19
    7a88:	8025883a 	mov	r18,r16
    7a8c:	1080004c 	andi	r2,r2,1
    7a90:	1462b03a 	or	r17,r2,r17
    7a94:	847fff15 	stw	r17,-4(r16)
    7a98:	000e19c0 	call	e19c <__malloc_unlock>
    7a9c:	003fa906 	br	7944 <_realloc_r+0x1b8>
    7aa0:	91000015 	stw	r4,0(r18)
    7aa4:	80c00117 	ldw	r3,4(r16)
    7aa8:	30800728 	cmpgeui	r2,r6,28
    7aac:	90c00115 	stw	r3,4(r18)
    7ab0:	1000551e 	bne	r2,zero,7c08 <_realloc_r+0x47c>
    7ab4:	81000217 	ldw	r4,8(r16)
    7ab8:	80c00204 	addi	r3,r16,8
    7abc:	90800204 	addi	r2,r18,8
    7ac0:	003fc206 	br	79cc <_realloc_r+0x240>
    7ac4:	b0800317 	ldw	r2,12(r22)
    7ac8:	b0c00217 	ldw	r3,8(r22)
    7acc:	a1bfff04 	addi	r6,r20,-4
    7ad0:	31400968 	cmpgeui	r5,r6,37
    7ad4:	18800315 	stw	r2,12(r3)
    7ad8:	10c00215 	stw	r3,8(r2)
    7adc:	38c00217 	ldw	r3,8(r7)
    7ae0:	38800317 	ldw	r2,12(r7)
    7ae4:	39000204 	addi	r4,r7,8
    7ae8:	3ded883a 	add	r22,r7,r23
    7aec:	18800315 	stw	r2,12(r3)
    7af0:	10c00215 	stw	r3,8(r2)
    7af4:	283f6c26 	beq	r5,zero,78a8 <_realloc_r+0x11c>
    7af8:	800b883a 	mov	r5,r16
    7afc:	d9c00015 	stw	r7,0(sp)
    7b00:	00063240 	call	6324 <memmove>
    7b04:	d9c00017 	ldw	r7,0(sp)
    7b08:	1021883a 	mov	r16,r2
    7b0c:	b829883a 	mov	r20,r23
    7b10:	382b883a 	mov	r21,r7
    7b14:	003f7706 	br	78f4 <_realloc_r+0x168>
    7b18:	90bfff17 	ldw	r2,-4(r18)
    7b1c:	00ffff04 	movi	r3,-4
    7b20:	10c4703a 	and	r2,r2,r3
    7b24:	a0a9883a 	add	r20,r20,r2
    7b28:	ad2d883a 	add	r22,r21,r20
    7b2c:	003f7106 	br	78f4 <_realloc_r+0x168>
    7b30:	81fffe17 	ldw	r7,-8(r16)
    7b34:	a9cfc83a 	sub	r7,r21,r7
    7b38:	38800117 	ldw	r2,4(r7)
    7b3c:	114a703a 	and	r5,r2,r5
    7b40:	003f4d06 	br	7878 <_realloc_r+0xec>
    7b44:	b0800317 	ldw	r2,12(r22)
    7b48:	b0c00217 	ldw	r3,8(r22)
    7b4c:	2829883a 	mov	r20,r5
    7b50:	a96d883a 	add	r22,r21,r5
    7b54:	18800315 	stw	r2,12(r3)
    7b58:	10c00215 	stw	r3,8(r2)
    7b5c:	003f6506 	br	78f4 <_realloc_r+0x168>
    7b60:	800b883a 	mov	r5,r16
    7b64:	9009883a 	mov	r4,r18
    7b68:	00063240 	call	6324 <memmove>
    7b6c:	003f9c06 	br	79e0 <_realloc_r+0x254>
    7b70:	88800404 	addi	r2,r17,16
    7b74:	b8bf4016 	blt	r23,r2,7878 <_realloc_r+0xec>
    7b78:	38800317 	ldw	r2,12(r7)
    7b7c:	38c00217 	ldw	r3,8(r7)
    7b80:	a1bfff04 	addi	r6,r20,-4
    7b84:	31000968 	cmpgeui	r4,r6,37
    7b88:	18800315 	stw	r2,12(r3)
    7b8c:	10c00215 	stw	r3,8(r2)
    7b90:	3c800204 	addi	r18,r7,8
    7b94:	20003b1e 	bne	r4,zero,7c84 <_realloc_r+0x4f8>
    7b98:	30800530 	cmpltui	r2,r6,20
    7b9c:	80c00017 	ldw	r3,0(r16)
    7ba0:	1000361e 	bne	r2,zero,7c7c <_realloc_r+0x4f0>
    7ba4:	38c00215 	stw	r3,8(r7)
    7ba8:	80c00117 	ldw	r3,4(r16)
    7bac:	30800728 	cmpgeui	r2,r6,28
    7bb0:	38c00315 	stw	r3,12(r7)
    7bb4:	1000401e 	bne	r2,zero,7cb8 <_realloc_r+0x52c>
    7bb8:	80c00217 	ldw	r3,8(r16)
    7bbc:	38800404 	addi	r2,r7,16
    7bc0:	84000204 	addi	r16,r16,8
    7bc4:	10c00015 	stw	r3,0(r2)
    7bc8:	80c00117 	ldw	r3,4(r16)
    7bcc:	10c00115 	stw	r3,4(r2)
    7bd0:	80c00217 	ldw	r3,8(r16)
    7bd4:	10c00215 	stw	r3,8(r2)
    7bd8:	3c47883a 	add	r3,r7,r17
    7bdc:	bc45c83a 	sub	r2,r23,r17
    7be0:	e0c00215 	stw	r3,8(fp)
    7be4:	10800054 	ori	r2,r2,1
    7be8:	18800115 	stw	r2,4(r3)
    7bec:	38800117 	ldw	r2,4(r7)
    7bf0:	9809883a 	mov	r4,r19
    7bf4:	1080004c 	andi	r2,r2,1
    7bf8:	1462b03a 	or	r17,r2,r17
    7bfc:	3c400115 	stw	r17,4(r7)
    7c00:	000e19c0 	call	e19c <__malloc_unlock>
    7c04:	003f4f06 	br	7944 <_realloc_r+0x1b8>
    7c08:	80800217 	ldw	r2,8(r16)
    7c0c:	31800920 	cmpeqi	r6,r6,36
    7c10:	90800215 	stw	r2,8(r18)
    7c14:	80800317 	ldw	r2,12(r16)
    7c18:	90800315 	stw	r2,12(r18)
    7c1c:	81000417 	ldw	r4,16(r16)
    7c20:	30000f1e 	bne	r6,zero,7c60 <_realloc_r+0x4d4>
    7c24:	80c00404 	addi	r3,r16,16
    7c28:	90800404 	addi	r2,r18,16
    7c2c:	003f6706 	br	79cc <_realloc_r+0x240>
    7c30:	2005883a 	mov	r2,r4
    7c34:	003f2706 	br	78d4 <_realloc_r+0x148>
    7c38:	80800217 	ldw	r2,8(r16)
    7c3c:	31800920 	cmpeqi	r6,r6,36
    7c40:	38800415 	stw	r2,16(r7)
    7c44:	80800317 	ldw	r2,12(r16)
    7c48:	38800515 	stw	r2,20(r7)
    7c4c:	80c00417 	ldw	r3,16(r16)
    7c50:	3000121e 	bne	r6,zero,7c9c <_realloc_r+0x510>
    7c54:	38800604 	addi	r2,r7,24
    7c58:	84000404 	addi	r16,r16,16
    7c5c:	003f1d06 	br	78d4 <_realloc_r+0x148>
    7c60:	91000415 	stw	r4,16(r18)
    7c64:	81000517 	ldw	r4,20(r16)
    7c68:	80c00604 	addi	r3,r16,24
    7c6c:	90800604 	addi	r2,r18,24
    7c70:	91000515 	stw	r4,20(r18)
    7c74:	81000617 	ldw	r4,24(r16)
    7c78:	003f5406 	br	79cc <_realloc_r+0x240>
    7c7c:	9005883a 	mov	r2,r18
    7c80:	003fd006 	br	7bc4 <_realloc_r+0x438>
    7c84:	800b883a 	mov	r5,r16
    7c88:	9009883a 	mov	r4,r18
    7c8c:	d9c00015 	stw	r7,0(sp)
    7c90:	00063240 	call	6324 <memmove>
    7c94:	d9c00017 	ldw	r7,0(sp)
    7c98:	003fcf06 	br	7bd8 <_realloc_r+0x44c>
    7c9c:	84000604 	addi	r16,r16,24
    7ca0:	38c00615 	stw	r3,24(r7)
    7ca4:	80ffff17 	ldw	r3,-4(r16)
    7ca8:	38800804 	addi	r2,r7,32
    7cac:	38c00715 	stw	r3,28(r7)
    7cb0:	80c00017 	ldw	r3,0(r16)
    7cb4:	003f0706 	br	78d4 <_realloc_r+0x148>
    7cb8:	80800217 	ldw	r2,8(r16)
    7cbc:	31800920 	cmpeqi	r6,r6,36
    7cc0:	38800415 	stw	r2,16(r7)
    7cc4:	80800317 	ldw	r2,12(r16)
    7cc8:	38800515 	stw	r2,20(r7)
    7ccc:	80c00417 	ldw	r3,16(r16)
    7cd0:	3000031e 	bne	r6,zero,7ce0 <_realloc_r+0x554>
    7cd4:	38800604 	addi	r2,r7,24
    7cd8:	84000404 	addi	r16,r16,16
    7cdc:	003fb906 	br	7bc4 <_realloc_r+0x438>
    7ce0:	84000604 	addi	r16,r16,24
    7ce4:	38c00615 	stw	r3,24(r7)
    7ce8:	80ffff17 	ldw	r3,-4(r16)
    7cec:	38800804 	addi	r2,r7,32
    7cf0:	38c00715 	stw	r3,28(r7)
    7cf4:	80c00017 	ldw	r3,0(r16)
    7cf8:	003fb206 	br	7bc4 <_realloc_r+0x438>

00007cfc <_sbrk_r>:
    7cfc:	f811883a 	mov	r8,ra
    7d00:	000e1ac0 	call	e1ac <_mcount>
    7d04:	403f883a 	mov	ra,r8
    7d08:	defffe04 	addi	sp,sp,-8
    7d0c:	dfc00115 	stw	ra,4(sp)
    7d10:	dc000015 	stw	r16,0(sp)
    7d14:	00800074 	movhi	r2,1
    7d18:	2021883a 	mov	r16,r4
    7d1c:	2809883a 	mov	r4,r5
    7d20:	1008e315 	stw	zero,9100(r2)
    7d24:	000e3500 	call	e350 <sbrk>
    7d28:	10ffffd8 	cmpnei	r3,r2,-1
    7d2c:	18000426 	beq	r3,zero,7d40 <_sbrk_r+0x44>
    7d30:	dfc00117 	ldw	ra,4(sp)
    7d34:	dc000017 	ldw	r16,0(sp)
    7d38:	dec00204 	addi	sp,sp,8
    7d3c:	f800283a 	ret
    7d40:	00c00074 	movhi	r3,1
    7d44:	18c8e317 	ldw	r3,9100(r3)
    7d48:	183ff926 	beq	r3,zero,7d30 <_sbrk_r+0x34>
    7d4c:	80c00015 	stw	r3,0(r16)
    7d50:	dfc00117 	ldw	ra,4(sp)
    7d54:	dc000017 	ldw	r16,0(sp)
    7d58:	dec00204 	addi	sp,sp,8
    7d5c:	f800283a 	ret

00007d60 <__sread>:
    7d60:	f811883a 	mov	r8,ra
    7d64:	000e1ac0 	call	e1ac <_mcount>
    7d68:	403f883a 	mov	ra,r8
    7d6c:	defffe04 	addi	sp,sp,-8
    7d70:	dfc00115 	stw	ra,4(sp)
    7d74:	dc000015 	stw	r16,0(sp)
    7d78:	2821883a 	mov	r16,r5
    7d7c:	2940038f 	ldh	r5,14(r5)
    7d80:	0009d700 	call	9d70 <_read_r>
    7d84:	10000716 	blt	r2,zero,7da4 <__sread+0x44>
    7d88:	80c01417 	ldw	r3,80(r16)
    7d8c:	1887883a 	add	r3,r3,r2
    7d90:	80c01415 	stw	r3,80(r16)
    7d94:	dfc00117 	ldw	ra,4(sp)
    7d98:	dc000017 	ldw	r16,0(sp)
    7d9c:	dec00204 	addi	sp,sp,8
    7da0:	f800283a 	ret
    7da4:	80c0030b 	ldhu	r3,12(r16)
    7da8:	18fbffcc 	andi	r3,r3,61439
    7dac:	80c0030d 	sth	r3,12(r16)
    7db0:	dfc00117 	ldw	ra,4(sp)
    7db4:	dc000017 	ldw	r16,0(sp)
    7db8:	dec00204 	addi	sp,sp,8
    7dbc:	f800283a 	ret

00007dc0 <__seofread>:
    7dc0:	f811883a 	mov	r8,ra
    7dc4:	000e1ac0 	call	e1ac <_mcount>
    7dc8:	403f883a 	mov	ra,r8
    7dcc:	0005883a 	mov	r2,zero
    7dd0:	f800283a 	ret

00007dd4 <__swrite>:
    7dd4:	f811883a 	mov	r8,ra
    7dd8:	000e1ac0 	call	e1ac <_mcount>
    7ddc:	403f883a 	mov	ra,r8
    7de0:	defffb04 	addi	sp,sp,-20
    7de4:	dfc00415 	stw	ra,16(sp)
    7de8:	dcc00315 	stw	r19,12(sp)
    7dec:	dc800215 	stw	r18,8(sp)
    7df0:	dc400115 	stw	r17,4(sp)
    7df4:	dc000015 	stw	r16,0(sp)
    7df8:	2880030b 	ldhu	r2,12(r5)
    7dfc:	2821883a 	mov	r16,r5
    7e00:	2023883a 	mov	r17,r4
    7e04:	10c0400c 	andi	r3,r2,256
    7e08:	2940038f 	ldh	r5,14(r5)
    7e0c:	3025883a 	mov	r18,r6
    7e10:	3827883a 	mov	r19,r7
    7e14:	18000c1e 	bne	r3,zero,7e48 <__swrite+0x74>
    7e18:	10bbffcc 	andi	r2,r2,61439
    7e1c:	980f883a 	mov	r7,r19
    7e20:	900d883a 	mov	r6,r18
    7e24:	8809883a 	mov	r4,r17
    7e28:	8080030d 	sth	r2,12(r16)
    7e2c:	dfc00417 	ldw	ra,16(sp)
    7e30:	dcc00317 	ldw	r19,12(sp)
    7e34:	dc800217 	ldw	r18,8(sp)
    7e38:	dc400117 	ldw	r17,4(sp)
    7e3c:	dc000017 	ldw	r16,0(sp)
    7e40:	dec00504 	addi	sp,sp,20
    7e44:	00094341 	jmpi	9434 <_write_r>
    7e48:	01c00084 	movi	r7,2
    7e4c:	000d883a 	mov	r6,zero
    7e50:	0009c980 	call	9c98 <_lseek_r>
    7e54:	8080030b 	ldhu	r2,12(r16)
    7e58:	8140038f 	ldh	r5,14(r16)
    7e5c:	003fee06 	br	7e18 <__swrite+0x44>

00007e60 <__sseek>:
    7e60:	f811883a 	mov	r8,ra
    7e64:	000e1ac0 	call	e1ac <_mcount>
    7e68:	403f883a 	mov	ra,r8
    7e6c:	defffe04 	addi	sp,sp,-8
    7e70:	dfc00115 	stw	ra,4(sp)
    7e74:	dc000015 	stw	r16,0(sp)
    7e78:	2821883a 	mov	r16,r5
    7e7c:	2940038f 	ldh	r5,14(r5)
    7e80:	0009c980 	call	9c98 <_lseek_r>
    7e84:	10ffffd8 	cmpnei	r3,r2,-1
    7e88:	18000826 	beq	r3,zero,7eac <__sseek+0x4c>
    7e8c:	80c0030b 	ldhu	r3,12(r16)
    7e90:	80801415 	stw	r2,80(r16)
    7e94:	18c40014 	ori	r3,r3,4096
    7e98:	80c0030d 	sth	r3,12(r16)
    7e9c:	dfc00117 	ldw	ra,4(sp)
    7ea0:	dc000017 	ldw	r16,0(sp)
    7ea4:	dec00204 	addi	sp,sp,8
    7ea8:	f800283a 	ret
    7eac:	80c0030b 	ldhu	r3,12(r16)
    7eb0:	18fbffcc 	andi	r3,r3,61439
    7eb4:	80c0030d 	sth	r3,12(r16)
    7eb8:	dfc00117 	ldw	ra,4(sp)
    7ebc:	dc000017 	ldw	r16,0(sp)
    7ec0:	dec00204 	addi	sp,sp,8
    7ec4:	f800283a 	ret

00007ec8 <__sclose>:
    7ec8:	f811883a 	mov	r8,ra
    7ecc:	000e1ac0 	call	e1ac <_mcount>
    7ed0:	403f883a 	mov	ra,r8
    7ed4:	2940038f 	ldh	r5,14(r5)
    7ed8:	00094a41 	jmpi	94a4 <_close_r>

00007edc <__sprint_r.part.0>:
    7edc:	f811883a 	mov	r8,ra
    7ee0:	000e1ac0 	call	e1ac <_mcount>
    7ee4:	403f883a 	mov	ra,r8
    7ee8:	defff604 	addi	sp,sp,-40
    7eec:	dfc00915 	stw	ra,36(sp)
    7ef0:	df000815 	stw	fp,32(sp)
    7ef4:	ddc00715 	stw	r23,28(sp)
    7ef8:	dd800615 	stw	r22,24(sp)
    7efc:	dd400515 	stw	r21,20(sp)
    7f00:	dd000415 	stw	r20,16(sp)
    7f04:	dcc00315 	stw	r19,12(sp)
    7f08:	dc800215 	stw	r18,8(sp)
    7f0c:	dc400115 	stw	r17,4(sp)
    7f10:	dc000015 	stw	r16,0(sp)
    7f14:	28801917 	ldw	r2,100(r5)
    7f18:	3027883a 	mov	r19,r6
    7f1c:	1088000c 	andi	r2,r2,8192
    7f20:	10002c26 	beq	r2,zero,7fd4 <__sprint_r.part.0+0xf8>
    7f24:	30800217 	ldw	r2,8(r6)
    7f28:	35000017 	ldw	r20,0(r6)
    7f2c:	2821883a 	mov	r16,r5
    7f30:	2023883a 	mov	r17,r4
    7f34:	05bfff04 	movi	r22,-4
    7f38:	10002426 	beq	r2,zero,7fcc <__sprint_r.part.0+0xf0>
    7f3c:	a5400117 	ldw	r21,4(r20)
    7f40:	a5c00017 	ldw	r23,0(r20)
    7f44:	a824d0ba 	srli	r18,r21,2
    7f48:	90001b26 	beq	r18,zero,7fb8 <__sprint_r.part.0+0xdc>
    7f4c:	0039883a 	mov	fp,zero
    7f50:	00000206 	br	7f5c <__sprint_r.part.0+0x80>
    7f54:	bdc00104 	addi	r23,r23,4
    7f58:	97001626 	beq	r18,fp,7fb4 <__sprint_r.part.0+0xd8>
    7f5c:	b9400017 	ldw	r5,0(r23)
    7f60:	800d883a 	mov	r6,r16
    7f64:	8809883a 	mov	r4,r17
    7f68:	00099fc0 	call	99fc <_fputwc_r>
    7f6c:	10bfffe0 	cmpeqi	r2,r2,-1
    7f70:	e7000044 	addi	fp,fp,1
    7f74:	103ff726 	beq	r2,zero,7f54 <__sprint_r.part.0+0x78>
    7f78:	00bfffc4 	movi	r2,-1
    7f7c:	98000215 	stw	zero,8(r19)
    7f80:	98000115 	stw	zero,4(r19)
    7f84:	dfc00917 	ldw	ra,36(sp)
    7f88:	df000817 	ldw	fp,32(sp)
    7f8c:	ddc00717 	ldw	r23,28(sp)
    7f90:	dd800617 	ldw	r22,24(sp)
    7f94:	dd400517 	ldw	r21,20(sp)
    7f98:	dd000417 	ldw	r20,16(sp)
    7f9c:	dcc00317 	ldw	r19,12(sp)
    7fa0:	dc800217 	ldw	r18,8(sp)
    7fa4:	dc400117 	ldw	r17,4(sp)
    7fa8:	dc000017 	ldw	r16,0(sp)
    7fac:	dec00a04 	addi	sp,sp,40
    7fb0:	f800283a 	ret
    7fb4:	98800217 	ldw	r2,8(r19)
    7fb8:	adaa703a 	and	r21,r21,r22
    7fbc:	1545c83a 	sub	r2,r2,r21
    7fc0:	98800215 	stw	r2,8(r19)
    7fc4:	a5000204 	addi	r20,r20,8
    7fc8:	103fdc1e 	bne	r2,zero,7f3c <__sprint_r.part.0+0x60>
    7fcc:	0005883a 	mov	r2,zero
    7fd0:	003fea06 	br	7f7c <__sprint_r.part.0+0xa0>
    7fd4:	00051a00 	call	51a0 <__sfvwrite_r>
    7fd8:	003fe806 	br	7f7c <__sprint_r.part.0+0xa0>

00007fdc <__sprint_r>:
    7fdc:	f811883a 	mov	r8,ra
    7fe0:	000e1ac0 	call	e1ac <_mcount>
    7fe4:	403f883a 	mov	ra,r8
    7fe8:	30c00217 	ldw	r3,8(r6)
    7fec:	18000126 	beq	r3,zero,7ff4 <__sprint_r+0x18>
    7ff0:	0007edc1 	jmpi	7edc <__sprint_r.part.0>
    7ff4:	0005883a 	mov	r2,zero
    7ff8:	30000115 	stw	zero,4(r6)
    7ffc:	f800283a 	ret

00008000 <___vfiprintf_internal_r>:
    8000:	f811883a 	mov	r8,ra
    8004:	000e1ac0 	call	e1ac <_mcount>
    8008:	403f883a 	mov	ra,r8
    800c:	deffcf04 	addi	sp,sp,-196
    8010:	dfc03015 	stw	ra,192(sp)
    8014:	df002f15 	stw	fp,188(sp)
    8018:	ddc02e15 	stw	r23,184(sp)
    801c:	dd802d15 	stw	r22,180(sp)
    8020:	dd402c15 	stw	r21,176(sp)
    8024:	dd002b15 	stw	r20,172(sp)
    8028:	dcc02a15 	stw	r19,168(sp)
    802c:	dc802915 	stw	r18,164(sp)
    8030:	dc402815 	stw	r17,160(sp)
    8034:	dc002715 	stw	r16,156(sp)
    8038:	d9c00415 	stw	r7,16(sp)
    803c:	202d883a 	mov	r22,r4
    8040:	282b883a 	mov	r21,r5
    8044:	3029883a 	mov	r20,r6
    8048:	20000226 	beq	r4,zero,8054 <___vfiprintf_internal_r+0x54>
    804c:	20800e17 	ldw	r2,56(r4)
    8050:	1001bb26 	beq	r2,zero,8740 <___vfiprintf_internal_r+0x740>
    8054:	a880030b 	ldhu	r2,12(r21)
    8058:	10c8000c 	andi	r3,r2,8192
    805c:	1800061e 	bne	r3,zero,8078 <___vfiprintf_internal_r+0x78>
    8060:	a8c01917 	ldw	r3,100(r21)
    8064:	0137ffc4 	movi	r4,-8193
    8068:	10880014 	ori	r2,r2,8192
    806c:	1906703a 	and	r3,r3,r4
    8070:	a880030d 	sth	r2,12(r21)
    8074:	a8c01915 	stw	r3,100(r21)
    8078:	10c0020c 	andi	r3,r2,8
    807c:	18010626 	beq	r3,zero,8498 <___vfiprintf_internal_r+0x498>
    8080:	a8c00417 	ldw	r3,16(r21)
    8084:	18010426 	beq	r3,zero,8498 <___vfiprintf_internal_r+0x498>
    8088:	1080068c 	andi	r2,r2,26
    808c:	10800298 	cmpnei	r2,r2,10
    8090:	10010926 	beq	r2,zero,84b8 <___vfiprintf_internal_r+0x4b8>
    8094:	dc801704 	addi	r18,sp,92
    8098:	dc800a15 	stw	r18,40(sp)
    809c:	d8000c15 	stw	zero,48(sp)
    80a0:	d8000b15 	stw	zero,44(sp)
    80a4:	9021883a 	mov	r16,r18
    80a8:	d8000515 	stw	zero,20(sp)
    80ac:	d8000115 	stw	zero,4(sp)
    80b0:	a0800007 	ldb	r2,0(r20)
    80b4:	1000e626 	beq	r2,zero,8450 <___vfiprintf_internal_r+0x450>
    80b8:	a023883a 	mov	r17,r20
    80bc:	00000306 	br	80cc <___vfiprintf_internal_r+0xcc>
    80c0:	88800047 	ldb	r2,1(r17)
    80c4:	8c400044 	addi	r17,r17,1
    80c8:	10013126 	beq	r2,zero,8590 <___vfiprintf_internal_r+0x590>
    80cc:	10800958 	cmpnei	r2,r2,37
    80d0:	103ffb1e 	bne	r2,zero,80c0 <___vfiprintf_internal_r+0xc0>
    80d4:	8d27c83a 	sub	r19,r17,r20
    80d8:	8d012f1e 	bne	r17,r20,8598 <___vfiprintf_internal_r+0x598>
    80dc:	88800003 	ldbu	r2,0(r17)
    80e0:	10803fcc 	andi	r2,r2,255
    80e4:	1080201c 	xori	r2,r2,128
    80e8:	10bfe004 	addi	r2,r2,-128
    80ec:	1000d826 	beq	r2,zero,8450 <___vfiprintf_internal_r+0x450>
    80f0:	88800047 	ldb	r2,1(r17)
    80f4:	8d000044 	addi	r20,r17,1
    80f8:	d8000945 	stb	zero,37(sp)
    80fc:	000b883a 	mov	r5,zero
    8100:	000d883a 	mov	r6,zero
    8104:	023fffc4 	movi	r8,-1
    8108:	0023883a 	mov	r17,zero
    810c:	001b883a 	mov	r13,zero
    8110:	a5000044 	addi	r20,r20,1
    8114:	10fff804 	addi	r3,r2,-32
    8118:	19001668 	cmpgeui	r4,r3,89
    811c:	20006a1e 	bne	r4,zero,82c8 <___vfiprintf_internal_r+0x2c8>
    8120:	180690ba 	slli	r3,r3,2
    8124:	01000074 	movhi	r4,1
    8128:	1909883a 	add	r4,r3,r4
    812c:	20e04d17 	ldw	r3,-32460(r4)
    8130:	1800683a 	jmp	r3
    8134:	00008a60 	cmpeqi	zero,zero,553
    8138:	000082c8 	cmpgei	zero,zero,523
    813c:	000082c8 	cmpgei	zero,zero,523
    8140:	00008a54 	movui	zero,553
    8144:	000082c8 	cmpgei	zero,zero,523
    8148:	000082c8 	cmpgei	zero,zero,523
    814c:	000082c8 	cmpgei	zero,zero,523
    8150:	000082c8 	cmpgei	zero,zero,523
    8154:	000082c8 	cmpgei	zero,zero,523
    8158:	000082c8 	cmpgei	zero,zero,523
    815c:	00008a2c 	andhi	zero,zero,552
    8160:	00008a1c 	xori	zero,zero,552
    8164:	000082c8 	cmpgei	zero,zero,523
    8168:	00008a04 	movi	zero,552
    816c:	000089c0 	call	89c <___vfprintf_internal_r+0x8c>
    8170:	000082c8 	cmpgei	zero,zero,523
    8174:	000089b4 	movhi	zero,550
    8178:	00008298 	cmpnei	zero,zero,522
    817c:	00008298 	cmpnei	zero,zero,522
    8180:	00008298 	cmpnei	zero,zero,522
    8184:	00008298 	cmpnei	zero,zero,522
    8188:	00008298 	cmpnei	zero,zero,522
    818c:	00008298 	cmpnei	zero,zero,522
    8190:	00008298 	cmpnei	zero,zero,522
    8194:	00008298 	cmpnei	zero,zero,522
    8198:	00008298 	cmpnei	zero,zero,522
    819c:	000082c8 	cmpgei	zero,zero,523
    81a0:	000082c8 	cmpgei	zero,zero,523
    81a4:	000082c8 	cmpgei	zero,zero,523
    81a8:	000082c8 	cmpgei	zero,zero,523
    81ac:	000082c8 	cmpgei	zero,zero,523
    81b0:	000082c8 	cmpgei	zero,zero,523
    81b4:	000082c8 	cmpgei	zero,zero,523
    81b8:	000082c8 	cmpgei	zero,zero,523
    81bc:	000082c8 	cmpgei	zero,zero,523
    81c0:	000082c8 	cmpgei	zero,zero,523
    81c4:	000088b0 	cmpltui	zero,zero,546
    81c8:	000082c8 	cmpgei	zero,zero,523
    81cc:	000082c8 	cmpgei	zero,zero,523
    81d0:	000082c8 	cmpgei	zero,zero,523
    81d4:	000082c8 	cmpgei	zero,zero,523
    81d8:	000082c8 	cmpgei	zero,zero,523
    81dc:	000082c8 	cmpgei	zero,zero,523
    81e0:	000082c8 	cmpgei	zero,zero,523
    81e4:	000082c8 	cmpgei	zero,zero,523
    81e8:	000082c8 	cmpgei	zero,zero,523
    81ec:	000082c8 	cmpgei	zero,zero,523
    81f0:	00008528 	cmpgeui	zero,zero,532
    81f4:	000082c8 	cmpgei	zero,zero,523
    81f8:	000082c8 	cmpgei	zero,zero,523
    81fc:	000082c8 	cmpgei	zero,zero,523
    8200:	000082c8 	cmpgei	zero,zero,523
    8204:	000082c8 	cmpgei	zero,zero,523
    8208:	00008500 	call	850 <___vfprintf_internal_r+0x40>
    820c:	000082c8 	cmpgei	zero,zero,523
    8210:	000082c8 	cmpgei	zero,zero,523
    8214:	00008ab4 	movhi	zero,554
    8218:	000082c8 	cmpgei	zero,zero,523
    821c:	000082c8 	cmpgei	zero,zero,523
    8220:	000082c8 	cmpgei	zero,zero,523
    8224:	000082c8 	cmpgei	zero,zero,523
    8228:	000082c8 	cmpgei	zero,zero,523
    822c:	000082c8 	cmpgei	zero,zero,523
    8230:	000082c8 	cmpgei	zero,zero,523
    8234:	000082c8 	cmpgei	zero,zero,523
    8238:	000082c8 	cmpgei	zero,zero,523
    823c:	000082c8 	cmpgei	zero,zero,523
    8240:	00008a8c 	andi	zero,zero,554
    8244:	00008748 	cmpgei	zero,zero,541
    8248:	000082c8 	cmpgei	zero,zero,523
    824c:	000082c8 	cmpgei	zero,zero,523
    8250:	000082c8 	cmpgei	zero,zero,523
    8254:	000087bc 	xorhi	zero,zero,542
    8258:	00008748 	cmpgei	zero,zero,541
    825c:	000082c8 	cmpgei	zero,zero,523
    8260:	000082c8 	cmpgei	zero,zero,523
    8264:	00008b38 	rdprs	zero,zero,556
    8268:	000082c8 	cmpgei	zero,zero,523
    826c:	00008afc 	xorhi	zero,zero,555
    8270:	0000852c 	andhi	zero,zero,532
    8274:	00008874 	movhi	zero,545
    8278:	00008868 	cmpgeui	zero,zero,545
    827c:	000082c8 	cmpgei	zero,zero,523
    8280:	00008810 	cmplti	zero,zero,544
    8284:	000082c8 	cmpgei	zero,zero,523
    8288:	00008504 	movi	zero,532
    828c:	000082c8 	cmpgei	zero,zero,523
    8290:	000082c8 	cmpgei	zero,zero,523
    8294:	000087c8 	cmpgei	zero,zero,543
    8298:	0023883a 	mov	r17,zero
    829c:	10fff404 	addi	r3,r2,-48
    82a0:	a0800007 	ldb	r2,0(r20)
    82a4:	8c4002a4 	muli	r17,r17,10
    82a8:	a5000044 	addi	r20,r20,1
    82ac:	1c63883a 	add	r17,r3,r17
    82b0:	10fff404 	addi	r3,r2,-48
    82b4:	190002b0 	cmpltui	r4,r3,10
    82b8:	203ff91e 	bne	r4,zero,82a0 <___vfiprintf_internal_r+0x2a0>
    82bc:	10fff804 	addi	r3,r2,-32
    82c0:	19001668 	cmpgeui	r4,r3,89
    82c4:	203f9626 	beq	r4,zero,8120 <___vfiprintf_internal_r+0x120>
    82c8:	29403fcc 	andi	r5,r5,255
    82cc:	2803eb1e 	bne	r5,zero,927c <___vfiprintf_internal_r+0x127c>
    82d0:	10005f26 	beq	r2,zero,8450 <___vfiprintf_internal_r+0x450>
    82d4:	d8800d05 	stb	r2,52(sp)
    82d8:	d8000945 	stb	zero,37(sp)
    82dc:	05c00044 	movi	r23,1
    82e0:	07000044 	movi	fp,1
    82e4:	dcc00d04 	addi	r19,sp,52
    82e8:	db400015 	stw	r13,0(sp)
    82ec:	0011883a 	mov	r8,zero
    82f0:	d8800017 	ldw	r2,0(sp)
    82f4:	1380008c 	andi	r14,r2,2
    82f8:	70000126 	beq	r14,zero,8300 <___vfiprintf_internal_r+0x300>
    82fc:	bdc00084 	addi	r23,r23,2
    8300:	d8800017 	ldw	r2,0(sp)
    8304:	d9000b17 	ldw	r4,44(sp)
    8308:	1340210c 	andi	r13,r2,132
    830c:	21800044 	addi	r6,r4,1
    8310:	d8800c17 	ldw	r2,48(sp)
    8314:	300b883a 	mov	r5,r6
    8318:	6800021e 	bne	r13,zero,8324 <___vfiprintf_internal_r+0x324>
    831c:	8dc7c83a 	sub	r3,r17,r23
    8320:	00c2e016 	blt	zero,r3,8ea4 <___vfiprintf_internal_r+0xea4>
    8324:	d8c00947 	ldb	r3,37(sp)
    8328:	81800204 	addi	r6,r16,8
    832c:	18000d26 	beq	r3,zero,8364 <___vfiprintf_internal_r+0x364>
    8330:	d8c00944 	addi	r3,sp,37
    8334:	10800044 	addi	r2,r2,1
    8338:	80c00015 	stw	r3,0(r16)
    833c:	00c00044 	movi	r3,1
    8340:	80c00115 	stw	r3,4(r16)
    8344:	d8800c15 	stw	r2,48(sp)
    8348:	d9400b15 	stw	r5,44(sp)
    834c:	28c00208 	cmpgei	r3,r5,8
    8350:	1802981e 	bne	r3,zero,8db4 <___vfiprintf_internal_r+0xdb4>
    8354:	2809883a 	mov	r4,r5
    8358:	3021883a 	mov	r16,r6
    835c:	29400044 	addi	r5,r5,1
    8360:	31800204 	addi	r6,r6,8
    8364:	70001826 	beq	r14,zero,83c8 <___vfiprintf_internal_r+0x3c8>
    8368:	d8c00984 	addi	r3,sp,38
    836c:	10800084 	addi	r2,r2,2
    8370:	80c00015 	stw	r3,0(r16)
    8374:	00c00084 	movi	r3,2
    8378:	80c00115 	stw	r3,4(r16)
    837c:	d8800c15 	stw	r2,48(sp)
    8380:	d9400b15 	stw	r5,44(sp)
    8384:	28c00208 	cmpgei	r3,r5,8
    8388:	1802a226 	beq	r3,zero,8e14 <___vfiprintf_internal_r+0xe14>
    838c:	10032026 	beq	r2,zero,9010 <___vfiprintf_internal_r+0x1010>
    8390:	d9800a04 	addi	r6,sp,40
    8394:	a80b883a 	mov	r5,r21
    8398:	b009883a 	mov	r4,r22
    839c:	da000315 	stw	r8,12(sp)
    83a0:	db400215 	stw	r13,8(sp)
    83a4:	0007edc0 	call	7edc <__sprint_r.part.0>
    83a8:	10002b1e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    83ac:	d9000b17 	ldw	r4,44(sp)
    83b0:	d8800c17 	ldw	r2,48(sp)
    83b4:	da000317 	ldw	r8,12(sp)
    83b8:	db400217 	ldw	r13,8(sp)
    83bc:	d9801904 	addi	r6,sp,100
    83c0:	21400044 	addi	r5,r4,1
    83c4:	9021883a 	mov	r16,r18
    83c8:	6b402018 	cmpnei	r13,r13,128
    83cc:	6801e326 	beq	r13,zero,8b5c <___vfiprintf_internal_r+0xb5c>
    83d0:	4711c83a 	sub	r8,r8,fp
    83d4:	02022216 	blt	zero,r8,8c60 <___vfiprintf_internal_r+0xc60>
    83d8:	e085883a 	add	r2,fp,r2
    83dc:	d9400b15 	stw	r5,44(sp)
    83e0:	84c00015 	stw	r19,0(r16)
    83e4:	87000115 	stw	fp,4(r16)
    83e8:	d8800c15 	stw	r2,48(sp)
    83ec:	29400210 	cmplti	r5,r5,8
    83f0:	2800081e 	bne	r5,zero,8414 <___vfiprintf_internal_r+0x414>
    83f4:	10009826 	beq	r2,zero,8658 <___vfiprintf_internal_r+0x658>
    83f8:	d9800a04 	addi	r6,sp,40
    83fc:	a80b883a 	mov	r5,r21
    8400:	b009883a 	mov	r4,r22
    8404:	0007edc0 	call	7edc <__sprint_r.part.0>
    8408:	1000131e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    840c:	d8800c17 	ldw	r2,48(sp)
    8410:	900d883a 	mov	r6,r18
    8414:	d8c00017 	ldw	r3,0(sp)
    8418:	1cc0010c 	andi	r19,r3,4
    841c:	98000226 	beq	r19,zero,8428 <___vfiprintf_internal_r+0x428>
    8420:	8de1c83a 	sub	r16,r17,r23
    8424:	04009316 	blt	zero,r16,8674 <___vfiprintf_internal_r+0x674>
    8428:	8dc0010e 	bge	r17,r23,8430 <___vfiprintf_internal_r+0x430>
    842c:	b823883a 	mov	r17,r23
    8430:	d8c00117 	ldw	r3,4(sp)
    8434:	1c47883a 	add	r3,r3,r17
    8438:	d8c00115 	stw	r3,4(sp)
    843c:	1002531e 	bne	r2,zero,8d8c <___vfiprintf_internal_r+0xd8c>
    8440:	a0800007 	ldb	r2,0(r20)
    8444:	d8000b15 	stw	zero,44(sp)
    8448:	9021883a 	mov	r16,r18
    844c:	103f1a1e 	bne	r2,zero,80b8 <___vfiprintf_internal_r+0xb8>
    8450:	d8800c17 	ldw	r2,48(sp)
    8454:	10038b1e 	bne	r2,zero,9284 <___vfiprintf_internal_r+0x1284>
    8458:	a880030b 	ldhu	r2,12(r21)
    845c:	1080100c 	andi	r2,r2,64
    8460:	1003a31e 	bne	r2,zero,92f0 <___vfiprintf_internal_r+0x12f0>
    8464:	d8800117 	ldw	r2,4(sp)
    8468:	dfc03017 	ldw	ra,192(sp)
    846c:	df002f17 	ldw	fp,188(sp)
    8470:	ddc02e17 	ldw	r23,184(sp)
    8474:	dd802d17 	ldw	r22,180(sp)
    8478:	dd402c17 	ldw	r21,176(sp)
    847c:	dd002b17 	ldw	r20,172(sp)
    8480:	dcc02a17 	ldw	r19,168(sp)
    8484:	dc802917 	ldw	r18,164(sp)
    8488:	dc402817 	ldw	r17,160(sp)
    848c:	dc002717 	ldw	r16,156(sp)
    8490:	dec03104 	addi	sp,sp,196
    8494:	f800283a 	ret
    8498:	a80b883a 	mov	r5,r21
    849c:	b009883a 	mov	r4,r22
    84a0:	0002a040 	call	2a04 <__swsetup_r>
    84a4:	1003921e 	bne	r2,zero,92f0 <___vfiprintf_internal_r+0x12f0>
    84a8:	a880030b 	ldhu	r2,12(r21)
    84ac:	1080068c 	andi	r2,r2,26
    84b0:	10800298 	cmpnei	r2,r2,10
    84b4:	103ef71e 	bne	r2,zero,8094 <___vfiprintf_internal_r+0x94>
    84b8:	a880038f 	ldh	r2,14(r21)
    84bc:	103ef516 	blt	r2,zero,8094 <___vfiprintf_internal_r+0x94>
    84c0:	d9c00417 	ldw	r7,16(sp)
    84c4:	a00d883a 	mov	r6,r20
    84c8:	a80b883a 	mov	r5,r21
    84cc:	b009883a 	mov	r4,r22
    84d0:	dfc03017 	ldw	ra,192(sp)
    84d4:	df002f17 	ldw	fp,188(sp)
    84d8:	ddc02e17 	ldw	r23,184(sp)
    84dc:	dd802d17 	ldw	r22,180(sp)
    84e0:	dd402c17 	ldw	r21,176(sp)
    84e4:	dd002b17 	ldw	r20,172(sp)
    84e8:	dcc02a17 	ldw	r19,168(sp)
    84ec:	dc802917 	ldw	r18,164(sp)
    84f0:	dc402817 	ldw	r17,160(sp)
    84f4:	dc002717 	ldw	r16,156(sp)
    84f8:	dec03104 	addi	sp,sp,196
    84fc:	00093681 	jmpi	9368 <__sbprintf>
    8500:	6b400414 	ori	r13,r13,16
    8504:	6880080c 	andi	r2,r13,32
    8508:	10004726 	beq	r2,zero,8628 <___vfiprintf_internal_r+0x628>
    850c:	d8c00417 	ldw	r3,16(sp)
    8510:	00800044 	movi	r2,1
    8514:	1dc00017 	ldw	r23,0(r3)
    8518:	1f000117 	ldw	fp,4(r3)
    851c:	18c00204 	addi	r3,r3,8
    8520:	d8c00415 	stw	r3,16(sp)
    8524:	00000906 	br	854c <___vfiprintf_internal_r+0x54c>
    8528:	6b400414 	ori	r13,r13,16
    852c:	6880080c 	andi	r2,r13,32
    8530:	10003126 	beq	r2,zero,85f8 <___vfiprintf_internal_r+0x5f8>
    8534:	d8c00417 	ldw	r3,16(sp)
    8538:	0005883a 	mov	r2,zero
    853c:	1dc00017 	ldw	r23,0(r3)
    8540:	1f000117 	ldw	fp,4(r3)
    8544:	18c00204 	addi	r3,r3,8
    8548:	d8c00415 	stw	r3,16(sp)
    854c:	d8000945 	stb	zero,37(sp)
    8550:	40ffffe0 	cmpeqi	r3,r8,-1
    8554:	001d883a 	mov	r14,zero
    8558:	1800f01e 	bne	r3,zero,891c <___vfiprintf_internal_r+0x91c>
    855c:	04ffdfc4 	movi	r19,-129
    8560:	6cc8703a 	and	r4,r13,r19
    8564:	bf06b03a 	or	r3,r23,fp
    8568:	d9000015 	stw	r4,0(sp)
    856c:	18022e1e 	bne	r3,zero,8e28 <___vfiprintf_internal_r+0xe28>
    8570:	4001f11e 	bne	r8,zero,8d38 <___vfiprintf_internal_r+0xd38>
    8574:	10029c1e 	bne	r2,zero,8fe8 <___vfiprintf_internal_r+0xfe8>
    8578:	6f00004c 	andi	fp,r13,1
    857c:	e002ba26 	beq	fp,zero,9068 <___vfiprintf_internal_r+0x1068>
    8580:	00800c04 	movi	r2,48
    8584:	d88016c5 	stb	r2,91(sp)
    8588:	dcc016c4 	addi	r19,sp,91
    858c:	00010006 	br	8990 <___vfiprintf_internal_r+0x990>
    8590:	8d27c83a 	sub	r19,r17,r20
    8594:	8d3fae26 	beq	r17,r20,8450 <___vfiprintf_internal_r+0x450>
    8598:	d8c00c17 	ldw	r3,48(sp)
    859c:	d8800b17 	ldw	r2,44(sp)
    85a0:	85000015 	stw	r20,0(r16)
    85a4:	98c7883a 	add	r3,r19,r3
    85a8:	10800044 	addi	r2,r2,1
    85ac:	d8800b15 	stw	r2,44(sp)
    85b0:	84c00115 	stw	r19,4(r16)
    85b4:	d8c00c15 	stw	r3,48(sp)
    85b8:	10800208 	cmpgei	r2,r2,8
    85bc:	1000061e 	bne	r2,zero,85d8 <___vfiprintf_internal_r+0x5d8>
    85c0:	84000204 	addi	r16,r16,8
    85c4:	d8c00117 	ldw	r3,4(sp)
    85c8:	88800003 	ldbu	r2,0(r17)
    85cc:	1cc7883a 	add	r3,r3,r19
    85d0:	d8c00115 	stw	r3,4(sp)
    85d4:	003ec206 	br	80e0 <___vfiprintf_internal_r+0xe0>
    85d8:	18027f26 	beq	r3,zero,8fd8 <___vfiprintf_internal_r+0xfd8>
    85dc:	d9800a04 	addi	r6,sp,40
    85e0:	a80b883a 	mov	r5,r21
    85e4:	b009883a 	mov	r4,r22
    85e8:	0007edc0 	call	7edc <__sprint_r.part.0>
    85ec:	103f9a1e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    85f0:	9021883a 	mov	r16,r18
    85f4:	003ff306 	br	85c4 <___vfiprintf_internal_r+0x5c4>
    85f8:	d9000417 	ldw	r4,16(sp)
    85fc:	6880040c 	andi	r2,r13,16
    8600:	20c00104 	addi	r3,r4,4
    8604:	1002aa1e 	bne	r2,zero,90b0 <___vfiprintf_internal_r+0x10b0>
    8608:	6880100c 	andi	r2,r13,64
    860c:	1002f926 	beq	r2,zero,91f4 <___vfiprintf_internal_r+0x11f4>
    8610:	d8800417 	ldw	r2,16(sp)
    8614:	0039883a 	mov	fp,zero
    8618:	d8c00415 	stw	r3,16(sp)
    861c:	15c0000b 	ldhu	r23,0(r2)
    8620:	0005883a 	mov	r2,zero
    8624:	003fc906 	br	854c <___vfiprintf_internal_r+0x54c>
    8628:	d9000417 	ldw	r4,16(sp)
    862c:	6880040c 	andi	r2,r13,16
    8630:	20c00104 	addi	r3,r4,4
    8634:	1002ad1e 	bne	r2,zero,90ec <___vfiprintf_internal_r+0x10ec>
    8638:	6880100c 	andi	r2,r13,64
    863c:	1002f926 	beq	r2,zero,9224 <___vfiprintf_internal_r+0x1224>
    8640:	d8800417 	ldw	r2,16(sp)
    8644:	0039883a 	mov	fp,zero
    8648:	d8c00415 	stw	r3,16(sp)
    864c:	15c0000b 	ldhu	r23,0(r2)
    8650:	00800044 	movi	r2,1
    8654:	003fbd06 	br	854c <___vfiprintf_internal_r+0x54c>
    8658:	d8c00017 	ldw	r3,0(sp)
    865c:	d8000b15 	stw	zero,44(sp)
    8660:	1cc0010c 	andi	r19,r3,4
    8664:	98024a26 	beq	r19,zero,8f90 <___vfiprintf_internal_r+0xf90>
    8668:	8de1c83a 	sub	r16,r17,r23
    866c:	0402480e 	bge	zero,r16,8f90 <___vfiprintf_internal_r+0xf90>
    8670:	900d883a 	mov	r6,r18
    8674:	80c00450 	cmplti	r3,r16,17
    8678:	d9000b17 	ldw	r4,44(sp)
    867c:	01c00074 	movhi	r7,1
    8680:	1803181e 	bne	r3,zero,92e4 <___vfiprintf_internal_r+0x12e4>
    8684:	39c09f04 	addi	r7,r7,636
    8688:	04c00404 	movi	r19,16
    868c:	00000606 	br	86a8 <___vfiprintf_internal_r+0x6a8>
    8690:	21400084 	addi	r5,r4,2
    8694:	31800204 	addi	r6,r6,8
    8698:	1809883a 	mov	r4,r3
    869c:	843ffc04 	addi	r16,r16,-16
    86a0:	80c00448 	cmpgei	r3,r16,17
    86a4:	18001726 	beq	r3,zero,8704 <___vfiprintf_internal_r+0x704>
    86a8:	20c00044 	addi	r3,r4,1
    86ac:	10800404 	addi	r2,r2,16
    86b0:	31c00015 	stw	r7,0(r6)
    86b4:	34c00115 	stw	r19,4(r6)
    86b8:	d8800c15 	stw	r2,48(sp)
    86bc:	d8c00b15 	stw	r3,44(sp)
    86c0:	19400208 	cmpgei	r5,r3,8
    86c4:	283ff226 	beq	r5,zero,8690 <___vfiprintf_internal_r+0x690>
    86c8:	d9800a04 	addi	r6,sp,40
    86cc:	a80b883a 	mov	r5,r21
    86d0:	b009883a 	mov	r4,r22
    86d4:	10011d26 	beq	r2,zero,8b4c <___vfiprintf_internal_r+0xb4c>
    86d8:	d9c00015 	stw	r7,0(sp)
    86dc:	0007edc0 	call	7edc <__sprint_r.part.0>
    86e0:	103f5d1e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    86e4:	d9000b17 	ldw	r4,44(sp)
    86e8:	843ffc04 	addi	r16,r16,-16
    86ec:	80c00448 	cmpgei	r3,r16,17
    86f0:	d8800c17 	ldw	r2,48(sp)
    86f4:	d9c00017 	ldw	r7,0(sp)
    86f8:	900d883a 	mov	r6,r18
    86fc:	21400044 	addi	r5,r4,1
    8700:	183fe91e 	bne	r3,zero,86a8 <___vfiprintf_internal_r+0x6a8>
    8704:	1405883a 	add	r2,r2,r16
    8708:	d9400b15 	stw	r5,44(sp)
    870c:	31c00015 	stw	r7,0(r6)
    8710:	34000115 	stw	r16,4(r6)
    8714:	d8800c15 	stw	r2,48(sp)
    8718:	29400210 	cmplti	r5,r5,8
    871c:	283f421e 	bne	r5,zero,8428 <___vfiprintf_internal_r+0x428>
    8720:	10021b26 	beq	r2,zero,8f90 <___vfiprintf_internal_r+0xf90>
    8724:	d9800a04 	addi	r6,sp,40
    8728:	a80b883a 	mov	r5,r21
    872c:	b009883a 	mov	r4,r22
    8730:	0007edc0 	call	7edc <__sprint_r.part.0>
    8734:	103f481e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8738:	d8800c17 	ldw	r2,48(sp)
    873c:	003f3a06 	br	8428 <___vfiprintf_internal_r+0x428>
    8740:	0004cd40 	call	4cd4 <__sinit>
    8744:	003e4306 	br	8054 <___vfiprintf_internal_r+0x54>
    8748:	29403fcc 	andi	r5,r5,255
    874c:	2802d81e 	bne	r5,zero,92b0 <___vfiprintf_internal_r+0x12b0>
    8750:	6880080c 	andi	r2,r13,32
    8754:	10005b26 	beq	r2,zero,88c4 <___vfiprintf_internal_r+0x8c4>
    8758:	d8c00417 	ldw	r3,16(sp)
    875c:	18800117 	ldw	r2,4(r3)
    8760:	1dc00017 	ldw	r23,0(r3)
    8764:	18c00204 	addi	r3,r3,8
    8768:	d8c00415 	stw	r3,16(sp)
    876c:	1039883a 	mov	fp,r2
    8770:	10006016 	blt	r2,zero,88f4 <___vfiprintf_internal_r+0x8f4>
    8774:	40bfffd8 	cmpnei	r2,r8,-1
    8778:	db800943 	ldbu	r14,37(sp)
    877c:	10000626 	beq	r2,zero,8798 <___vfiprintf_internal_r+0x798>
    8780:	04ffdfc4 	movi	r19,-129
    8784:	6cc6703a 	and	r3,r13,r19
    8788:	bf04b03a 	or	r2,r23,fp
    878c:	d8c00015 	stw	r3,0(sp)
    8790:	10021426 	beq	r2,zero,8fe4 <___vfiprintf_internal_r+0xfe4>
    8794:	db400017 	ldw	r13,0(sp)
    8798:	e001a51e 	bne	fp,zero,8e30 <___vfiprintf_internal_r+0xe30>
    879c:	b88002a8 	cmpgeui	r2,r23,10
    87a0:	1001a31e 	bne	r2,zero,8e30 <___vfiprintf_internal_r+0xe30>
    87a4:	bdc00c04 	addi	r23,r23,48
    87a8:	ddc016c5 	stb	r23,91(sp)
    87ac:	db400015 	stw	r13,0(sp)
    87b0:	07000044 	movi	fp,1
    87b4:	dcc016c4 	addi	r19,sp,91
    87b8:	00007506 	br	8990 <___vfiprintf_internal_r+0x990>
    87bc:	a0800007 	ldb	r2,0(r20)
    87c0:	6b401014 	ori	r13,r13,64
    87c4:	003e5206 	br	8110 <___vfiprintf_internal_r+0x110>
    87c8:	29403fcc 	andi	r5,r5,255
    87cc:	2802ba1e 	bne	r5,zero,92b8 <___vfiprintf_internal_r+0x12b8>
    87d0:	00c00074 	movhi	r3,1
    87d4:	18c01404 	addi	r3,r3,80
    87d8:	d8c00515 	stw	r3,20(sp)
    87dc:	68c0080c 	andi	r3,r13,32
    87e0:	1800bb26 	beq	r3,zero,8ad0 <___vfiprintf_internal_r+0xad0>
    87e4:	d8c00417 	ldw	r3,16(sp)
    87e8:	1dc00017 	ldw	r23,0(r3)
    87ec:	1f000117 	ldw	fp,4(r3)
    87f0:	18c00204 	addi	r3,r3,8
    87f4:	d8c00415 	stw	r3,16(sp)
    87f8:	68c0004c 	andi	r3,r13,1
    87fc:	18000226 	beq	r3,zero,8808 <___vfiprintf_internal_r+0x808>
    8800:	bf06b03a 	or	r3,r23,fp
    8804:	1802241e 	bne	r3,zero,9098 <___vfiprintf_internal_r+0x1098>
    8808:	00800084 	movi	r2,2
    880c:	003f4f06 	br	854c <___vfiprintf_internal_r+0x54c>
    8810:	d8800417 	ldw	r2,16(sp)
    8814:	d8000945 	stb	zero,37(sp)
    8818:	14c00017 	ldw	r19,0(r2)
    881c:	10c00104 	addi	r3,r2,4
    8820:	98026726 	beq	r19,zero,91c0 <___vfiprintf_internal_r+0x11c0>
    8824:	40bfffe0 	cmpeqi	r2,r8,-1
    8828:	10023f1e 	bne	r2,zero,9128 <___vfiprintf_internal_r+0x1128>
    882c:	400d883a 	mov	r6,r8
    8830:	000b883a 	mov	r5,zero
    8834:	9809883a 	mov	r4,r19
    8838:	d8c00315 	stw	r3,12(sp)
    883c:	db400215 	stw	r13,8(sp)
    8840:	da000015 	stw	r8,0(sp)
    8844:	000624c0 	call	624c <memchr>
    8848:	da000017 	ldw	r8,0(sp)
    884c:	db400217 	ldw	r13,8(sp)
    8850:	d8c00317 	ldw	r3,12(sp)
    8854:	10029226 	beq	r2,zero,92a0 <___vfiprintf_internal_r+0x12a0>
    8858:	14f9c83a 	sub	fp,r2,r19
    885c:	e02f883a 	mov	r23,fp
    8860:	d8c00415 	stw	r3,16(sp)
    8864:	003ea006 	br	82e8 <___vfiprintf_internal_r+0x2e8>
    8868:	a0800007 	ldb	r2,0(r20)
    886c:	6b400814 	ori	r13,r13,32
    8870:	003e2706 	br	8110 <___vfiprintf_internal_r+0x110>
    8874:	d8c00417 	ldw	r3,16(sp)
    8878:	00800c04 	movi	r2,48
    887c:	d8800985 	stb	r2,38(sp)
    8880:	00801e04 	movi	r2,120
    8884:	01000074 	movhi	r4,1
    8888:	d88009c5 	stb	r2,39(sp)
    888c:	18800104 	addi	r2,r3,4
    8890:	d8800415 	stw	r2,16(sp)
    8894:	20801404 	addi	r2,r4,80
    8898:	d8800515 	stw	r2,20(sp)
    889c:	1dc00017 	ldw	r23,0(r3)
    88a0:	0039883a 	mov	fp,zero
    88a4:	6b400094 	ori	r13,r13,2
    88a8:	00800084 	movi	r2,2
    88ac:	003f2706 	br	854c <___vfiprintf_internal_r+0x54c>
    88b0:	29403fcc 	andi	r5,r5,255
    88b4:	2802821e 	bne	r5,zero,92c0 <___vfiprintf_internal_r+0x12c0>
    88b8:	6b400414 	ori	r13,r13,16
    88bc:	6880080c 	andi	r2,r13,32
    88c0:	103fa51e 	bne	r2,zero,8758 <___vfiprintf_internal_r+0x758>
    88c4:	d9000417 	ldw	r4,16(sp)
    88c8:	6880040c 	andi	r2,r13,16
    88cc:	20c00104 	addi	r3,r4,4
    88d0:	1001ec1e 	bne	r2,zero,9084 <___vfiprintf_internal_r+0x1084>
    88d4:	6880100c 	andi	r2,r13,64
    88d8:	10024c26 	beq	r2,zero,920c <___vfiprintf_internal_r+0x120c>
    88dc:	d8800417 	ldw	r2,16(sp)
    88e0:	d8c00415 	stw	r3,16(sp)
    88e4:	15c0000f 	ldh	r23,0(r2)
    88e8:	b839d7fa 	srai	fp,r23,31
    88ec:	e005883a 	mov	r2,fp
    88f0:	103fa00e 	bge	r2,zero,8774 <___vfiprintf_internal_r+0x774>
    88f4:	b804c03a 	cmpne	r2,r23,zero
    88f8:	0739c83a 	sub	fp,zero,fp
    88fc:	e0b9c83a 	sub	fp,fp,r2
    8900:	00800b44 	movi	r2,45
    8904:	d8800945 	stb	r2,37(sp)
    8908:	40ffffe0 	cmpeqi	r3,r8,-1
    890c:	05efc83a 	sub	r23,zero,r23
    8910:	03800b44 	movi	r14,45
    8914:	00800044 	movi	r2,1
    8918:	183f1026 	beq	r3,zero,855c <___vfiprintf_internal_r+0x55c>
    891c:	10c00060 	cmpeqi	r3,r2,1
    8920:	183f9d1e 	bne	r3,zero,8798 <___vfiprintf_internal_r+0x798>
    8924:	108000a0 	cmpeqi	r2,r2,2
    8928:	1001081e 	bne	r2,zero,8d4c <___vfiprintf_internal_r+0xd4c>
    892c:	9027883a 	mov	r19,r18
    8930:	e008977a 	slli	r4,fp,29
    8934:	b806d0fa 	srli	r3,r23,3
    8938:	e038d0fa 	srli	fp,fp,3
    893c:	b88001cc 	andi	r2,r23,7
    8940:	10800c04 	addi	r2,r2,48
    8944:	20eeb03a 	or	r23,r4,r3
    8948:	98bfffc5 	stb	r2,-1(r19)
    894c:	bf06b03a 	or	r3,r23,fp
    8950:	980b883a 	mov	r5,r19
    8954:	9cffffc4 	addi	r19,r19,-1
    8958:	183ff51e 	bne	r3,zero,8930 <___vfiprintf_internal_r+0x930>
    895c:	68c0004c 	andi	r3,r13,1
    8960:	18010726 	beq	r3,zero,8d80 <___vfiprintf_internal_r+0xd80>
    8964:	10803fcc 	andi	r2,r2,255
    8968:	1080201c 	xori	r2,r2,128
    896c:	10bfe004 	addi	r2,r2,-128
    8970:	10800c18 	cmpnei	r2,r2,48
    8974:	10010226 	beq	r2,zero,8d80 <___vfiprintf_internal_r+0xd80>
    8978:	297fff84 	addi	r5,r5,-2
    897c:	00800c04 	movi	r2,48
    8980:	98bfffc5 	stb	r2,-1(r19)
    8984:	9179c83a 	sub	fp,r18,r5
    8988:	db400015 	stw	r13,0(sp)
    898c:	2827883a 	mov	r19,r5
    8990:	402f883a 	mov	r23,r8
    8994:	4700010e 	bge	r8,fp,899c <___vfiprintf_internal_r+0x99c>
    8998:	e02f883a 	mov	r23,fp
    899c:	73803fcc 	andi	r14,r14,255
    89a0:	7380201c 	xori	r14,r14,128
    89a4:	73bfe004 	addi	r14,r14,-128
    89a8:	703e5126 	beq	r14,zero,82f0 <___vfiprintf_internal_r+0x2f0>
    89ac:	bdc00044 	addi	r23,r23,1
    89b0:	003e4f06 	br	82f0 <___vfiprintf_internal_r+0x2f0>
    89b4:	a0800007 	ldb	r2,0(r20)
    89b8:	6b402014 	ori	r13,r13,128
    89bc:	003dd406 	br	8110 <___vfiprintf_internal_r+0x110>
    89c0:	a0800007 	ldb	r2,0(r20)
    89c4:	a1000044 	addi	r4,r20,1
    89c8:	10c00aa0 	cmpeqi	r3,r2,42
    89cc:	1802501e 	bne	r3,zero,9310 <___vfiprintf_internal_r+0x1310>
    89d0:	10fff404 	addi	r3,r2,-48
    89d4:	19c002b0 	cmpltui	r7,r3,10
    89d8:	2029883a 	mov	r20,r4
    89dc:	0011883a 	mov	r8,zero
    89e0:	383dcc26 	beq	r7,zero,8114 <___vfiprintf_internal_r+0x114>
    89e4:	a0800007 	ldb	r2,0(r20)
    89e8:	420002a4 	muli	r8,r8,10
    89ec:	a5000044 	addi	r20,r20,1
    89f0:	40d1883a 	add	r8,r8,r3
    89f4:	10fff404 	addi	r3,r2,-48
    89f8:	190002b0 	cmpltui	r4,r3,10
    89fc:	203ff91e 	bne	r4,zero,89e4 <___vfiprintf_internal_r+0x9e4>
    8a00:	003dc406 	br	8114 <___vfiprintf_internal_r+0x114>
    8a04:	a0800003 	ldbu	r2,0(r20)
    8a08:	10803fcc 	andi	r2,r2,255
    8a0c:	1080201c 	xori	r2,r2,128
    8a10:	6b400114 	ori	r13,r13,4
    8a14:	10bfe004 	addi	r2,r2,-128
    8a18:	003dbd06 	br	8110 <___vfiprintf_internal_r+0x110>
    8a1c:	a0800007 	ldb	r2,0(r20)
    8a20:	01400044 	movi	r5,1
    8a24:	01800ac4 	movi	r6,43
    8a28:	003db906 	br	8110 <___vfiprintf_internal_r+0x110>
    8a2c:	d8c00417 	ldw	r3,16(sp)
    8a30:	a0800003 	ldbu	r2,0(r20)
    8a34:	1c400017 	ldw	r17,0(r3)
    8a38:	18c00104 	addi	r3,r3,4
    8a3c:	8801b716 	blt	r17,zero,911c <___vfiprintf_internal_r+0x111c>
    8a40:	d8c00415 	stw	r3,16(sp)
    8a44:	10803fcc 	andi	r2,r2,255
    8a48:	1080201c 	xori	r2,r2,128
    8a4c:	10bfe004 	addi	r2,r2,-128
    8a50:	003daf06 	br	8110 <___vfiprintf_internal_r+0x110>
    8a54:	a0800007 	ldb	r2,0(r20)
    8a58:	6b400054 	ori	r13,r13,1
    8a5c:	003dac06 	br	8110 <___vfiprintf_internal_r+0x110>
    8a60:	30c03fcc 	andi	r3,r6,255
    8a64:	18c0201c 	xori	r3,r3,128
    8a68:	18ffe004 	addi	r3,r3,-128
    8a6c:	a0800003 	ldbu	r2,0(r20)
    8a70:	183ff41e 	bne	r3,zero,8a44 <___vfiprintf_internal_r+0xa44>
    8a74:	10803fcc 	andi	r2,r2,255
    8a78:	1080201c 	xori	r2,r2,128
    8a7c:	01400044 	movi	r5,1
    8a80:	01800804 	movi	r6,32
    8a84:	10bfe004 	addi	r2,r2,-128
    8a88:	003da106 	br	8110 <___vfiprintf_internal_r+0x110>
    8a8c:	d8c00417 	ldw	r3,16(sp)
    8a90:	d8000945 	stb	zero,37(sp)
    8a94:	05c00044 	movi	r23,1
    8a98:	18800017 	ldw	r2,0(r3)
    8a9c:	18c00104 	addi	r3,r3,4
    8aa0:	d8c00415 	stw	r3,16(sp)
    8aa4:	d8800d05 	stb	r2,52(sp)
    8aa8:	07000044 	movi	fp,1
    8aac:	dcc00d04 	addi	r19,sp,52
    8ab0:	003e0d06 	br	82e8 <___vfiprintf_internal_r+0x2e8>
    8ab4:	29403fcc 	andi	r5,r5,255
    8ab8:	2802061e 	bne	r5,zero,92d4 <___vfiprintf_internal_r+0x12d4>
    8abc:	00c00074 	movhi	r3,1
    8ac0:	18c01904 	addi	r3,r3,100
    8ac4:	d8c00515 	stw	r3,20(sp)
    8ac8:	68c0080c 	andi	r3,r13,32
    8acc:	183f451e 	bne	r3,zero,87e4 <___vfiprintf_internal_r+0x7e4>
    8ad0:	d9400417 	ldw	r5,16(sp)
    8ad4:	68c0040c 	andi	r3,r13,16
    8ad8:	29000104 	addi	r4,r5,4
    8adc:	18017f1e 	bne	r3,zero,90dc <___vfiprintf_internal_r+0x10dc>
    8ae0:	68c0100c 	andi	r3,r13,64
    8ae4:	1801be26 	beq	r3,zero,91e0 <___vfiprintf_internal_r+0x11e0>
    8ae8:	d8c00417 	ldw	r3,16(sp)
    8aec:	0039883a 	mov	fp,zero
    8af0:	d9000415 	stw	r4,16(sp)
    8af4:	1dc0000b 	ldhu	r23,0(r3)
    8af8:	003f3f06 	br	87f8 <___vfiprintf_internal_r+0x7f8>
    8afc:	29403fcc 	andi	r5,r5,255
    8b00:	2801f61e 	bne	r5,zero,92dc <___vfiprintf_internal_r+0x12dc>
    8b04:	d9000417 	ldw	r4,16(sp)
    8b08:	6880080c 	andi	r2,r13,32
    8b0c:	20c00017 	ldw	r3,0(r4)
    8b10:	21000104 	addi	r4,r4,4
    8b14:	10016b1e 	bne	r2,zero,90c4 <___vfiprintf_internal_r+0x10c4>
    8b18:	6880040c 	andi	r2,r13,16
    8b1c:	1001951e 	bne	r2,zero,9174 <___vfiprintf_internal_r+0x1174>
    8b20:	6b40100c 	andi	r13,r13,64
    8b24:	68019326 	beq	r13,zero,9174 <___vfiprintf_internal_r+0x1174>
    8b28:	d8800117 	ldw	r2,4(sp)
    8b2c:	d9000415 	stw	r4,16(sp)
    8b30:	1880000d 	sth	r2,0(r3)
    8b34:	003d5e06 	br	80b0 <___vfiprintf_internal_r+0xb0>
    8b38:	a0800007 	ldb	r2,0(r20)
    8b3c:	10c01b18 	cmpnei	r3,r2,108
    8b40:	18019826 	beq	r3,zero,91a4 <___vfiprintf_internal_r+0x11a4>
    8b44:	6b400414 	ori	r13,r13,16
    8b48:	003d7106 	br	8110 <___vfiprintf_internal_r+0x110>
    8b4c:	01400044 	movi	r5,1
    8b50:	0009883a 	mov	r4,zero
    8b54:	900d883a 	mov	r6,r18
    8b58:	003ed006 	br	869c <___vfiprintf_internal_r+0x69c>
    8b5c:	8dc7c83a 	sub	r3,r17,r23
    8b60:	00fe1b0e 	bge	zero,r3,83d0 <___vfiprintf_internal_r+0x3d0>
    8b64:	19c00450 	cmplti	r7,r3,17
    8b68:	3801e41e 	bne	r7,zero,92fc <___vfiprintf_internal_r+0x12fc>
    8b6c:	01c00074 	movhi	r7,1
    8b70:	39c09b04 	addi	r7,r7,620
    8b74:	03400404 	movi	r13,16
    8b78:	00000606 	br	8b94 <___vfiprintf_internal_r+0xb94>
    8b7c:	23800084 	addi	r14,r4,2
    8b80:	84000204 	addi	r16,r16,8
    8b84:	2809883a 	mov	r4,r5
    8b88:	18fffc04 	addi	r3,r3,-16
    8b8c:	19400448 	cmpgei	r5,r3,17
    8b90:	28001c26 	beq	r5,zero,8c04 <___vfiprintf_internal_r+0xc04>
    8b94:	21400044 	addi	r5,r4,1
    8b98:	10800404 	addi	r2,r2,16
    8b9c:	81c00015 	stw	r7,0(r16)
    8ba0:	83400115 	stw	r13,4(r16)
    8ba4:	d8800c15 	stw	r2,48(sp)
    8ba8:	d9400b15 	stw	r5,44(sp)
    8bac:	29800208 	cmpgei	r6,r5,8
    8bb0:	303ff226 	beq	r6,zero,8b7c <___vfiprintf_internal_r+0xb7c>
    8bb4:	d9800a04 	addi	r6,sp,40
    8bb8:	a80b883a 	mov	r5,r21
    8bbc:	b009883a 	mov	r4,r22
    8bc0:	10007826 	beq	r2,zero,8da4 <___vfiprintf_internal_r+0xda4>
    8bc4:	d9c00615 	stw	r7,24(sp)
    8bc8:	d8c00315 	stw	r3,12(sp)
    8bcc:	da000215 	stw	r8,8(sp)
    8bd0:	0007edc0 	call	7edc <__sprint_r.part.0>
    8bd4:	103e201e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8bd8:	d8c00317 	ldw	r3,12(sp)
    8bdc:	d9000b17 	ldw	r4,44(sp)
    8be0:	d8800c17 	ldw	r2,48(sp)
    8be4:	18fffc04 	addi	r3,r3,-16
    8be8:	19400448 	cmpgei	r5,r3,17
    8bec:	d9c00617 	ldw	r7,24(sp)
    8bf0:	da000217 	ldw	r8,8(sp)
    8bf4:	9021883a 	mov	r16,r18
    8bf8:	23800044 	addi	r14,r4,1
    8bfc:	03400404 	movi	r13,16
    8c00:	283fe41e 	bne	r5,zero,8b94 <___vfiprintf_internal_r+0xb94>
    8c04:	83400204 	addi	r13,r16,8
    8c08:	10c5883a 	add	r2,r2,r3
    8c0c:	80c00115 	stw	r3,4(r16)
    8c10:	81c00015 	stw	r7,0(r16)
    8c14:	d8800c15 	stw	r2,48(sp)
    8c18:	db800b15 	stw	r14,44(sp)
    8c1c:	70c00208 	cmpgei	r3,r14,8
    8c20:	18011326 	beq	r3,zero,9070 <___vfiprintf_internal_r+0x1070>
    8c24:	10018826 	beq	r2,zero,9248 <___vfiprintf_internal_r+0x1248>
    8c28:	d9800a04 	addi	r6,sp,40
    8c2c:	a80b883a 	mov	r5,r21
    8c30:	b009883a 	mov	r4,r22
    8c34:	da000215 	stw	r8,8(sp)
    8c38:	0007edc0 	call	7edc <__sprint_r.part.0>
    8c3c:	103e061e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8c40:	da000217 	ldw	r8,8(sp)
    8c44:	d9000b17 	ldw	r4,44(sp)
    8c48:	d8800c17 	ldw	r2,48(sp)
    8c4c:	4711c83a 	sub	r8,r8,fp
    8c50:	d9801904 	addi	r6,sp,100
    8c54:	21400044 	addi	r5,r4,1
    8c58:	9021883a 	mov	r16,r18
    8c5c:	023dde0e 	bge	zero,r8,83d8 <___vfiprintf_internal_r+0x3d8>
    8c60:	40c00450 	cmplti	r3,r8,17
    8c64:	01c00074 	movhi	r7,1
    8c68:	1801741e 	bne	r3,zero,923c <___vfiprintf_internal_r+0x123c>
    8c6c:	39c09b04 	addi	r7,r7,620
    8c70:	03400404 	movi	r13,16
    8c74:	00000606 	br	8c90 <___vfiprintf_internal_r+0xc90>
    8c78:	21400084 	addi	r5,r4,2
    8c7c:	84000204 	addi	r16,r16,8
    8c80:	1809883a 	mov	r4,r3
    8c84:	423ffc04 	addi	r8,r8,-16
    8c88:	40c00448 	cmpgei	r3,r8,17
    8c8c:	18001a26 	beq	r3,zero,8cf8 <___vfiprintf_internal_r+0xcf8>
    8c90:	20c00044 	addi	r3,r4,1
    8c94:	10800404 	addi	r2,r2,16
    8c98:	81c00015 	stw	r7,0(r16)
    8c9c:	83400115 	stw	r13,4(r16)
    8ca0:	d8800c15 	stw	r2,48(sp)
    8ca4:	d8c00b15 	stw	r3,44(sp)
    8ca8:	19400208 	cmpgei	r5,r3,8
    8cac:	283ff226 	beq	r5,zero,8c78 <___vfiprintf_internal_r+0xc78>
    8cb0:	d9800a04 	addi	r6,sp,40
    8cb4:	a80b883a 	mov	r5,r21
    8cb8:	b009883a 	mov	r4,r22
    8cbc:	10001a26 	beq	r2,zero,8d28 <___vfiprintf_internal_r+0xd28>
    8cc0:	d9c00315 	stw	r7,12(sp)
    8cc4:	da000215 	stw	r8,8(sp)
    8cc8:	0007edc0 	call	7edc <__sprint_r.part.0>
    8ccc:	103de21e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8cd0:	da000217 	ldw	r8,8(sp)
    8cd4:	d9000b17 	ldw	r4,44(sp)
    8cd8:	d8800c17 	ldw	r2,48(sp)
    8cdc:	423ffc04 	addi	r8,r8,-16
    8ce0:	40c00448 	cmpgei	r3,r8,17
    8ce4:	d9c00317 	ldw	r7,12(sp)
    8ce8:	9021883a 	mov	r16,r18
    8cec:	21400044 	addi	r5,r4,1
    8cf0:	03400404 	movi	r13,16
    8cf4:	183fe61e 	bne	r3,zero,8c90 <___vfiprintf_internal_r+0xc90>
    8cf8:	81000204 	addi	r4,r16,8
    8cfc:	1205883a 	add	r2,r2,r8
    8d00:	81c00015 	stw	r7,0(r16)
    8d04:	82000115 	stw	r8,4(r16)
    8d08:	d8800c15 	stw	r2,48(sp)
    8d0c:	d9400b15 	stw	r5,44(sp)
    8d10:	28c00208 	cmpgei	r3,r5,8
    8d14:	1800a41e 	bne	r3,zero,8fa8 <___vfiprintf_internal_r+0xfa8>
    8d18:	29400044 	addi	r5,r5,1
    8d1c:	21800204 	addi	r6,r4,8
    8d20:	2021883a 	mov	r16,r4
    8d24:	003dac06 	br	83d8 <___vfiprintf_internal_r+0x3d8>
    8d28:	01400044 	movi	r5,1
    8d2c:	0009883a 	mov	r4,zero
    8d30:	9021883a 	mov	r16,r18
    8d34:	003fd306 	br	8c84 <___vfiprintf_internal_r+0xc84>
    8d38:	10c00060 	cmpeqi	r3,r2,1
    8d3c:	1801561e 	bne	r3,zero,9298 <___vfiprintf_internal_r+0x1298>
    8d40:	108000a0 	cmpeqi	r2,r2,2
    8d44:	db400017 	ldw	r13,0(sp)
    8d48:	103ef826 	beq	r2,zero,892c <___vfiprintf_internal_r+0x92c>
    8d4c:	9027883a 	mov	r19,r18
    8d50:	d9000517 	ldw	r4,20(sp)
    8d54:	b88003cc 	andi	r2,r23,15
    8d58:	e006973a 	slli	r3,fp,28
    8d5c:	b82ed13a 	srli	r23,r23,4
    8d60:	2085883a 	add	r2,r4,r2
    8d64:	10800003 	ldbu	r2,0(r2)
    8d68:	e038d13a 	srli	fp,fp,4
    8d6c:	1deeb03a 	or	r23,r3,r23
    8d70:	98bfffc5 	stb	r2,-1(r19)
    8d74:	bf04b03a 	or	r2,r23,fp
    8d78:	9cffffc4 	addi	r19,r19,-1
    8d7c:	103ff41e 	bne	r2,zero,8d50 <___vfiprintf_internal_r+0xd50>
    8d80:	94f9c83a 	sub	fp,r18,r19
    8d84:	db400015 	stw	r13,0(sp)
    8d88:	003f0106 	br	8990 <___vfiprintf_internal_r+0x990>
    8d8c:	d9800a04 	addi	r6,sp,40
    8d90:	a80b883a 	mov	r5,r21
    8d94:	b009883a 	mov	r4,r22
    8d98:	0007edc0 	call	7edc <__sprint_r.part.0>
    8d9c:	103da826 	beq	r2,zero,8440 <___vfiprintf_internal_r+0x440>
    8da0:	003dad06 	br	8458 <___vfiprintf_internal_r+0x458>
    8da4:	03800044 	movi	r14,1
    8da8:	0009883a 	mov	r4,zero
    8dac:	9021883a 	mov	r16,r18
    8db0:	003f7506 	br	8b88 <___vfiprintf_internal_r+0xb88>
    8db4:	10009026 	beq	r2,zero,8ff8 <___vfiprintf_internal_r+0xff8>
    8db8:	d9800a04 	addi	r6,sp,40
    8dbc:	a80b883a 	mov	r5,r21
    8dc0:	b009883a 	mov	r4,r22
    8dc4:	da000615 	stw	r8,24(sp)
    8dc8:	db400315 	stw	r13,12(sp)
    8dcc:	db800215 	stw	r14,8(sp)
    8dd0:	0007edc0 	call	7edc <__sprint_r.part.0>
    8dd4:	103da01e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8dd8:	d9000b17 	ldw	r4,44(sp)
    8ddc:	d8800c17 	ldw	r2,48(sp)
    8de0:	da000617 	ldw	r8,24(sp)
    8de4:	db400317 	ldw	r13,12(sp)
    8de8:	db800217 	ldw	r14,8(sp)
    8dec:	d9801904 	addi	r6,sp,100
    8df0:	21400044 	addi	r5,r4,1
    8df4:	9021883a 	mov	r16,r18
    8df8:	003d5a06 	br	8364 <___vfiprintf_internal_r+0x364>
    8dfc:	d8800984 	addi	r2,sp,38
    8e00:	d8801715 	stw	r2,92(sp)
    8e04:	00800084 	movi	r2,2
    8e08:	d8801815 	stw	r2,96(sp)
    8e0c:	d9801904 	addi	r6,sp,100
    8e10:	01400044 	movi	r5,1
    8e14:	3021883a 	mov	r16,r6
    8e18:	2809883a 	mov	r4,r5
    8e1c:	21400044 	addi	r5,r4,1
    8e20:	81800204 	addi	r6,r16,8
    8e24:	003d6806 	br	83c8 <___vfiprintf_internal_r+0x3c8>
    8e28:	db400017 	ldw	r13,0(sp)
    8e2c:	003ebb06 	br	891c <___vfiprintf_internal_r+0x91c>
    8e30:	9027883a 	mov	r19,r18
    8e34:	b809883a 	mov	r4,r23
    8e38:	e00b883a 	mov	r5,fp
    8e3c:	01800284 	movi	r6,10
    8e40:	000f883a 	mov	r7,zero
    8e44:	db800315 	stw	r14,12(sp)
    8e48:	da000215 	stw	r8,8(sp)
    8e4c:	db400015 	stw	r13,0(sp)
    8e50:	000ad0c0 	call	ad0c <__umoddi3>
    8e54:	10800c04 	addi	r2,r2,48
    8e58:	b809883a 	mov	r4,r23
    8e5c:	e00b883a 	mov	r5,fp
    8e60:	98bfffc5 	stb	r2,-1(r19)
    8e64:	01800284 	movi	r6,10
    8e68:	000f883a 	mov	r7,zero
    8e6c:	000a7700 	call	a770 <__udivdi3>
    8e70:	e009883a 	mov	r4,fp
    8e74:	b80b883a 	mov	r5,r23
    8e78:	db400017 	ldw	r13,0(sp)
    8e7c:	da000217 	ldw	r8,8(sp)
    8e80:	db800317 	ldw	r14,12(sp)
    8e84:	9cffffc4 	addi	r19,r19,-1
    8e88:	102f883a 	mov	r23,r2
    8e8c:	1839883a 	mov	fp,r3
    8e90:	203fe81e 	bne	r4,zero,8e34 <___vfiprintf_internal_r+0xe34>
    8e94:	294002a8 	cmpgeui	r5,r5,10
    8e98:	283fe61e 	bne	r5,zero,8e34 <___vfiprintf_internal_r+0xe34>
    8e9c:	94f9c83a 	sub	fp,r18,r19
    8ea0:	003ebb06 	br	8990 <___vfiprintf_internal_r+0x990>
    8ea4:	19400450 	cmplti	r5,r3,17
    8ea8:	01c00074 	movhi	r7,1
    8eac:	2801061e 	bne	r5,zero,92c8 <___vfiprintf_internal_r+0x12c8>
    8eb0:	39c09f04 	addi	r7,r7,636
    8eb4:	03c00404 	movi	r15,16
    8eb8:	00000706 	br	8ed8 <___vfiprintf_internal_r+0xed8>
    8ebc:	27c00084 	addi	ra,r4,2
    8ec0:	84000204 	addi	r16,r16,8
    8ec4:	3009883a 	mov	r4,r6
    8ec8:	18fffc04 	addi	r3,r3,-16
    8ecc:	19400448 	cmpgei	r5,r3,17
    8ed0:	28002026 	beq	r5,zero,8f54 <___vfiprintf_internal_r+0xf54>
    8ed4:	21800044 	addi	r6,r4,1
    8ed8:	10800404 	addi	r2,r2,16
    8edc:	81c00015 	stw	r7,0(r16)
    8ee0:	83c00115 	stw	r15,4(r16)
    8ee4:	d8800c15 	stw	r2,48(sp)
    8ee8:	d9800b15 	stw	r6,44(sp)
    8eec:	31400208 	cmpgei	r5,r6,8
    8ef0:	283ff226 	beq	r5,zero,8ebc <___vfiprintf_internal_r+0xebc>
    8ef4:	d9800a04 	addi	r6,sp,40
    8ef8:	a80b883a 	mov	r5,r21
    8efc:	b009883a 	mov	r4,r22
    8f00:	10001f26 	beq	r2,zero,8f80 <___vfiprintf_internal_r+0xf80>
    8f04:	d9c00815 	stw	r7,32(sp)
    8f08:	d8c00715 	stw	r3,28(sp)
    8f0c:	da000615 	stw	r8,24(sp)
    8f10:	db400315 	stw	r13,12(sp)
    8f14:	db800215 	stw	r14,8(sp)
    8f18:	0007edc0 	call	7edc <__sprint_r.part.0>
    8f1c:	103d4e1e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8f20:	d8c00717 	ldw	r3,28(sp)
    8f24:	d9000b17 	ldw	r4,44(sp)
    8f28:	d8800c17 	ldw	r2,48(sp)
    8f2c:	18fffc04 	addi	r3,r3,-16
    8f30:	19400448 	cmpgei	r5,r3,17
    8f34:	d9c00817 	ldw	r7,32(sp)
    8f38:	da000617 	ldw	r8,24(sp)
    8f3c:	db400317 	ldw	r13,12(sp)
    8f40:	db800217 	ldw	r14,8(sp)
    8f44:	9021883a 	mov	r16,r18
    8f48:	27c00044 	addi	ra,r4,1
    8f4c:	03c00404 	movi	r15,16
    8f50:	283fe01e 	bne	r5,zero,8ed4 <___vfiprintf_internal_r+0xed4>
    8f54:	10c5883a 	add	r2,r2,r3
    8f58:	80c00115 	stw	r3,4(r16)
    8f5c:	81c00015 	stw	r7,0(r16)
    8f60:	d8800c15 	stw	r2,48(sp)
    8f64:	dfc00b15 	stw	ra,44(sp)
    8f68:	f8c00208 	cmpgei	r3,ra,8
    8f6c:	18002d1e 	bne	r3,zero,9024 <___vfiprintf_internal_r+0x1024>
    8f70:	84000204 	addi	r16,r16,8
    8f74:	f9400044 	addi	r5,ra,1
    8f78:	f809883a 	mov	r4,ra
    8f7c:	003ce906 	br	8324 <___vfiprintf_internal_r+0x324>
    8f80:	0009883a 	mov	r4,zero
    8f84:	07c00044 	movi	ra,1
    8f88:	9021883a 	mov	r16,r18
    8f8c:	003fce06 	br	8ec8 <___vfiprintf_internal_r+0xec8>
    8f90:	8dc0010e 	bge	r17,r23,8f98 <___vfiprintf_internal_r+0xf98>
    8f94:	b823883a 	mov	r17,r23
    8f98:	d8800117 	ldw	r2,4(sp)
    8f9c:	1445883a 	add	r2,r2,r17
    8fa0:	d8800115 	stw	r2,4(sp)
    8fa4:	003d2606 	br	8440 <___vfiprintf_internal_r+0x440>
    8fa8:	10007626 	beq	r2,zero,9184 <___vfiprintf_internal_r+0x1184>
    8fac:	d9800a04 	addi	r6,sp,40
    8fb0:	a80b883a 	mov	r5,r21
    8fb4:	b009883a 	mov	r4,r22
    8fb8:	0007edc0 	call	7edc <__sprint_r.part.0>
    8fbc:	103d261e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    8fc0:	d9400b17 	ldw	r5,44(sp)
    8fc4:	d8800c17 	ldw	r2,48(sp)
    8fc8:	d9801904 	addi	r6,sp,100
    8fcc:	29400044 	addi	r5,r5,1
    8fd0:	9021883a 	mov	r16,r18
    8fd4:	003d0006 	br	83d8 <___vfiprintf_internal_r+0x3d8>
    8fd8:	d8000b15 	stw	zero,44(sp)
    8fdc:	9021883a 	mov	r16,r18
    8fe0:	003d7806 	br	85c4 <___vfiprintf_internal_r+0x5c4>
    8fe4:	4000ac1e 	bne	r8,zero,9298 <___vfiprintf_internal_r+0x1298>
    8fe8:	0011883a 	mov	r8,zero
    8fec:	0039883a 	mov	fp,zero
    8ff0:	9027883a 	mov	r19,r18
    8ff4:	003e6606 	br	8990 <___vfiprintf_internal_r+0x990>
    8ff8:	7000411e 	bne	r14,zero,9100 <___vfiprintf_internal_r+0x1100>
    8ffc:	0009883a 	mov	r4,zero
    9000:	d9801904 	addi	r6,sp,100
    9004:	01400044 	movi	r5,1
    9008:	9021883a 	mov	r16,r18
    900c:	003cee06 	br	83c8 <___vfiprintf_internal_r+0x3c8>
    9010:	d9801904 	addi	r6,sp,100
    9014:	01400044 	movi	r5,1
    9018:	0009883a 	mov	r4,zero
    901c:	9021883a 	mov	r16,r18
    9020:	003ce906 	br	83c8 <___vfiprintf_internal_r+0x3c8>
    9024:	10004a26 	beq	r2,zero,9150 <___vfiprintf_internal_r+0x1150>
    9028:	d9800a04 	addi	r6,sp,40
    902c:	a80b883a 	mov	r5,r21
    9030:	b009883a 	mov	r4,r22
    9034:	da000615 	stw	r8,24(sp)
    9038:	db400315 	stw	r13,12(sp)
    903c:	db800215 	stw	r14,8(sp)
    9040:	0007edc0 	call	7edc <__sprint_r.part.0>
    9044:	103d041e 	bne	r2,zero,8458 <___vfiprintf_internal_r+0x458>
    9048:	d9000b17 	ldw	r4,44(sp)
    904c:	d8800c17 	ldw	r2,48(sp)
    9050:	da000617 	ldw	r8,24(sp)
    9054:	db400317 	ldw	r13,12(sp)
    9058:	db800217 	ldw	r14,8(sp)
    905c:	9021883a 	mov	r16,r18
    9060:	21400044 	addi	r5,r4,1
    9064:	003caf06 	br	8324 <___vfiprintf_internal_r+0x324>
    9068:	9027883a 	mov	r19,r18
    906c:	003e4806 	br	8990 <___vfiprintf_internal_r+0x990>
    9070:	71400044 	addi	r5,r14,1
    9074:	69800204 	addi	r6,r13,8
    9078:	7009883a 	mov	r4,r14
    907c:	6821883a 	mov	r16,r13
    9080:	003cd306 	br	83d0 <___vfiprintf_internal_r+0x3d0>
    9084:	25c00017 	ldw	r23,0(r4)
    9088:	d8c00415 	stw	r3,16(sp)
    908c:	b839d7fa 	srai	fp,r23,31
    9090:	e005883a 	mov	r2,fp
    9094:	003db606 	br	8770 <___vfiprintf_internal_r+0x770>
    9098:	00c00c04 	movi	r3,48
    909c:	d88009c5 	stb	r2,39(sp)
    90a0:	d8c00985 	stb	r3,38(sp)
    90a4:	6b400094 	ori	r13,r13,2
    90a8:	00800084 	movi	r2,2
    90ac:	003d2706 	br	854c <___vfiprintf_internal_r+0x54c>
    90b0:	25c00017 	ldw	r23,0(r4)
    90b4:	0039883a 	mov	fp,zero
    90b8:	d8c00415 	stw	r3,16(sp)
    90bc:	0005883a 	mov	r2,zero
    90c0:	003d2206 	br	854c <___vfiprintf_internal_r+0x54c>
    90c4:	d9400117 	ldw	r5,4(sp)
    90c8:	d9000415 	stw	r4,16(sp)
    90cc:	2805d7fa 	srai	r2,r5,31
    90d0:	19400015 	stw	r5,0(r3)
    90d4:	18800115 	stw	r2,4(r3)
    90d8:	003bf506 	br	80b0 <___vfiprintf_internal_r+0xb0>
    90dc:	2dc00017 	ldw	r23,0(r5)
    90e0:	0039883a 	mov	fp,zero
    90e4:	d9000415 	stw	r4,16(sp)
    90e8:	003dc306 	br	87f8 <___vfiprintf_internal_r+0x7f8>
    90ec:	25c00017 	ldw	r23,0(r4)
    90f0:	0039883a 	mov	fp,zero
    90f4:	d8c00415 	stw	r3,16(sp)
    90f8:	00800044 	movi	r2,1
    90fc:	003d1306 	br	854c <___vfiprintf_internal_r+0x54c>
    9100:	d8800984 	addi	r2,sp,38
    9104:	d8801715 	stw	r2,92(sp)
    9108:	00800084 	movi	r2,2
    910c:	d8801815 	stw	r2,96(sp)
    9110:	dc001904 	addi	r16,sp,100
    9114:	01000044 	movi	r4,1
    9118:	003f4006 	br	8e1c <___vfiprintf_internal_r+0xe1c>
    911c:	0463c83a 	sub	r17,zero,r17
    9120:	d8c00415 	stw	r3,16(sp)
    9124:	003e3806 	br	8a08 <___vfiprintf_internal_r+0xa08>
    9128:	9809883a 	mov	r4,r19
    912c:	d8c00215 	stw	r3,8(sp)
    9130:	db400015 	stw	r13,0(sp)
    9134:	000076c0 	call	76c <strlen>
    9138:	d8c00217 	ldw	r3,8(sp)
    913c:	db400017 	ldw	r13,0(sp)
    9140:	1039883a 	mov	fp,r2
    9144:	102f883a 	mov	r23,r2
    9148:	d8c00415 	stw	r3,16(sp)
    914c:	003c6606 	br	82e8 <___vfiprintf_internal_r+0x2e8>
    9150:	d8c00947 	ldb	r3,37(sp)
    9154:	18004326 	beq	r3,zero,9264 <___vfiprintf_internal_r+0x1264>
    9158:	d8800944 	addi	r2,sp,37
    915c:	d8801715 	stw	r2,92(sp)
    9160:	00800044 	movi	r2,1
    9164:	d8801815 	stw	r2,96(sp)
    9168:	d9801904 	addi	r6,sp,100
    916c:	01400044 	movi	r5,1
    9170:	003c7806 	br	8354 <___vfiprintf_internal_r+0x354>
    9174:	d8800117 	ldw	r2,4(sp)
    9178:	18800015 	stw	r2,0(r3)
    917c:	d9000415 	stw	r4,16(sp)
    9180:	003bcb06 	br	80b0 <___vfiprintf_internal_r+0xb0>
    9184:	00c00044 	movi	r3,1
    9188:	e005883a 	mov	r2,fp
    918c:	dcc01715 	stw	r19,92(sp)
    9190:	df001815 	stw	fp,96(sp)
    9194:	df000c15 	stw	fp,48(sp)
    9198:	d8c00b15 	stw	r3,44(sp)
    919c:	d9801904 	addi	r6,sp,100
    91a0:	003c9c06 	br	8414 <___vfiprintf_internal_r+0x414>
    91a4:	a0800043 	ldbu	r2,1(r20)
    91a8:	6b400814 	ori	r13,r13,32
    91ac:	a5000044 	addi	r20,r20,1
    91b0:	10803fcc 	andi	r2,r2,255
    91b4:	1080201c 	xori	r2,r2,128
    91b8:	10bfe004 	addi	r2,r2,-128
    91bc:	003bd406 	br	8110 <___vfiprintf_internal_r+0x110>
    91c0:	408001f0 	cmpltui	r2,r8,7
    91c4:	4039883a 	mov	fp,r8
    91c8:	10002426 	beq	r2,zero,925c <___vfiprintf_internal_r+0x125c>
    91cc:	04c00074 	movhi	r19,1
    91d0:	e02f883a 	mov	r23,fp
    91d4:	d8c00415 	stw	r3,16(sp)
    91d8:	9cc01e04 	addi	r19,r19,120
    91dc:	003c4206 	br	82e8 <___vfiprintf_internal_r+0x2e8>
    91e0:	d8c00417 	ldw	r3,16(sp)
    91e4:	0039883a 	mov	fp,zero
    91e8:	d9000415 	stw	r4,16(sp)
    91ec:	1dc00017 	ldw	r23,0(r3)
    91f0:	003d8106 	br	87f8 <___vfiprintf_internal_r+0x7f8>
    91f4:	d8800417 	ldw	r2,16(sp)
    91f8:	0039883a 	mov	fp,zero
    91fc:	d8c00415 	stw	r3,16(sp)
    9200:	15c00017 	ldw	r23,0(r2)
    9204:	0005883a 	mov	r2,zero
    9208:	003cd006 	br	854c <___vfiprintf_internal_r+0x54c>
    920c:	d8800417 	ldw	r2,16(sp)
    9210:	d8c00415 	stw	r3,16(sp)
    9214:	15c00017 	ldw	r23,0(r2)
    9218:	b839d7fa 	srai	fp,r23,31
    921c:	e005883a 	mov	r2,fp
    9220:	003d5306 	br	8770 <___vfiprintf_internal_r+0x770>
    9224:	d8800417 	ldw	r2,16(sp)
    9228:	0039883a 	mov	fp,zero
    922c:	d8c00415 	stw	r3,16(sp)
    9230:	15c00017 	ldw	r23,0(r2)
    9234:	00800044 	movi	r2,1
    9238:	003cc406 	br	854c <___vfiprintf_internal_r+0x54c>
    923c:	3009883a 	mov	r4,r6
    9240:	39c09b04 	addi	r7,r7,620
    9244:	003ead06 	br	8cfc <___vfiprintf_internal_r+0xcfc>
    9248:	d9801904 	addi	r6,sp,100
    924c:	01400044 	movi	r5,1
    9250:	0009883a 	mov	r4,zero
    9254:	9021883a 	mov	r16,r18
    9258:	003c5d06 	br	83d0 <___vfiprintf_internal_r+0x3d0>
    925c:	07000184 	movi	fp,6
    9260:	003fda06 	br	91cc <___vfiprintf_internal_r+0x11cc>
    9264:	703ee51e 	bne	r14,zero,8dfc <___vfiprintf_internal_r+0xdfc>
    9268:	0009883a 	mov	r4,zero
    926c:	d9801904 	addi	r6,sp,100
    9270:	01400044 	movi	r5,1
    9274:	9021883a 	mov	r16,r18
    9278:	003c5506 	br	83d0 <___vfiprintf_internal_r+0x3d0>
    927c:	d9800945 	stb	r6,37(sp)
    9280:	003c1306 	br	82d0 <___vfiprintf_internal_r+0x2d0>
    9284:	d9800a04 	addi	r6,sp,40
    9288:	a80b883a 	mov	r5,r21
    928c:	b009883a 	mov	r4,r22
    9290:	0007edc0 	call	7edc <__sprint_r.part.0>
    9294:	003c7006 	br	8458 <___vfiprintf_internal_r+0x458>
    9298:	db400017 	ldw	r13,0(sp)
    929c:	003d4106 	br	87a4 <___vfiprintf_internal_r+0x7a4>
    92a0:	402f883a 	mov	r23,r8
    92a4:	d8c00415 	stw	r3,16(sp)
    92a8:	4039883a 	mov	fp,r8
    92ac:	003c0e06 	br	82e8 <___vfiprintf_internal_r+0x2e8>
    92b0:	d9800945 	stb	r6,37(sp)
    92b4:	003d2606 	br	8750 <___vfiprintf_internal_r+0x750>
    92b8:	d9800945 	stb	r6,37(sp)
    92bc:	003d4406 	br	87d0 <___vfiprintf_internal_r+0x7d0>
    92c0:	d9800945 	stb	r6,37(sp)
    92c4:	003d7c06 	br	88b8 <___vfiprintf_internal_r+0x8b8>
    92c8:	303f883a 	mov	ra,r6
    92cc:	39c09f04 	addi	r7,r7,636
    92d0:	003f2006 	br	8f54 <___vfiprintf_internal_r+0xf54>
    92d4:	d9800945 	stb	r6,37(sp)
    92d8:	003df806 	br	8abc <___vfiprintf_internal_r+0xabc>
    92dc:	d9800945 	stb	r6,37(sp)
    92e0:	003e0806 	br	8b04 <___vfiprintf_internal_r+0xb04>
    92e4:	21400044 	addi	r5,r4,1
    92e8:	39c09f04 	addi	r7,r7,636
    92ec:	003d0506 	br	8704 <___vfiprintf_internal_r+0x704>
    92f0:	00bfffc4 	movi	r2,-1
    92f4:	d8800115 	stw	r2,4(sp)
    92f8:	003c5a06 	br	8464 <___vfiprintf_internal_r+0x464>
    92fc:	01c00074 	movhi	r7,1
    9300:	301b883a 	mov	r13,r6
    9304:	281d883a 	mov	r14,r5
    9308:	39c09b04 	addi	r7,r7,620
    930c:	003e3e06 	br	8c08 <___vfiprintf_internal_r+0xc08>
    9310:	d8800417 	ldw	r2,16(sp)
    9314:	12000017 	ldw	r8,0(r2)
    9318:	10c00104 	addi	r3,r2,4
    931c:	4000010e 	bge	r8,zero,9324 <___vfiprintf_internal_r+0x1324>
    9320:	023fffc4 	movi	r8,-1
    9324:	a0800043 	ldbu	r2,1(r20)
    9328:	d8c00415 	stw	r3,16(sp)
    932c:	2029883a 	mov	r20,r4
    9330:	10803fcc 	andi	r2,r2,255
    9334:	1080201c 	xori	r2,r2,128
    9338:	10bfe004 	addi	r2,r2,-128
    933c:	003b7406 	br	8110 <___vfiprintf_internal_r+0x110>

00009340 <__vfiprintf_internal>:
    9340:	f811883a 	mov	r8,ra
    9344:	000e1ac0 	call	e1ac <_mcount>
    9348:	403f883a 	mov	ra,r8
    934c:	00c00074 	movhi	r3,1
    9350:	2005883a 	mov	r2,r4
    9354:	1908d117 	ldw	r4,9028(r3)
    9358:	300f883a 	mov	r7,r6
    935c:	280d883a 	mov	r6,r5
    9360:	100b883a 	mov	r5,r2
    9364:	00080001 	jmpi	8000 <___vfiprintf_internal_r>

00009368 <__sbprintf>:
    9368:	f811883a 	mov	r8,ra
    936c:	000e1ac0 	call	e1ac <_mcount>
    9370:	403f883a 	mov	ra,r8
    9374:	defee204 	addi	sp,sp,-1144
    9378:	dfc11d15 	stw	ra,1140(sp)
    937c:	dc811c15 	stw	r18,1136(sp)
    9380:	dc411b15 	stw	r17,1132(sp)
    9384:	dc011a15 	stw	r16,1128(sp)
    9388:	2880030b 	ldhu	r2,12(r5)
    938c:	2b001917 	ldw	r12,100(r5)
    9390:	2ac0038b 	ldhu	r11,14(r5)
    9394:	2a800717 	ldw	r10,28(r5)
    9398:	2a400917 	ldw	r9,36(r5)
    939c:	da001a04 	addi	r8,sp,104
    93a0:	00c10004 	movi	r3,1024
    93a4:	10bfff4c 	andi	r2,r2,65533
    93a8:	2821883a 	mov	r16,r5
    93ac:	d80b883a 	mov	r5,sp
    93b0:	2025883a 	mov	r18,r4
    93b4:	d880030d 	sth	r2,12(sp)
    93b8:	db001915 	stw	r12,100(sp)
    93bc:	dac0038d 	sth	r11,14(sp)
    93c0:	da800715 	stw	r10,28(sp)
    93c4:	da400915 	stw	r9,36(sp)
    93c8:	da000015 	stw	r8,0(sp)
    93cc:	da000415 	stw	r8,16(sp)
    93d0:	d8c00215 	stw	r3,8(sp)
    93d4:	d8c00515 	stw	r3,20(sp)
    93d8:	d8000615 	stw	zero,24(sp)
    93dc:	00080000 	call	8000 <___vfiprintf_internal_r>
    93e0:	1023883a 	mov	r17,r2
    93e4:	10000d0e 	bge	r2,zero,941c <__sbprintf+0xb4>
    93e8:	d880030b 	ldhu	r2,12(sp)
    93ec:	1080100c 	andi	r2,r2,64
    93f0:	10000326 	beq	r2,zero,9400 <__sbprintf+0x98>
    93f4:	8080030b 	ldhu	r2,12(r16)
    93f8:	10801014 	ori	r2,r2,64
    93fc:	8080030d 	sth	r2,12(r16)
    9400:	8805883a 	mov	r2,r17
    9404:	dfc11d17 	ldw	ra,1140(sp)
    9408:	dc811c17 	ldw	r18,1136(sp)
    940c:	dc411b17 	ldw	r17,1132(sp)
    9410:	dc011a17 	ldw	r16,1128(sp)
    9414:	dec11e04 	addi	sp,sp,1144
    9418:	f800283a 	ret
    941c:	d80b883a 	mov	r5,sp
    9420:	9009883a 	mov	r4,r18
    9424:	00048300 	call	4830 <_fflush_r>
    9428:	103fef26 	beq	r2,zero,93e8 <__sbprintf+0x80>
    942c:	047fffc4 	movi	r17,-1
    9430:	003fed06 	br	93e8 <__sbprintf+0x80>

00009434 <_write_r>:
    9434:	f811883a 	mov	r8,ra
    9438:	000e1ac0 	call	e1ac <_mcount>
    943c:	403f883a 	mov	ra,r8
    9440:	defffe04 	addi	sp,sp,-8
    9444:	dfc00115 	stw	ra,4(sp)
    9448:	dc000015 	stw	r16,0(sp)
    944c:	2807883a 	mov	r3,r5
    9450:	00800074 	movhi	r2,1
    9454:	300b883a 	mov	r5,r6
    9458:	2021883a 	mov	r16,r4
    945c:	380d883a 	mov	r6,r7
    9460:	1809883a 	mov	r4,r3
    9464:	1008e315 	stw	zero,9100(r2)
    9468:	000e4d80 	call	e4d8 <write>
    946c:	10ffffd8 	cmpnei	r3,r2,-1
    9470:	18000426 	beq	r3,zero,9484 <_write_r+0x50>
    9474:	dfc00117 	ldw	ra,4(sp)
    9478:	dc000017 	ldw	r16,0(sp)
    947c:	dec00204 	addi	sp,sp,8
    9480:	f800283a 	ret
    9484:	00c00074 	movhi	r3,1
    9488:	18c8e317 	ldw	r3,9100(r3)
    948c:	183ff926 	beq	r3,zero,9474 <_write_r+0x40>
    9490:	80c00015 	stw	r3,0(r16)
    9494:	dfc00117 	ldw	ra,4(sp)
    9498:	dc000017 	ldw	r16,0(sp)
    949c:	dec00204 	addi	sp,sp,8
    94a0:	f800283a 	ret

000094a4 <_close_r>:
    94a4:	f811883a 	mov	r8,ra
    94a8:	000e1ac0 	call	e1ac <_mcount>
    94ac:	403f883a 	mov	ra,r8
    94b0:	defffe04 	addi	sp,sp,-8
    94b4:	dfc00115 	stw	ra,4(sp)
    94b8:	dc000015 	stw	r16,0(sp)
    94bc:	00800074 	movhi	r2,1
    94c0:	2021883a 	mov	r16,r4
    94c4:	2809883a 	mov	r4,r5
    94c8:	1008e315 	stw	zero,9100(r2)
    94cc:	000d9f40 	call	d9f4 <close>
    94d0:	10ffffd8 	cmpnei	r3,r2,-1
    94d4:	18000426 	beq	r3,zero,94e8 <_close_r+0x44>
    94d8:	dfc00117 	ldw	ra,4(sp)
    94dc:	dc000017 	ldw	r16,0(sp)
    94e0:	dec00204 	addi	sp,sp,8
    94e4:	f800283a 	ret
    94e8:	00c00074 	movhi	r3,1
    94ec:	18c8e317 	ldw	r3,9100(r3)
    94f0:	183ff926 	beq	r3,zero,94d8 <_close_r+0x34>
    94f4:	80c00015 	stw	r3,0(r16)
    94f8:	dfc00117 	ldw	ra,4(sp)
    94fc:	dc000017 	ldw	r16,0(sp)
    9500:	dec00204 	addi	sp,sp,8
    9504:	f800283a 	ret

00009508 <__assert_func>:
    9508:	f811883a 	mov	r8,ra
    950c:	000e1ac0 	call	e1ac <_mcount>
    9510:	403f883a 	mov	ra,r8
    9514:	defffc04 	addi	sp,sp,-16
    9518:	dfc00315 	stw	ra,12(sp)
    951c:	00800074 	movhi	r2,1
    9520:	1208d117 	ldw	r8,9028(r2)
    9524:	3807883a 	mov	r3,r7
    9528:	3005883a 	mov	r2,r6
    952c:	42400317 	ldw	r9,12(r8)
    9530:	200f883a 	mov	r7,r4
    9534:	2811883a 	mov	r8,r5
    9538:	180d883a 	mov	r6,r3
    953c:	10000a26 	beq	r2,zero,9568 <__assert_func+0x60>
    9540:	00c00074 	movhi	r3,1
    9544:	18c0a304 	addi	r3,r3,652
    9548:	01400074 	movhi	r5,1
    954c:	2940a704 	addi	r5,r5,668
    9550:	4809883a 	mov	r4,r9
    9554:	d8c00115 	stw	r3,4(sp)
    9558:	da000015 	stw	r8,0(sp)
    955c:	d8800215 	stw	r2,8(sp)
    9560:	00098480 	call	9848 <fiprintf>
    9564:	000a1840 	call	a184 <abort>
    9568:	00c00074 	movhi	r3,1
    956c:	18c1c404 	addi	r3,r3,1808
    9570:	1805883a 	mov	r2,r3
    9574:	003ff406 	br	9548 <__assert_func+0x40>

00009578 <__assert>:
    9578:	f811883a 	mov	r8,ra
    957c:	000e1ac0 	call	e1ac <_mcount>
    9580:	403f883a 	mov	ra,r8
    9584:	deffff04 	addi	sp,sp,-4
    9588:	dfc00015 	stw	ra,0(sp)
    958c:	300f883a 	mov	r7,r6
    9590:	000d883a 	mov	r6,zero
    9594:	00095080 	call	9508 <__assert_func>

00009598 <_calloc_r>:
    9598:	f811883a 	mov	r8,ra
    959c:	000e1ac0 	call	e1ac <_mcount>
    95a0:	403f883a 	mov	ra,r8
    95a4:	deffff04 	addi	sp,sp,-4
    95a8:	dfc00015 	stw	ra,0(sp)
    95ac:	298b383a 	mul	r5,r5,r6
    95b0:	0005a600 	call	5a60 <_malloc_r>
    95b4:	1009883a 	mov	r4,r2
    95b8:	10000c26 	beq	r2,zero,95ec <_calloc_r+0x54>
    95bc:	11bfff17 	ldw	r6,-4(r2)
    95c0:	00bfff04 	movi	r2,-4
    95c4:	308c703a 	and	r6,r6,r2
    95c8:	31bfff04 	addi	r6,r6,-4
    95cc:	30800968 	cmpgeui	r2,r6,37
    95d0:	1000141e 	bne	r2,zero,9624 <_calloc_r+0x8c>
    95d4:	30800530 	cmpltui	r2,r6,20
    95d8:	10000826 	beq	r2,zero,95fc <_calloc_r+0x64>
    95dc:	2005883a 	mov	r2,r4
    95e0:	10000015 	stw	zero,0(r2)
    95e4:	10000115 	stw	zero,4(r2)
    95e8:	10000215 	stw	zero,8(r2)
    95ec:	2005883a 	mov	r2,r4
    95f0:	dfc00017 	ldw	ra,0(sp)
    95f4:	dec00104 	addi	sp,sp,4
    95f8:	f800283a 	ret
    95fc:	20000015 	stw	zero,0(r4)
    9600:	20000115 	stw	zero,4(r4)
    9604:	30800728 	cmpgeui	r2,r6,28
    9608:	10000d26 	beq	r2,zero,9640 <_calloc_r+0xa8>
    960c:	20000215 	stw	zero,8(r4)
    9610:	20000315 	stw	zero,12(r4)
    9614:	31800920 	cmpeqi	r6,r6,36
    9618:	30000b1e 	bne	r6,zero,9648 <_calloc_r+0xb0>
    961c:	20800404 	addi	r2,r4,16
    9620:	003fef06 	br	95e0 <_calloc_r+0x48>
    9624:	000b883a 	mov	r5,zero
    9628:	00064540 	call	6454 <memset>
    962c:	1009883a 	mov	r4,r2
    9630:	2005883a 	mov	r2,r4
    9634:	dfc00017 	ldw	ra,0(sp)
    9638:	dec00104 	addi	sp,sp,4
    963c:	f800283a 	ret
    9640:	20800204 	addi	r2,r4,8
    9644:	003fe606 	br	95e0 <_calloc_r+0x48>
    9648:	20000415 	stw	zero,16(r4)
    964c:	20800604 	addi	r2,r4,24
    9650:	20000515 	stw	zero,20(r4)
    9654:	003fe206 	br	95e0 <_calloc_r+0x48>

00009658 <_fclose_r.part.0>:
    9658:	f811883a 	mov	r8,ra
    965c:	000e1ac0 	call	e1ac <_mcount>
    9660:	403f883a 	mov	ra,r8
    9664:	defffc04 	addi	sp,sp,-16
    9668:	dfc00315 	stw	ra,12(sp)
    966c:	dc800215 	stw	r18,8(sp)
    9670:	dc400115 	stw	r17,4(sp)
    9674:	dc000015 	stw	r16,0(sp)
    9678:	2821883a 	mov	r16,r5
    967c:	2023883a 	mov	r17,r4
    9680:	00045fc0 	call	45fc <__sflush_r>
    9684:	80c00b17 	ldw	r3,44(r16)
    9688:	1025883a 	mov	r18,r2
    968c:	18000426 	beq	r3,zero,96a0 <_fclose_r.part.0+0x48>
    9690:	81400717 	ldw	r5,28(r16)
    9694:	8809883a 	mov	r4,r17
    9698:	183ee83a 	callr	r3
    969c:	10001916 	blt	r2,zero,9704 <_fclose_r.part.0+0xac>
    96a0:	8080030b 	ldhu	r2,12(r16)
    96a4:	1080200c 	andi	r2,r2,128
    96a8:	10001a1e 	bne	r2,zero,9714 <_fclose_r.part.0+0xbc>
    96ac:	81400c17 	ldw	r5,48(r16)
    96b0:	28000526 	beq	r5,zero,96c8 <_fclose_r.part.0+0x70>
    96b4:	80801004 	addi	r2,r16,64
    96b8:	28800226 	beq	r5,r2,96c4 <_fclose_r.part.0+0x6c>
    96bc:	8809883a 	mov	r4,r17
    96c0:	0004e980 	call	4e98 <_free_r>
    96c4:	80000c15 	stw	zero,48(r16)
    96c8:	81401117 	ldw	r5,68(r16)
    96cc:	28000326 	beq	r5,zero,96dc <_fclose_r.part.0+0x84>
    96d0:	8809883a 	mov	r4,r17
    96d4:	0004e980 	call	4e98 <_free_r>
    96d8:	80001115 	stw	zero,68(r16)
    96dc:	0004cf00 	call	4cf0 <__sfp_lock_acquire>
    96e0:	8000030d 	sth	zero,12(r16)
    96e4:	0004d000 	call	4d00 <__sfp_lock_release>
    96e8:	9005883a 	mov	r2,r18
    96ec:	dfc00317 	ldw	ra,12(sp)
    96f0:	dc800217 	ldw	r18,8(sp)
    96f4:	dc400117 	ldw	r17,4(sp)
    96f8:	dc000017 	ldw	r16,0(sp)
    96fc:	dec00404 	addi	sp,sp,16
    9700:	f800283a 	ret
    9704:	8080030b 	ldhu	r2,12(r16)
    9708:	04bfffc4 	movi	r18,-1
    970c:	1080200c 	andi	r2,r2,128
    9710:	103fe626 	beq	r2,zero,96ac <_fclose_r.part.0+0x54>
    9714:	81400417 	ldw	r5,16(r16)
    9718:	8809883a 	mov	r4,r17
    971c:	0004e980 	call	4e98 <_free_r>
    9720:	003fe206 	br	96ac <_fclose_r.part.0+0x54>

00009724 <_fclose_r>:
    9724:	f811883a 	mov	r8,ra
    9728:	000e1ac0 	call	e1ac <_mcount>
    972c:	403f883a 	mov	ra,r8
    9730:	28001926 	beq	r5,zero,9798 <_fclose_r+0x74>
    9734:	defffd04 	addi	sp,sp,-12
    9738:	dfc00215 	stw	ra,8(sp)
    973c:	dc000115 	stw	r16,4(sp)
    9740:	2021883a 	mov	r16,r4
    9744:	20000226 	beq	r4,zero,9750 <_fclose_r+0x2c>
    9748:	20800e17 	ldw	r2,56(r4)
    974c:	10000c26 	beq	r2,zero,9780 <_fclose_r+0x5c>
    9750:	2880030f 	ldh	r2,12(r5)
    9754:	1000051e 	bne	r2,zero,976c <_fclose_r+0x48>
    9758:	0005883a 	mov	r2,zero
    975c:	dfc00217 	ldw	ra,8(sp)
    9760:	dc000117 	ldw	r16,4(sp)
    9764:	dec00304 	addi	sp,sp,12
    9768:	f800283a 	ret
    976c:	8009883a 	mov	r4,r16
    9770:	dfc00217 	ldw	ra,8(sp)
    9774:	dc000117 	ldw	r16,4(sp)
    9778:	dec00304 	addi	sp,sp,12
    977c:	00096581 	jmpi	9658 <_fclose_r.part.0>
    9780:	d9400015 	stw	r5,0(sp)
    9784:	0004cd40 	call	4cd4 <__sinit>
    9788:	d9400017 	ldw	r5,0(sp)
    978c:	2880030f 	ldh	r2,12(r5)
    9790:	103ff126 	beq	r2,zero,9758 <_fclose_r+0x34>
    9794:	003ff506 	br	976c <_fclose_r+0x48>
    9798:	0005883a 	mov	r2,zero
    979c:	f800283a 	ret

000097a0 <fclose>:
    97a0:	f811883a 	mov	r8,ra
    97a4:	000e1ac0 	call	e1ac <_mcount>
    97a8:	403f883a 	mov	ra,r8
    97ac:	20000826 	beq	r4,zero,97d0 <fclose+0x30>
    97b0:	00800074 	movhi	r2,1
    97b4:	200b883a 	mov	r5,r4
    97b8:	1108d117 	ldw	r4,9028(r2)
    97bc:	20000226 	beq	r4,zero,97c8 <fclose+0x28>
    97c0:	20800e17 	ldw	r2,56(r4)
    97c4:	10000526 	beq	r2,zero,97dc <fclose+0x3c>
    97c8:	2880030f 	ldh	r2,12(r5)
    97cc:	1000021e 	bne	r2,zero,97d8 <fclose+0x38>
    97d0:	0005883a 	mov	r2,zero
    97d4:	f800283a 	ret
    97d8:	00096581 	jmpi	9658 <_fclose_r.part.0>
    97dc:	defffd04 	addi	sp,sp,-12
    97e0:	dfc00215 	stw	ra,8(sp)
    97e4:	d9400115 	stw	r5,4(sp)
    97e8:	d9000015 	stw	r4,0(sp)
    97ec:	0004cd40 	call	4cd4 <__sinit>
    97f0:	d9400117 	ldw	r5,4(sp)
    97f4:	d9000017 	ldw	r4,0(sp)
    97f8:	2880030f 	ldh	r2,12(r5)
    97fc:	10000326 	beq	r2,zero,980c <fclose+0x6c>
    9800:	dfc00217 	ldw	ra,8(sp)
    9804:	dec00304 	addi	sp,sp,12
    9808:	00096581 	jmpi	9658 <_fclose_r.part.0>
    980c:	0005883a 	mov	r2,zero
    9810:	dfc00217 	ldw	ra,8(sp)
    9814:	dec00304 	addi	sp,sp,12
    9818:	f800283a 	ret

0000981c <_fiprintf_r>:
    981c:	f811883a 	mov	r8,ra
    9820:	000e1ac0 	call	e1ac <_mcount>
    9824:	403f883a 	mov	ra,r8
    9828:	defffe04 	addi	sp,sp,-8
    982c:	dfc00015 	stw	ra,0(sp)
    9830:	d9c00115 	stw	r7,4(sp)
    9834:	d9c00104 	addi	r7,sp,4
    9838:	0009e9c0 	call	9e9c <_vfiprintf_r>
    983c:	dfc00017 	ldw	ra,0(sp)
    9840:	dec00204 	addi	sp,sp,8
    9844:	f800283a 	ret

00009848 <fiprintf>:
    9848:	f811883a 	mov	r8,ra
    984c:	000e1ac0 	call	e1ac <_mcount>
    9850:	403f883a 	mov	ra,r8
    9854:	defffd04 	addi	sp,sp,-12
    9858:	dfc00015 	stw	ra,0(sp)
    985c:	2005883a 	mov	r2,r4
    9860:	d9800115 	stw	r6,4(sp)
    9864:	d9c00215 	stw	r7,8(sp)
    9868:	00c00074 	movhi	r3,1
    986c:	1908d117 	ldw	r4,9028(r3)
    9870:	280d883a 	mov	r6,r5
    9874:	d9c00104 	addi	r7,sp,4
    9878:	100b883a 	mov	r5,r2
    987c:	0009e9c0 	call	9e9c <_vfiprintf_r>
    9880:	dfc00017 	ldw	ra,0(sp)
    9884:	dec00304 	addi	sp,sp,12
    9888:	f800283a 	ret

0000988c <__fputwc>:
    988c:	f811883a 	mov	r8,ra
    9890:	000e1ac0 	call	e1ac <_mcount>
    9894:	403f883a 	mov	ra,r8
    9898:	defff904 	addi	sp,sp,-28
    989c:	dfc00615 	stw	ra,24(sp)
    98a0:	dd000515 	stw	r20,20(sp)
    98a4:	dcc00415 	stw	r19,16(sp)
    98a8:	dc800315 	stw	r18,12(sp)
    98ac:	dc400215 	stw	r17,8(sp)
    98b0:	dc000115 	stw	r16,4(sp)
    98b4:	2025883a 	mov	r18,r4
    98b8:	2827883a 	mov	r19,r5
    98bc:	3021883a 	mov	r16,r6
    98c0:	0009c000 	call	9c00 <__locale_mb_cur_max>
    98c4:	10800058 	cmpnei	r2,r2,1
    98c8:	1000071e 	bne	r2,zero,98e8 <__fputwc+0x5c>
    98cc:	98bfffc4 	addi	r2,r19,-1
    98d0:	10803fe8 	cmpgeui	r2,r2,255
    98d4:	1000041e 	bne	r2,zero,98e8 <__fputwc+0x5c>
    98d8:	980b883a 	mov	r5,r19
    98dc:	dcc000c5 	stb	r19,3(sp)
    98e0:	05000044 	movi	r20,1
    98e4:	00000a06 	br	9910 <__fputwc+0x84>
    98e8:	81c01704 	addi	r7,r16,92
    98ec:	980d883a 	mov	r6,r19
    98f0:	d94000c4 	addi	r5,sp,3
    98f4:	9009883a 	mov	r4,r18
    98f8:	000a0240 	call	a024 <_wcrtomb_r>
    98fc:	1029883a 	mov	r20,r2
    9900:	10bfffd8 	cmpnei	r2,r2,-1
    9904:	10003926 	beq	r2,zero,99ec <__fputwc+0x160>
    9908:	a0001f26 	beq	r20,zero,9988 <__fputwc+0xfc>
    990c:	d94000c3 	ldbu	r5,3(sp)
    9910:	0023883a 	mov	r17,zero
    9914:	00000a06 	br	9940 <__fputwc+0xb4>
    9918:	80800017 	ldw	r2,0(r16)
    991c:	11400005 	stb	r5,0(r2)
    9920:	80c00017 	ldw	r3,0(r16)
    9924:	18c00044 	addi	r3,r3,1
    9928:	80c00015 	stw	r3,0(r16)
    992c:	8c400044 	addi	r17,r17,1
    9930:	d88000c4 	addi	r2,sp,3
    9934:	1447883a 	add	r3,r2,r17
    9938:	8d00132e 	bgeu	r17,r20,9988 <__fputwc+0xfc>
    993c:	19400003 	ldbu	r5,0(r3)
    9940:	80c00217 	ldw	r3,8(r16)
    9944:	18ffffc4 	addi	r3,r3,-1
    9948:	80c00215 	stw	r3,8(r16)
    994c:	183ff20e 	bge	r3,zero,9918 <__fputwc+0x8c>
    9950:	80800617 	ldw	r2,24(r16)
    9954:	18801616 	blt	r3,r2,99b0 <__fputwc+0x124>
    9958:	80800017 	ldw	r2,0(r16)
    995c:	11400005 	stb	r5,0(r2)
    9960:	80800017 	ldw	r2,0(r16)
    9964:	10c00003 	ldbu	r3,0(r2)
    9968:	10800044 	addi	r2,r2,1
    996c:	18c002a0 	cmpeqi	r3,r3,10
    9970:	1800171e 	bne	r3,zero,99d0 <__fputwc+0x144>
    9974:	80800015 	stw	r2,0(r16)
    9978:	8c400044 	addi	r17,r17,1
    997c:	d88000c4 	addi	r2,sp,3
    9980:	1447883a 	add	r3,r2,r17
    9984:	8d3fed36 	bltu	r17,r20,993c <__fputwc+0xb0>
    9988:	9829883a 	mov	r20,r19
    998c:	a005883a 	mov	r2,r20
    9990:	dfc00617 	ldw	ra,24(sp)
    9994:	dd000517 	ldw	r20,20(sp)
    9998:	dcc00417 	ldw	r19,16(sp)
    999c:	dc800317 	ldw	r18,12(sp)
    99a0:	dc400217 	ldw	r17,8(sp)
    99a4:	dc000117 	ldw	r16,4(sp)
    99a8:	dec00704 	addi	sp,sp,28
    99ac:	f800283a 	ret
    99b0:	29403fcc 	andi	r5,r5,255
    99b4:	800d883a 	mov	r6,r16
    99b8:	9009883a 	mov	r4,r18
    99bc:	0009eac0 	call	9eac <__swbuf_r>
    99c0:	10bfffe0 	cmpeqi	r2,r2,-1
    99c4:	103fd926 	beq	r2,zero,992c <__fputwc+0xa0>
    99c8:	053fffc4 	movi	r20,-1
    99cc:	003fef06 	br	998c <__fputwc+0x100>
    99d0:	800d883a 	mov	r6,r16
    99d4:	01400284 	movi	r5,10
    99d8:	9009883a 	mov	r4,r18
    99dc:	0009eac0 	call	9eac <__swbuf_r>
    99e0:	10bfffe0 	cmpeqi	r2,r2,-1
    99e4:	103fd126 	beq	r2,zero,992c <__fputwc+0xa0>
    99e8:	003ff706 	br	99c8 <__fputwc+0x13c>
    99ec:	8080030b 	ldhu	r2,12(r16)
    99f0:	10801014 	ori	r2,r2,64
    99f4:	8080030d 	sth	r2,12(r16)
    99f8:	003fe406 	br	998c <__fputwc+0x100>

000099fc <_fputwc_r>:
    99fc:	f811883a 	mov	r8,ra
    9a00:	000e1ac0 	call	e1ac <_mcount>
    9a04:	403f883a 	mov	ra,r8
    9a08:	3080030b 	ldhu	r2,12(r6)
    9a0c:	10c8000c 	andi	r3,r2,8192
    9a10:	1800051e 	bne	r3,zero,9a28 <_fputwc_r+0x2c>
    9a14:	30c01917 	ldw	r3,100(r6)
    9a18:	10880014 	ori	r2,r2,8192
    9a1c:	3080030d 	sth	r2,12(r6)
    9a20:	18880014 	ori	r2,r3,8192
    9a24:	30801915 	stw	r2,100(r6)
    9a28:	000988c1 	jmpi	988c <__fputwc>

00009a2c <fputwc>:
    9a2c:	f811883a 	mov	r8,ra
    9a30:	000e1ac0 	call	e1ac <_mcount>
    9a34:	403f883a 	mov	ra,r8
    9a38:	defffc04 	addi	sp,sp,-16
    9a3c:	dfc00315 	stw	ra,12(sp)
    9a40:	dc000215 	stw	r16,8(sp)
    9a44:	00800074 	movhi	r2,1
    9a48:	1408d117 	ldw	r16,9028(r2)
    9a4c:	280d883a 	mov	r6,r5
    9a50:	200b883a 	mov	r5,r4
    9a54:	80000226 	beq	r16,zero,9a60 <fputwc+0x34>
    9a58:	80800e17 	ldw	r2,56(r16)
    9a5c:	10000d26 	beq	r2,zero,9a94 <fputwc+0x68>
    9a60:	3080030b 	ldhu	r2,12(r6)
    9a64:	10c8000c 	andi	r3,r2,8192
    9a68:	1800051e 	bne	r3,zero,9a80 <fputwc+0x54>
    9a6c:	30c01917 	ldw	r3,100(r6)
    9a70:	10880014 	ori	r2,r2,8192
    9a74:	3080030d 	sth	r2,12(r6)
    9a78:	18880014 	ori	r2,r3,8192
    9a7c:	30801915 	stw	r2,100(r6)
    9a80:	8009883a 	mov	r4,r16
    9a84:	dfc00317 	ldw	ra,12(sp)
    9a88:	dc000217 	ldw	r16,8(sp)
    9a8c:	dec00404 	addi	sp,sp,16
    9a90:	000988c1 	jmpi	988c <__fputwc>
    9a94:	d9000015 	stw	r4,0(sp)
    9a98:	8009883a 	mov	r4,r16
    9a9c:	d9800115 	stw	r6,4(sp)
    9aa0:	0004cd40 	call	4cd4 <__sinit>
    9aa4:	d9800117 	ldw	r6,4(sp)
    9aa8:	d9400017 	ldw	r5,0(sp)
    9aac:	003fec06 	br	9a60 <fputwc+0x34>

00009ab0 <_fstat_r>:
    9ab0:	f811883a 	mov	r8,ra
    9ab4:	000e1ac0 	call	e1ac <_mcount>
    9ab8:	403f883a 	mov	ra,r8
    9abc:	defffe04 	addi	sp,sp,-8
    9ac0:	dfc00115 	stw	ra,4(sp)
    9ac4:	dc000015 	stw	r16,0(sp)
    9ac8:	2807883a 	mov	r3,r5
    9acc:	00800074 	movhi	r2,1
    9ad0:	300b883a 	mov	r5,r6
    9ad4:	2021883a 	mov	r16,r4
    9ad8:	1809883a 	mov	r4,r3
    9adc:	1008e315 	stw	zero,9100(r2)
    9ae0:	000db380 	call	db38 <fstat>
    9ae4:	10ffffd8 	cmpnei	r3,r2,-1
    9ae8:	18000426 	beq	r3,zero,9afc <_fstat_r+0x4c>
    9aec:	dfc00117 	ldw	ra,4(sp)
    9af0:	dc000017 	ldw	r16,0(sp)
    9af4:	dec00204 	addi	sp,sp,8
    9af8:	f800283a 	ret
    9afc:	00c00074 	movhi	r3,1
    9b00:	18c8e317 	ldw	r3,9100(r3)
    9b04:	183ff926 	beq	r3,zero,9aec <_fstat_r+0x3c>
    9b08:	80c00015 	stw	r3,0(r16)
    9b0c:	dfc00117 	ldw	ra,4(sp)
    9b10:	dc000017 	ldw	r16,0(sp)
    9b14:	dec00204 	addi	sp,sp,8
    9b18:	f800283a 	ret

00009b1c <_isatty_r>:
    9b1c:	f811883a 	mov	r8,ra
    9b20:	000e1ac0 	call	e1ac <_mcount>
    9b24:	403f883a 	mov	ra,r8
    9b28:	defffe04 	addi	sp,sp,-8
    9b2c:	dfc00115 	stw	ra,4(sp)
    9b30:	dc000015 	stw	r16,0(sp)
    9b34:	00800074 	movhi	r2,1
    9b38:	2021883a 	mov	r16,r4
    9b3c:	2809883a 	mov	r4,r5
    9b40:	1008e315 	stw	zero,9100(r2)
    9b44:	000df000 	call	df00 <isatty>
    9b48:	10ffffd8 	cmpnei	r3,r2,-1
    9b4c:	18000426 	beq	r3,zero,9b60 <_isatty_r+0x44>
    9b50:	dfc00117 	ldw	ra,4(sp)
    9b54:	dc000017 	ldw	r16,0(sp)
    9b58:	dec00204 	addi	sp,sp,8
    9b5c:	f800283a 	ret
    9b60:	00c00074 	movhi	r3,1
    9b64:	18c8e317 	ldw	r3,9100(r3)
    9b68:	183ff926 	beq	r3,zero,9b50 <_isatty_r+0x34>
    9b6c:	80c00015 	stw	r3,0(r16)
    9b70:	dfc00117 	ldw	ra,4(sp)
    9b74:	dc000017 	ldw	r16,0(sp)
    9b78:	dec00204 	addi	sp,sp,8
    9b7c:	f800283a 	ret

00009b80 <_setlocale_r>:
    9b80:	f811883a 	mov	r8,ra
    9b84:	000e1ac0 	call	e1ac <_mcount>
    9b88:	403f883a 	mov	ra,r8
    9b8c:	30001626 	beq	r6,zero,9be8 <_setlocale_r+0x68>
    9b90:	defffe04 	addi	sp,sp,-8
    9b94:	dfc00115 	stw	ra,4(sp)
    9b98:	dc000015 	stw	r16,0(sp)
    9b9c:	01400074 	movhi	r5,1
    9ba0:	2940b404 	addi	r5,r5,720
    9ba4:	3009883a 	mov	r4,r6
    9ba8:	3021883a 	mov	r16,r6
    9bac:	0009de00 	call	9de0 <strcmp>
    9bb0:	1000061e 	bne	r2,zero,9bcc <_setlocale_r+0x4c>
    9bb4:	00800074 	movhi	r2,1
    9bb8:	1080b304 	addi	r2,r2,716
    9bbc:	dfc00117 	ldw	ra,4(sp)
    9bc0:	dc000017 	ldw	r16,0(sp)
    9bc4:	dec00204 	addi	sp,sp,8
    9bc8:	f800283a 	ret
    9bcc:	80800003 	ldbu	r2,0(r16)
    9bd0:	10bfef44 	addi	r2,r2,-67
    9bd4:	10000726 	beq	r2,zero,9bf4 <_setlocale_r+0x74>
    9bd8:	80800003 	ldbu	r2,0(r16)
    9bdc:	103ff526 	beq	r2,zero,9bb4 <_setlocale_r+0x34>
    9be0:	0005883a 	mov	r2,zero
    9be4:	003ff506 	br	9bbc <_setlocale_r+0x3c>
    9be8:	00800074 	movhi	r2,1
    9bec:	1080b304 	addi	r2,r2,716
    9bf0:	f800283a 	ret
    9bf4:	80800043 	ldbu	r2,1(r16)
    9bf8:	103fee26 	beq	r2,zero,9bb4 <_setlocale_r+0x34>
    9bfc:	003ff606 	br	9bd8 <_setlocale_r+0x58>

00009c00 <__locale_mb_cur_max>:
    9c00:	f811883a 	mov	r8,ra
    9c04:	000e1ac0 	call	e1ac <_mcount>
    9c08:	403f883a 	mov	ra,r8
    9c0c:	00800074 	movhi	r2,1
    9c10:	10843407 	ldb	r2,4304(r2)
    9c14:	f800283a 	ret

00009c18 <setlocale>:
    9c18:	f811883a 	mov	r8,ra
    9c1c:	000e1ac0 	call	e1ac <_mcount>
    9c20:	403f883a 	mov	ra,r8
    9c24:	28001626 	beq	r5,zero,9c80 <setlocale+0x68>
    9c28:	defffe04 	addi	sp,sp,-8
    9c2c:	dfc00115 	stw	ra,4(sp)
    9c30:	dc000015 	stw	r16,0(sp)
    9c34:	2821883a 	mov	r16,r5
    9c38:	01400074 	movhi	r5,1
    9c3c:	2940b404 	addi	r5,r5,720
    9c40:	8009883a 	mov	r4,r16
    9c44:	0009de00 	call	9de0 <strcmp>
    9c48:	1000061e 	bne	r2,zero,9c64 <setlocale+0x4c>
    9c4c:	00800074 	movhi	r2,1
    9c50:	1080b304 	addi	r2,r2,716
    9c54:	dfc00117 	ldw	ra,4(sp)
    9c58:	dc000017 	ldw	r16,0(sp)
    9c5c:	dec00204 	addi	sp,sp,8
    9c60:	f800283a 	ret
    9c64:	80800003 	ldbu	r2,0(r16)
    9c68:	10bfef44 	addi	r2,r2,-67
    9c6c:	10000726 	beq	r2,zero,9c8c <setlocale+0x74>
    9c70:	80800003 	ldbu	r2,0(r16)
    9c74:	103ff526 	beq	r2,zero,9c4c <setlocale+0x34>
    9c78:	0005883a 	mov	r2,zero
    9c7c:	003ff506 	br	9c54 <setlocale+0x3c>
    9c80:	00800074 	movhi	r2,1
    9c84:	1080b304 	addi	r2,r2,716
    9c88:	f800283a 	ret
    9c8c:	80800043 	ldbu	r2,1(r16)
    9c90:	103fee26 	beq	r2,zero,9c4c <setlocale+0x34>
    9c94:	003ff606 	br	9c70 <setlocale+0x58>

00009c98 <_lseek_r>:
    9c98:	f811883a 	mov	r8,ra
    9c9c:	000e1ac0 	call	e1ac <_mcount>
    9ca0:	403f883a 	mov	ra,r8
    9ca4:	defffe04 	addi	sp,sp,-8
    9ca8:	dfc00115 	stw	ra,4(sp)
    9cac:	dc000015 	stw	r16,0(sp)
    9cb0:	2807883a 	mov	r3,r5
    9cb4:	00800074 	movhi	r2,1
    9cb8:	300b883a 	mov	r5,r6
    9cbc:	2021883a 	mov	r16,r4
    9cc0:	380d883a 	mov	r6,r7
    9cc4:	1809883a 	mov	r4,r3
    9cc8:	1008e315 	stw	zero,9100(r2)
    9ccc:	000e09c0 	call	e09c <lseek>
    9cd0:	10ffffd8 	cmpnei	r3,r2,-1
    9cd4:	18000426 	beq	r3,zero,9ce8 <_lseek_r+0x50>
    9cd8:	dfc00117 	ldw	ra,4(sp)
    9cdc:	dc000017 	ldw	r16,0(sp)
    9ce0:	dec00204 	addi	sp,sp,8
    9ce4:	f800283a 	ret
    9ce8:	00c00074 	movhi	r3,1
    9cec:	18c8e317 	ldw	r3,9100(r3)
    9cf0:	183ff926 	beq	r3,zero,9cd8 <_lseek_r+0x40>
    9cf4:	80c00015 	stw	r3,0(r16)
    9cf8:	dfc00117 	ldw	ra,4(sp)
    9cfc:	dc000017 	ldw	r16,0(sp)
    9d00:	dec00204 	addi	sp,sp,8
    9d04:	f800283a 	ret

00009d08 <_mbtowc_r>:
    9d08:	f811883a 	mov	r8,ra
    9d0c:	000e1ac0 	call	e1ac <_mcount>
    9d10:	403f883a 	mov	ra,r8
    9d14:	00800074 	movhi	r2,1
    9d18:	10842317 	ldw	r2,4236(r2)
    9d1c:	1000683a 	jmp	r2

00009d20 <__ascii_mbtowc>:
    9d20:	f811883a 	mov	r8,ra
    9d24:	000e1ac0 	call	e1ac <_mcount>
    9d28:	403f883a 	mov	ra,r8
    9d2c:	deffff04 	addi	sp,sp,-4
    9d30:	28000826 	beq	r5,zero,9d54 <__ascii_mbtowc+0x34>
    9d34:	30000926 	beq	r6,zero,9d5c <__ascii_mbtowc+0x3c>
    9d38:	38000b26 	beq	r7,zero,9d68 <__ascii_mbtowc+0x48>
    9d3c:	30800003 	ldbu	r2,0(r6)
    9d40:	28800015 	stw	r2,0(r5)
    9d44:	30800003 	ldbu	r2,0(r6)
    9d48:	1004c03a 	cmpne	r2,r2,zero
    9d4c:	dec00104 	addi	sp,sp,4
    9d50:	f800283a 	ret
    9d54:	d80b883a 	mov	r5,sp
    9d58:	303ff71e 	bne	r6,zero,9d38 <__ascii_mbtowc+0x18>
    9d5c:	0005883a 	mov	r2,zero
    9d60:	dec00104 	addi	sp,sp,4
    9d64:	f800283a 	ret
    9d68:	00bfff84 	movi	r2,-2
    9d6c:	003ff706 	br	9d4c <__ascii_mbtowc+0x2c>

00009d70 <_read_r>:
    9d70:	f811883a 	mov	r8,ra
    9d74:	000e1ac0 	call	e1ac <_mcount>
    9d78:	403f883a 	mov	ra,r8
    9d7c:	defffe04 	addi	sp,sp,-8
    9d80:	dfc00115 	stw	ra,4(sp)
    9d84:	dc000015 	stw	r16,0(sp)
    9d88:	2807883a 	mov	r3,r5
    9d8c:	00800074 	movhi	r2,1
    9d90:	300b883a 	mov	r5,r6
    9d94:	2021883a 	mov	r16,r4
    9d98:	380d883a 	mov	r6,r7
    9d9c:	1809883a 	mov	r4,r3
    9da0:	1008e315 	stw	zero,9100(r2)
    9da4:	000e2480 	call	e248 <read>
    9da8:	10ffffd8 	cmpnei	r3,r2,-1
    9dac:	18000426 	beq	r3,zero,9dc0 <_read_r+0x50>
    9db0:	dfc00117 	ldw	ra,4(sp)
    9db4:	dc000017 	ldw	r16,0(sp)
    9db8:	dec00204 	addi	sp,sp,8
    9dbc:	f800283a 	ret
    9dc0:	00c00074 	movhi	r3,1
    9dc4:	18c8e317 	ldw	r3,9100(r3)
    9dc8:	183ff926 	beq	r3,zero,9db0 <_read_r+0x40>
    9dcc:	80c00015 	stw	r3,0(r16)
    9dd0:	dfc00117 	ldw	ra,4(sp)
    9dd4:	dc000017 	ldw	r16,0(sp)
    9dd8:	dec00204 	addi	sp,sp,8
    9ddc:	f800283a 	ret

00009de0 <strcmp>:
    9de0:	f811883a 	mov	r8,ra
    9de4:	000e1ac0 	call	e1ac <_mcount>
    9de8:	403f883a 	mov	ra,r8
    9dec:	2144b03a 	or	r2,r4,r5
    9df0:	108000cc 	andi	r2,r2,3
    9df4:	1000141e 	bne	r2,zero,9e48 <strcmp+0x68>
    9df8:	20800017 	ldw	r2,0(r4)
    9dfc:	28c00017 	ldw	r3,0(r5)
    9e00:	10c0111e 	bne	r2,r3,9e48 <strcmp+0x68>
    9e04:	01ffbff4 	movhi	r7,65279
    9e08:	01a02074 	movhi	r6,32897
    9e0c:	39ffbfc4 	addi	r7,r7,-257
    9e10:	31a02004 	addi	r6,r6,-32640
    9e14:	00000306 	br	9e24 <strcmp+0x44>
    9e18:	20800017 	ldw	r2,0(r4)
    9e1c:	28c00017 	ldw	r3,0(r5)
    9e20:	10c0091e 	bne	r2,r3,9e48 <strcmp+0x68>
    9e24:	11c7883a 	add	r3,r2,r7
    9e28:	0084303a 	nor	r2,zero,r2
    9e2c:	1884703a 	and	r2,r3,r2
    9e30:	1184703a 	and	r2,r2,r6
    9e34:	21000104 	addi	r4,r4,4
    9e38:	29400104 	addi	r5,r5,4
    9e3c:	103ff626 	beq	r2,zero,9e18 <strcmp+0x38>
    9e40:	0005883a 	mov	r2,zero
    9e44:	f800283a 	ret
    9e48:	20c00003 	ldbu	r3,0(r4)
    9e4c:	18803fcc 	andi	r2,r3,255
    9e50:	1080201c 	xori	r2,r2,128
    9e54:	10bfe004 	addi	r2,r2,-128
    9e58:	1000071e 	bne	r2,zero,9e78 <strcmp+0x98>
    9e5c:	00000a06 	br	9e88 <strcmp+0xa8>
    9e60:	20c00003 	ldbu	r3,0(r4)
    9e64:	29400044 	addi	r5,r5,1
    9e68:	18803fcc 	andi	r2,r3,255
    9e6c:	1080201c 	xori	r2,r2,128
    9e70:	10bfe004 	addi	r2,r2,-128
    9e74:	10000726 	beq	r2,zero,9e94 <strcmp+0xb4>
    9e78:	29800007 	ldb	r6,0(r5)
    9e7c:	21000044 	addi	r4,r4,1
    9e80:	30bff726 	beq	r6,r2,9e60 <strcmp+0x80>
    9e84:	18803fcc 	andi	r2,r3,255
    9e88:	28c00003 	ldbu	r3,0(r5)
    9e8c:	10c5c83a 	sub	r2,r2,r3
    9e90:	f800283a 	ret
    9e94:	0005883a 	mov	r2,zero
    9e98:	003ffb06 	br	9e88 <strcmp+0xa8>

00009e9c <_vfiprintf_r>:
    9e9c:	f811883a 	mov	r8,ra
    9ea0:	000e1ac0 	call	e1ac <_mcount>
    9ea4:	403f883a 	mov	ra,r8
    9ea8:	00080001 	jmpi	8000 <___vfiprintf_internal_r>

00009eac <__swbuf_r>:
    9eac:	f811883a 	mov	r8,ra
    9eb0:	000e1ac0 	call	e1ac <_mcount>
    9eb4:	403f883a 	mov	ra,r8
    9eb8:	defffb04 	addi	sp,sp,-20
    9ebc:	dfc00415 	stw	ra,16(sp)
    9ec0:	dcc00315 	stw	r19,12(sp)
    9ec4:	dc800215 	stw	r18,8(sp)
    9ec8:	dc400115 	stw	r17,4(sp)
    9ecc:	dc000015 	stw	r16,0(sp)
    9ed0:	2027883a 	mov	r19,r4
    9ed4:	2823883a 	mov	r17,r5
    9ed8:	3021883a 	mov	r16,r6
    9edc:	20000226 	beq	r4,zero,9ee8 <__swbuf_r+0x3c>
    9ee0:	20800e17 	ldw	r2,56(r4)
    9ee4:	10003e26 	beq	r2,zero,9fe0 <__swbuf_r+0x134>
    9ee8:	80800617 	ldw	r2,24(r16)
    9eec:	80c0030b 	ldhu	r3,12(r16)
    9ef0:	80800215 	stw	r2,8(r16)
    9ef4:	1880020c 	andi	r2,r3,8
    9ef8:	10001f26 	beq	r2,zero,9f78 <__swbuf_r+0xcc>
    9efc:	80800417 	ldw	r2,16(r16)
    9f00:	10001d26 	beq	r2,zero,9f78 <__swbuf_r+0xcc>
    9f04:	1948000c 	andi	r5,r3,8192
    9f08:	8c803fcc 	andi	r18,r17,255
    9f0c:	28002326 	beq	r5,zero,9f9c <__swbuf_r+0xf0>
    9f10:	80c00017 	ldw	r3,0(r16)
    9f14:	81000517 	ldw	r4,20(r16)
    9f18:	1885c83a 	sub	r2,r3,r2
    9f1c:	1100290e 	bge	r2,r4,9fc4 <__swbuf_r+0x118>
    9f20:	10800044 	addi	r2,r2,1
    9f24:	81400217 	ldw	r5,8(r16)
    9f28:	19000044 	addi	r4,r3,1
    9f2c:	81000015 	stw	r4,0(r16)
    9f30:	297fffc4 	addi	r5,r5,-1
    9f34:	81400215 	stw	r5,8(r16)
    9f38:	1c400005 	stb	r17,0(r3)
    9f3c:	80c00517 	ldw	r3,20(r16)
    9f40:	18802926 	beq	r3,r2,9fe8 <__swbuf_r+0x13c>
    9f44:	8080030b 	ldhu	r2,12(r16)
    9f48:	1080004c 	andi	r2,r2,1
    9f4c:	10000226 	beq	r2,zero,9f58 <__swbuf_r+0xac>
    9f50:	90800298 	cmpnei	r2,r18,10
    9f54:	10002426 	beq	r2,zero,9fe8 <__swbuf_r+0x13c>
    9f58:	9005883a 	mov	r2,r18
    9f5c:	dfc00417 	ldw	ra,16(sp)
    9f60:	dcc00317 	ldw	r19,12(sp)
    9f64:	dc800217 	ldw	r18,8(sp)
    9f68:	dc400117 	ldw	r17,4(sp)
    9f6c:	dc000017 	ldw	r16,0(sp)
    9f70:	dec00504 	addi	sp,sp,20
    9f74:	f800283a 	ret
    9f78:	800b883a 	mov	r5,r16
    9f7c:	9809883a 	mov	r4,r19
    9f80:	0002a040 	call	2a04 <__swsetup_r>
    9f84:	10001c1e 	bne	r2,zero,9ff8 <__swbuf_r+0x14c>
    9f88:	80c0030b 	ldhu	r3,12(r16)
    9f8c:	80800417 	ldw	r2,16(r16)
    9f90:	8c803fcc 	andi	r18,r17,255
    9f94:	1948000c 	andi	r5,r3,8192
    9f98:	283fdd1e 	bne	r5,zero,9f10 <__swbuf_r+0x64>
    9f9c:	81001917 	ldw	r4,100(r16)
    9fa0:	18c80014 	ori	r3,r3,8192
    9fa4:	0177ffc4 	movi	r5,-8193
    9fa8:	2148703a 	and	r4,r4,r5
    9fac:	80c0030d 	sth	r3,12(r16)
    9fb0:	80c00017 	ldw	r3,0(r16)
    9fb4:	81001915 	stw	r4,100(r16)
    9fb8:	81000517 	ldw	r4,20(r16)
    9fbc:	1885c83a 	sub	r2,r3,r2
    9fc0:	113fd716 	blt	r2,r4,9f20 <__swbuf_r+0x74>
    9fc4:	800b883a 	mov	r5,r16
    9fc8:	9809883a 	mov	r4,r19
    9fcc:	00048300 	call	4830 <_fflush_r>
    9fd0:	1000091e 	bne	r2,zero,9ff8 <__swbuf_r+0x14c>
    9fd4:	80c00017 	ldw	r3,0(r16)
    9fd8:	00800044 	movi	r2,1
    9fdc:	003fd106 	br	9f24 <__swbuf_r+0x78>
    9fe0:	0004cd40 	call	4cd4 <__sinit>
    9fe4:	003fc006 	br	9ee8 <__swbuf_r+0x3c>
    9fe8:	800b883a 	mov	r5,r16
    9fec:	9809883a 	mov	r4,r19
    9ff0:	00048300 	call	4830 <_fflush_r>
    9ff4:	103fd826 	beq	r2,zero,9f58 <__swbuf_r+0xac>
    9ff8:	04bfffc4 	movi	r18,-1
    9ffc:	003fd606 	br	9f58 <__swbuf_r+0xac>

0000a000 <__swbuf>:
    a000:	f811883a 	mov	r8,ra
    a004:	000e1ac0 	call	e1ac <_mcount>
    a008:	403f883a 	mov	ra,r8
    a00c:	00c00074 	movhi	r3,1
    a010:	2005883a 	mov	r2,r4
    a014:	1908d117 	ldw	r4,9028(r3)
    a018:	280d883a 	mov	r6,r5
    a01c:	100b883a 	mov	r5,r2
    a020:	0009eac1 	jmpi	9eac <__swbuf_r>

0000a024 <_wcrtomb_r>:
    a024:	f811883a 	mov	r8,ra
    a028:	000e1ac0 	call	e1ac <_mcount>
    a02c:	403f883a 	mov	ra,r8
    a030:	defffa04 	addi	sp,sp,-24
    a034:	dfc00515 	stw	ra,20(sp)
    a038:	dc400415 	stw	r17,16(sp)
    a03c:	dc000315 	stw	r16,12(sp)
    a040:	00800074 	movhi	r2,1
    a044:	10842217 	ldw	r2,4232(r2)
    a048:	2023883a 	mov	r17,r4
    a04c:	3821883a 	mov	r16,r7
    a050:	28000826 	beq	r5,zero,a074 <_wcrtomb_r+0x50>
    a054:	103ee83a 	callr	r2
    a058:	10ffffd8 	cmpnei	r3,r2,-1
    a05c:	18000a26 	beq	r3,zero,a088 <_wcrtomb_r+0x64>
    a060:	dfc00517 	ldw	ra,20(sp)
    a064:	dc400417 	ldw	r17,16(sp)
    a068:	dc000317 	ldw	r16,12(sp)
    a06c:	dec00604 	addi	sp,sp,24
    a070:	f800283a 	ret
    a074:	000d883a 	mov	r6,zero
    a078:	d9400084 	addi	r5,sp,2
    a07c:	103ee83a 	callr	r2
    a080:	10ffffd8 	cmpnei	r3,r2,-1
    a084:	183ff61e 	bne	r3,zero,a060 <_wcrtomb_r+0x3c>
    a088:	00802284 	movi	r2,138
    a08c:	80000015 	stw	zero,0(r16)
    a090:	88800015 	stw	r2,0(r17)
    a094:	00bfffc4 	movi	r2,-1
    a098:	003ff106 	br	a060 <_wcrtomb_r+0x3c>

0000a09c <wcrtomb>:
    a09c:	f811883a 	mov	r8,ra
    a0a0:	000e1ac0 	call	e1ac <_mcount>
    a0a4:	403f883a 	mov	ra,r8
    a0a8:	defffa04 	addi	sp,sp,-24
    a0ac:	dfc00515 	stw	ra,20(sp)
    a0b0:	dc400415 	stw	r17,16(sp)
    a0b4:	dc000315 	stw	r16,12(sp)
    a0b8:	00c00074 	movhi	r3,1
    a0bc:	1c48d117 	ldw	r17,9028(r3)
    a0c0:	00c00074 	movhi	r3,1
    a0c4:	18c42217 	ldw	r3,4232(r3)
    a0c8:	3021883a 	mov	r16,r6
    a0cc:	20000c26 	beq	r4,zero,a100 <wcrtomb+0x64>
    a0d0:	280d883a 	mov	r6,r5
    a0d4:	800f883a 	mov	r7,r16
    a0d8:	200b883a 	mov	r5,r4
    a0dc:	8809883a 	mov	r4,r17
    a0e0:	183ee83a 	callr	r3
    a0e4:	10ffffd8 	cmpnei	r3,r2,-1
    a0e8:	18000c26 	beq	r3,zero,a11c <wcrtomb+0x80>
    a0ec:	dfc00517 	ldw	ra,20(sp)
    a0f0:	dc400417 	ldw	r17,16(sp)
    a0f4:	dc000317 	ldw	r16,12(sp)
    a0f8:	dec00604 	addi	sp,sp,24
    a0fc:	f800283a 	ret
    a100:	300f883a 	mov	r7,r6
    a104:	d9400084 	addi	r5,sp,2
    a108:	000d883a 	mov	r6,zero
    a10c:	8809883a 	mov	r4,r17
    a110:	183ee83a 	callr	r3
    a114:	10ffffd8 	cmpnei	r3,r2,-1
    a118:	183ff41e 	bne	r3,zero,a0ec <wcrtomb+0x50>
    a11c:	00802284 	movi	r2,138
    a120:	80000015 	stw	zero,0(r16)
    a124:	88800015 	stw	r2,0(r17)
    a128:	00bfffc4 	movi	r2,-1
    a12c:	003fef06 	br	a0ec <wcrtomb+0x50>

0000a130 <_wctomb_r>:
    a130:	f811883a 	mov	r8,ra
    a134:	000e1ac0 	call	e1ac <_mcount>
    a138:	403f883a 	mov	ra,r8
    a13c:	00800074 	movhi	r2,1
    a140:	10842217 	ldw	r2,4232(r2)
    a144:	1000683a 	jmp	r2

0000a148 <__ascii_wctomb>:
    a148:	f811883a 	mov	r8,ra
    a14c:	000e1ac0 	call	e1ac <_mcount>
    a150:	403f883a 	mov	ra,r8
    a154:	28000926 	beq	r5,zero,a17c <__ascii_wctomb+0x34>
    a158:	30804030 	cmpltui	r2,r6,256
    a15c:	10000326 	beq	r2,zero,a16c <__ascii_wctomb+0x24>
    a160:	00800044 	movi	r2,1
    a164:	29800005 	stb	r6,0(r5)
    a168:	f800283a 	ret
    a16c:	00802284 	movi	r2,138
    a170:	20800015 	stw	r2,0(r4)
    a174:	00bfffc4 	movi	r2,-1
    a178:	f800283a 	ret
    a17c:	0005883a 	mov	r2,zero
    a180:	f800283a 	ret

0000a184 <abort>:
    a184:	f811883a 	mov	r8,ra
    a188:	000e1ac0 	call	e1ac <_mcount>
    a18c:	403f883a 	mov	ra,r8
    a190:	deffff04 	addi	sp,sp,-4
    a194:	dfc00015 	stw	ra,0(sp)
    a198:	01000184 	movi	r4,6
    a19c:	000a44c0 	call	a44c <raise>
    a1a0:	01000044 	movi	r4,1
    a1a4:	000daf40 	call	daf4 <_exit>

0000a1a8 <_init_signal_r>:
    a1a8:	f811883a 	mov	r8,ra
    a1ac:	000e1ac0 	call	e1ac <_mcount>
    a1b0:	403f883a 	mov	ra,r8
    a1b4:	2080b717 	ldw	r2,732(r4)
    a1b8:	10000226 	beq	r2,zero,a1c4 <_init_signal_r+0x1c>
    a1bc:	0005883a 	mov	r2,zero
    a1c0:	f800283a 	ret
    a1c4:	defffe04 	addi	sp,sp,-8
    a1c8:	dfc00115 	stw	ra,4(sp)
    a1cc:	dc000015 	stw	r16,0(sp)
    a1d0:	01402004 	movi	r5,128
    a1d4:	2021883a 	mov	r16,r4
    a1d8:	0005a600 	call	5a60 <_malloc_r>
    a1dc:	8080b715 	stw	r2,732(r16)
    a1e0:	1009883a 	mov	r4,r2
    a1e4:	10000826 	beq	r2,zero,a208 <_init_signal_r+0x60>
    a1e8:	01802004 	movi	r6,128
    a1ec:	000b883a 	mov	r5,zero
    a1f0:	00064540 	call	6454 <memset>
    a1f4:	0005883a 	mov	r2,zero
    a1f8:	dfc00117 	ldw	ra,4(sp)
    a1fc:	dc000017 	ldw	r16,0(sp)
    a200:	dec00204 	addi	sp,sp,8
    a204:	f800283a 	ret
    a208:	00bfffc4 	movi	r2,-1
    a20c:	003ffa06 	br	a1f8 <_init_signal_r+0x50>

0000a210 <_signal_r>:
    a210:	f811883a 	mov	r8,ra
    a214:	000e1ac0 	call	e1ac <_mcount>
    a218:	403f883a 	mov	ra,r8
    a21c:	defffc04 	addi	sp,sp,-16
    a220:	dfc00315 	stw	ra,12(sp)
    a224:	dc800215 	stw	r18,8(sp)
    a228:	dc400115 	stw	r17,4(sp)
    a22c:	dc000015 	stw	r16,0(sp)
    a230:	28800830 	cmpltui	r2,r5,32
    a234:	2023883a 	mov	r17,r4
    a238:	10000e26 	beq	r2,zero,a274 <_signal_r+0x64>
    a23c:	20c0b717 	ldw	r3,732(r4)
    a240:	2821883a 	mov	r16,r5
    a244:	3025883a 	mov	r18,r6
    a248:	18000e26 	beq	r3,zero,a284 <_signal_r+0x74>
    a24c:	802090ba 	slli	r16,r16,2
    a250:	1c21883a 	add	r16,r3,r16
    a254:	80800017 	ldw	r2,0(r16)
    a258:	84800015 	stw	r18,0(r16)
    a25c:	dfc00317 	ldw	ra,12(sp)
    a260:	dc800217 	ldw	r18,8(sp)
    a264:	dc400117 	ldw	r17,4(sp)
    a268:	dc000017 	ldw	r16,0(sp)
    a26c:	dec00404 	addi	sp,sp,16
    a270:	f800283a 	ret
    a274:	00800584 	movi	r2,22
    a278:	20800015 	stw	r2,0(r4)
    a27c:	00bfffc4 	movi	r2,-1
    a280:	003ff606 	br	a25c <_signal_r+0x4c>
    a284:	01402004 	movi	r5,128
    a288:	0005a600 	call	5a60 <_malloc_r>
    a28c:	8880b715 	stw	r2,732(r17)
    a290:	10000626 	beq	r2,zero,a2ac <_signal_r+0x9c>
    a294:	01802004 	movi	r6,128
    a298:	000b883a 	mov	r5,zero
    a29c:	1009883a 	mov	r4,r2
    a2a0:	00064540 	call	6454 <memset>
    a2a4:	1007883a 	mov	r3,r2
    a2a8:	003fe806 	br	a24c <_signal_r+0x3c>
    a2ac:	00bfffc4 	movi	r2,-1
    a2b0:	003fea06 	br	a25c <_signal_r+0x4c>

0000a2b4 <_raise_r>:
    a2b4:	f811883a 	mov	r8,ra
    a2b8:	000e1ac0 	call	e1ac <_mcount>
    a2bc:	403f883a 	mov	ra,r8
    a2c0:	28800830 	cmpltui	r2,r5,32
    a2c4:	10002b26 	beq	r2,zero,a374 <_raise_r+0xc0>
    a2c8:	defffd04 	addi	sp,sp,-12
    a2cc:	dfc00215 	stw	ra,8(sp)
    a2d0:	dc000115 	stw	r16,4(sp)
    a2d4:	2080b717 	ldw	r2,732(r4)
    a2d8:	2821883a 	mov	r16,r5
    a2dc:	10001026 	beq	r2,zero,a320 <_raise_r+0x6c>
    a2e0:	280690ba 	slli	r3,r5,2
    a2e4:	10c5883a 	add	r2,r2,r3
    a2e8:	10c00017 	ldw	r3,0(r2)
    a2ec:	18000c26 	beq	r3,zero,a320 <_raise_r+0x6c>
    a2f0:	19400060 	cmpeqi	r5,r3,1
    a2f4:	28001a1e 	bne	r5,zero,a360 <_raise_r+0xac>
    a2f8:	197fffd8 	cmpnei	r5,r3,-1
    a2fc:	28001126 	beq	r5,zero,a344 <_raise_r+0x90>
    a300:	10000015 	stw	zero,0(r2)
    a304:	8009883a 	mov	r4,r16
    a308:	183ee83a 	callr	r3
    a30c:	0005883a 	mov	r2,zero
    a310:	dfc00217 	ldw	ra,8(sp)
    a314:	dc000117 	ldw	r16,4(sp)
    a318:	dec00304 	addi	sp,sp,12
    a31c:	f800283a 	ret
    a320:	d9000015 	stw	r4,0(sp)
    a324:	000a7600 	call	a760 <_getpid_r>
    a328:	d9000017 	ldw	r4,0(sp)
    a32c:	800d883a 	mov	r6,r16
    a330:	100b883a 	mov	r5,r2
    a334:	dfc00217 	ldw	ra,8(sp)
    a338:	dc000117 	ldw	r16,4(sp)
    a33c:	dec00304 	addi	sp,sp,12
    a340:	000a6f41 	jmpi	a6f4 <_kill_r>
    a344:	00800584 	movi	r2,22
    a348:	20800015 	stw	r2,0(r4)
    a34c:	00800044 	movi	r2,1
    a350:	dfc00217 	ldw	ra,8(sp)
    a354:	dc000117 	ldw	r16,4(sp)
    a358:	dec00304 	addi	sp,sp,12
    a35c:	f800283a 	ret
    a360:	0005883a 	mov	r2,zero
    a364:	dfc00217 	ldw	ra,8(sp)
    a368:	dc000117 	ldw	r16,4(sp)
    a36c:	dec00304 	addi	sp,sp,12
    a370:	f800283a 	ret
    a374:	00800584 	movi	r2,22
    a378:	20800015 	stw	r2,0(r4)
    a37c:	00bfffc4 	movi	r2,-1
    a380:	f800283a 	ret

0000a384 <__sigtramp_r>:
    a384:	f811883a 	mov	r8,ra
    a388:	000e1ac0 	call	e1ac <_mcount>
    a38c:	403f883a 	mov	ra,r8
    a390:	28800830 	cmpltui	r2,r5,32
    a394:	10002b26 	beq	r2,zero,a444 <__sigtramp_r+0xc0>
    a398:	defffd04 	addi	sp,sp,-12
    a39c:	dfc00215 	stw	ra,8(sp)
    a3a0:	dc400115 	stw	r17,4(sp)
    a3a4:	dc000015 	stw	r16,0(sp)
    a3a8:	20c0b717 	ldw	r3,732(r4)
    a3ac:	2821883a 	mov	r16,r5
    a3b0:	2023883a 	mov	r17,r4
    a3b4:	18001326 	beq	r3,zero,a404 <__sigtramp_r+0x80>
    a3b8:	800490ba 	slli	r2,r16,2
    a3bc:	1887883a 	add	r3,r3,r2
    a3c0:	18800017 	ldw	r2,0(r3)
    a3c4:	10000d26 	beq	r2,zero,a3fc <__sigtramp_r+0x78>
    a3c8:	113fffe0 	cmpeqi	r4,r2,-1
    a3cc:	2000191e 	bne	r4,zero,a434 <__sigtramp_r+0xb0>
    a3d0:	11000060 	cmpeqi	r4,r2,1
    a3d4:	2000151e 	bne	r4,zero,a42c <__sigtramp_r+0xa8>
    a3d8:	18000015 	stw	zero,0(r3)
    a3dc:	8009883a 	mov	r4,r16
    a3e0:	103ee83a 	callr	r2
    a3e4:	0005883a 	mov	r2,zero
    a3e8:	dfc00217 	ldw	ra,8(sp)
    a3ec:	dc400117 	ldw	r17,4(sp)
    a3f0:	dc000017 	ldw	r16,0(sp)
    a3f4:	dec00304 	addi	sp,sp,12
    a3f8:	f800283a 	ret
    a3fc:	00800044 	movi	r2,1
    a400:	003ff906 	br	a3e8 <__sigtramp_r+0x64>
    a404:	01402004 	movi	r5,128
    a408:	0005a600 	call	5a60 <_malloc_r>
    a40c:	8880b715 	stw	r2,732(r17)
    a410:	10000a26 	beq	r2,zero,a43c <__sigtramp_r+0xb8>
    a414:	01802004 	movi	r6,128
    a418:	000b883a 	mov	r5,zero
    a41c:	1009883a 	mov	r4,r2
    a420:	00064540 	call	6454 <memset>
    a424:	1007883a 	mov	r3,r2
    a428:	003fe306 	br	a3b8 <__sigtramp_r+0x34>
    a42c:	008000c4 	movi	r2,3
    a430:	003fed06 	br	a3e8 <__sigtramp_r+0x64>
    a434:	00800084 	movi	r2,2
    a438:	003feb06 	br	a3e8 <__sigtramp_r+0x64>
    a43c:	00bfffc4 	movi	r2,-1
    a440:	003fe906 	br	a3e8 <__sigtramp_r+0x64>
    a444:	00bfffc4 	movi	r2,-1
    a448:	f800283a 	ret

0000a44c <raise>:
    a44c:	f811883a 	mov	r8,ra
    a450:	000e1ac0 	call	e1ac <_mcount>
    a454:	403f883a 	mov	ra,r8
    a458:	defffd04 	addi	sp,sp,-12
    a45c:	dfc00215 	stw	ra,8(sp)
    a460:	dc400115 	stw	r17,4(sp)
    a464:	dc000015 	stw	r16,0(sp)
    a468:	00c00074 	movhi	r3,1
    a46c:	20800830 	cmpltui	r2,r4,32
    a470:	1c48d117 	ldw	r17,9028(r3)
    a474:	10002326 	beq	r2,zero,a504 <raise+0xb8>
    a478:	8880b717 	ldw	r2,732(r17)
    a47c:	2021883a 	mov	r16,r4
    a480:	10001026 	beq	r2,zero,a4c4 <raise+0x78>
    a484:	200690ba 	slli	r3,r4,2
    a488:	10c5883a 	add	r2,r2,r3
    a48c:	10c00017 	ldw	r3,0(r2)
    a490:	18000c26 	beq	r3,zero,a4c4 <raise+0x78>
    a494:	19400060 	cmpeqi	r5,r3,1
    a498:	2800181e 	bne	r5,zero,a4fc <raise+0xb0>
    a49c:	197fffd8 	cmpnei	r5,r3,-1
    a4a0:	28001226 	beq	r5,zero,a4ec <raise+0xa0>
    a4a4:	10000015 	stw	zero,0(r2)
    a4a8:	183ee83a 	callr	r3
    a4ac:	0005883a 	mov	r2,zero
    a4b0:	dfc00217 	ldw	ra,8(sp)
    a4b4:	dc400117 	ldw	r17,4(sp)
    a4b8:	dc000017 	ldw	r16,0(sp)
    a4bc:	dec00304 	addi	sp,sp,12
    a4c0:	f800283a 	ret
    a4c4:	8809883a 	mov	r4,r17
    a4c8:	000a7600 	call	a760 <_getpid_r>
    a4cc:	800d883a 	mov	r6,r16
    a4d0:	100b883a 	mov	r5,r2
    a4d4:	8809883a 	mov	r4,r17
    a4d8:	dfc00217 	ldw	ra,8(sp)
    a4dc:	dc400117 	ldw	r17,4(sp)
    a4e0:	dc000017 	ldw	r16,0(sp)
    a4e4:	dec00304 	addi	sp,sp,12
    a4e8:	000a6f41 	jmpi	a6f4 <_kill_r>
    a4ec:	00800584 	movi	r2,22
    a4f0:	88800015 	stw	r2,0(r17)
    a4f4:	00800044 	movi	r2,1
    a4f8:	003fed06 	br	a4b0 <raise+0x64>
    a4fc:	0005883a 	mov	r2,zero
    a500:	003feb06 	br	a4b0 <raise+0x64>
    a504:	00800584 	movi	r2,22
    a508:	88800015 	stw	r2,0(r17)
    a50c:	00bfffc4 	movi	r2,-1
    a510:	003fe706 	br	a4b0 <raise+0x64>

0000a514 <signal>:
    a514:	f811883a 	mov	r8,ra
    a518:	000e1ac0 	call	e1ac <_mcount>
    a51c:	403f883a 	mov	ra,r8
    a520:	defffc04 	addi	sp,sp,-16
    a524:	dfc00315 	stw	ra,12(sp)
    a528:	dc800215 	stw	r18,8(sp)
    a52c:	dc400115 	stw	r17,4(sp)
    a530:	dc000015 	stw	r16,0(sp)
    a534:	00c00074 	movhi	r3,1
    a538:	20800830 	cmpltui	r2,r4,32
    a53c:	1c88d117 	ldw	r18,9028(r3)
    a540:	10000e26 	beq	r2,zero,a57c <signal+0x68>
    a544:	2021883a 	mov	r16,r4
    a548:	9100b717 	ldw	r4,732(r18)
    a54c:	2823883a 	mov	r17,r5
    a550:	20000e26 	beq	r4,zero,a58c <signal+0x78>
    a554:	802090ba 	slli	r16,r16,2
    a558:	2421883a 	add	r16,r4,r16
    a55c:	80800017 	ldw	r2,0(r16)
    a560:	84400015 	stw	r17,0(r16)
    a564:	dfc00317 	ldw	ra,12(sp)
    a568:	dc800217 	ldw	r18,8(sp)
    a56c:	dc400117 	ldw	r17,4(sp)
    a570:	dc000017 	ldw	r16,0(sp)
    a574:	dec00404 	addi	sp,sp,16
    a578:	f800283a 	ret
    a57c:	00800584 	movi	r2,22
    a580:	90800015 	stw	r2,0(r18)
    a584:	00bfffc4 	movi	r2,-1
    a588:	003ff606 	br	a564 <signal+0x50>
    a58c:	9009883a 	mov	r4,r18
    a590:	01402004 	movi	r5,128
    a594:	0005a600 	call	5a60 <_malloc_r>
    a598:	9080b715 	stw	r2,732(r18)
    a59c:	1009883a 	mov	r4,r2
    a5a0:	10000526 	beq	r2,zero,a5b8 <signal+0xa4>
    a5a4:	01802004 	movi	r6,128
    a5a8:	000b883a 	mov	r5,zero
    a5ac:	00064540 	call	6454 <memset>
    a5b0:	1009883a 	mov	r4,r2
    a5b4:	003fe706 	br	a554 <signal+0x40>
    a5b8:	00bfffc4 	movi	r2,-1
    a5bc:	003fe906 	br	a564 <signal+0x50>

0000a5c0 <_init_signal>:
    a5c0:	f811883a 	mov	r8,ra
    a5c4:	000e1ac0 	call	e1ac <_mcount>
    a5c8:	403f883a 	mov	ra,r8
    a5cc:	defffe04 	addi	sp,sp,-8
    a5d0:	dfc00115 	stw	ra,4(sp)
    a5d4:	dc000015 	stw	r16,0(sp)
    a5d8:	00800074 	movhi	r2,1
    a5dc:	1408d117 	ldw	r16,9028(r2)
    a5e0:	8080b717 	ldw	r2,732(r16)
    a5e4:	10000526 	beq	r2,zero,a5fc <_init_signal+0x3c>
    a5e8:	0005883a 	mov	r2,zero
    a5ec:	dfc00117 	ldw	ra,4(sp)
    a5f0:	dc000017 	ldw	r16,0(sp)
    a5f4:	dec00204 	addi	sp,sp,8
    a5f8:	f800283a 	ret
    a5fc:	8009883a 	mov	r4,r16
    a600:	01402004 	movi	r5,128
    a604:	0005a600 	call	5a60 <_malloc_r>
    a608:	8080b715 	stw	r2,732(r16)
    a60c:	1009883a 	mov	r4,r2
    a610:	10000426 	beq	r2,zero,a624 <_init_signal+0x64>
    a614:	01802004 	movi	r6,128
    a618:	000b883a 	mov	r5,zero
    a61c:	00064540 	call	6454 <memset>
    a620:	003ff106 	br	a5e8 <_init_signal+0x28>
    a624:	00bfffc4 	movi	r2,-1
    a628:	003ff006 	br	a5ec <_init_signal+0x2c>

0000a62c <__sigtramp>:
    a62c:	f811883a 	mov	r8,ra
    a630:	000e1ac0 	call	e1ac <_mcount>
    a634:	403f883a 	mov	ra,r8
    a638:	defffd04 	addi	sp,sp,-12
    a63c:	dfc00215 	stw	ra,8(sp)
    a640:	dc400115 	stw	r17,4(sp)
    a644:	dc000015 	stw	r16,0(sp)
    a648:	00c00074 	movhi	r3,1
    a64c:	20800830 	cmpltui	r2,r4,32
    a650:	1c48d117 	ldw	r17,9028(r3)
    a654:	10002526 	beq	r2,zero,a6ec <__sigtramp+0xc0>
    a658:	88c0b717 	ldw	r3,732(r17)
    a65c:	2021883a 	mov	r16,r4
    a660:	18001326 	beq	r3,zero,a6b0 <__sigtramp+0x84>
    a664:	800890ba 	slli	r4,r16,2
    a668:	1907883a 	add	r3,r3,r4
    a66c:	18800017 	ldw	r2,0(r3)
    a670:	10000d26 	beq	r2,zero,a6a8 <__sigtramp+0x7c>
    a674:	113fffe0 	cmpeqi	r4,r2,-1
    a678:	20001a1e 	bne	r4,zero,a6e4 <__sigtramp+0xb8>
    a67c:	11000060 	cmpeqi	r4,r2,1
    a680:	2000161e 	bne	r4,zero,a6dc <__sigtramp+0xb0>
    a684:	18000015 	stw	zero,0(r3)
    a688:	8009883a 	mov	r4,r16
    a68c:	103ee83a 	callr	r2
    a690:	0005883a 	mov	r2,zero
    a694:	dfc00217 	ldw	ra,8(sp)
    a698:	dc400117 	ldw	r17,4(sp)
    a69c:	dc000017 	ldw	r16,0(sp)
    a6a0:	dec00304 	addi	sp,sp,12
    a6a4:	f800283a 	ret
    a6a8:	00800044 	movi	r2,1
    a6ac:	003ff906 	br	a694 <__sigtramp+0x68>
    a6b0:	01402004 	movi	r5,128
    a6b4:	8809883a 	mov	r4,r17
    a6b8:	0005a600 	call	5a60 <_malloc_r>
    a6bc:	8880b715 	stw	r2,732(r17)
    a6c0:	10000a26 	beq	r2,zero,a6ec <__sigtramp+0xc0>
    a6c4:	01802004 	movi	r6,128
    a6c8:	000b883a 	mov	r5,zero
    a6cc:	1009883a 	mov	r4,r2
    a6d0:	00064540 	call	6454 <memset>
    a6d4:	1007883a 	mov	r3,r2
    a6d8:	003fe206 	br	a664 <__sigtramp+0x38>
    a6dc:	008000c4 	movi	r2,3
    a6e0:	003fec06 	br	a694 <__sigtramp+0x68>
    a6e4:	00800084 	movi	r2,2
    a6e8:	003fea06 	br	a694 <__sigtramp+0x68>
    a6ec:	00bfffc4 	movi	r2,-1
    a6f0:	003fe806 	br	a694 <__sigtramp+0x68>

0000a6f4 <_kill_r>:
    a6f4:	f811883a 	mov	r8,ra
    a6f8:	000e1ac0 	call	e1ac <_mcount>
    a6fc:	403f883a 	mov	ra,r8
    a700:	defffe04 	addi	sp,sp,-8
    a704:	dfc00115 	stw	ra,4(sp)
    a708:	dc000015 	stw	r16,0(sp)
    a70c:	2807883a 	mov	r3,r5
    a710:	00800074 	movhi	r2,1
    a714:	300b883a 	mov	r5,r6
    a718:	2021883a 	mov	r16,r4
    a71c:	1809883a 	mov	r4,r3
    a720:	1008e315 	stw	zero,9100(r2)
    a724:	000df900 	call	df90 <kill>
    a728:	10ffffd8 	cmpnei	r3,r2,-1
    a72c:	18000426 	beq	r3,zero,a740 <_kill_r+0x4c>
    a730:	dfc00117 	ldw	ra,4(sp)
    a734:	dc000017 	ldw	r16,0(sp)
    a738:	dec00204 	addi	sp,sp,8
    a73c:	f800283a 	ret
    a740:	00c00074 	movhi	r3,1
    a744:	18c8e317 	ldw	r3,9100(r3)
    a748:	183ff926 	beq	r3,zero,a730 <_kill_r+0x3c>
    a74c:	80c00015 	stw	r3,0(r16)
    a750:	dfc00117 	ldw	ra,4(sp)
    a754:	dc000017 	ldw	r16,0(sp)
    a758:	dec00204 	addi	sp,sp,8
    a75c:	f800283a 	ret

0000a760 <_getpid_r>:
    a760:	f811883a 	mov	r8,ra
    a764:	000e1ac0 	call	e1ac <_mcount>
    a768:	403f883a 	mov	ra,r8
    a76c:	000dbbc1 	jmpi	dbbc <getpid>

0000a770 <__udivdi3>:
    a770:	f811883a 	mov	r8,ra
    a774:	000e1ac0 	call	e1ac <_mcount>
    a778:	403f883a 	mov	ra,r8
    a77c:	defff504 	addi	sp,sp,-44
    a780:	dfc00a15 	stw	ra,40(sp)
    a784:	df000915 	stw	fp,36(sp)
    a788:	ddc00815 	stw	r23,32(sp)
    a78c:	dd800715 	stw	r22,28(sp)
    a790:	dd400615 	stw	r21,24(sp)
    a794:	dd000515 	stw	r20,20(sp)
    a798:	dcc00415 	stw	r19,16(sp)
    a79c:	dc800315 	stw	r18,12(sp)
    a7a0:	dc400215 	stw	r17,8(sp)
    a7a4:	dc000115 	stw	r16,4(sp)
    a7a8:	2027883a 	mov	r19,r4
    a7ac:	2821883a 	mov	r16,r5
    a7b0:	3800411e 	bne	r7,zero,a8b8 <__udivdi3+0x148>
    a7b4:	3829883a 	mov	r20,r7
    a7b8:	3023883a 	mov	r17,r6
    a7bc:	2025883a 	mov	r18,r4
    a7c0:	29805d2e 	bgeu	r5,r6,a938 <__udivdi3+0x1c8>
    a7c4:	00bfffd4 	movui	r2,65535
    a7c8:	282b883a 	mov	r21,r5
    a7cc:	1180a02e 	bgeu	r2,r6,aa50 <__udivdi3+0x2e0>
    a7d0:	00804034 	movhi	r2,256
    a7d4:	30813636 	bltu	r6,r2,acb0 <__udivdi3+0x540>
    a7d8:	3006d63a 	srli	r3,r6,24
    a7dc:	05000604 	movi	r20,24
    a7e0:	00800074 	movhi	r2,1
    a7e4:	1885883a 	add	r2,r3,r2
    a7e8:	10815803 	ldbu	r2,1376(r2)
    a7ec:	00c00804 	movi	r3,32
    a7f0:	1505883a 	add	r2,r2,r20
    a7f4:	1889c83a 	sub	r4,r3,r2
    a7f8:	18800526 	beq	r3,r2,a810 <__udivdi3+0xa0>
    a7fc:	8120983a 	sll	r16,r16,r4
    a800:	9884d83a 	srl	r2,r19,r2
    a804:	3122983a 	sll	r17,r6,r4
    a808:	9924983a 	sll	r18,r19,r4
    a80c:	142ab03a 	or	r21,r2,r16
    a810:	882cd43a 	srli	r22,r17,16
    a814:	a809883a 	mov	r4,r21
    a818:	8d3fffcc 	andi	r20,r17,65535
    a81c:	b00b883a 	mov	r5,r22
    a820:	000b3c80 	call	b3c8 <__umodsi3>
    a824:	a809883a 	mov	r4,r21
    a828:	b00b883a 	mov	r5,r22
    a82c:	1027883a 	mov	r19,r2
    a830:	000b3580 	call	b358 <__udivsi3>
    a834:	9826943a 	slli	r19,r19,16
    a838:	9008d43a 	srli	r4,r18,16
    a83c:	1021883a 	mov	r16,r2
    a840:	a085383a 	mul	r2,r20,r2
    a844:	9908b03a 	or	r4,r19,r4
    a848:	2080052e 	bgeu	r4,r2,a860 <__udivdi3+0xf0>
    a84c:	2449883a 	add	r4,r4,r17
    a850:	80ffffc4 	addi	r3,r16,-1
    a854:	24400136 	bltu	r4,r17,a85c <__udivdi3+0xec>
    a858:	20812636 	bltu	r4,r2,acf4 <__udivdi3+0x584>
    a85c:	1821883a 	mov	r16,r3
    a860:	20a7c83a 	sub	r19,r4,r2
    a864:	9809883a 	mov	r4,r19
    a868:	b00b883a 	mov	r5,r22
    a86c:	000b3c80 	call	b3c8 <__umodsi3>
    a870:	9809883a 	mov	r4,r19
    a874:	b00b883a 	mov	r5,r22
    a878:	1027883a 	mov	r19,r2
    a87c:	9826943a 	slli	r19,r19,16
    a880:	000b3580 	call	b358 <__udivsi3>
    a884:	a0a9383a 	mul	r20,r20,r2
    a888:	94bfffcc 	andi	r18,r18,65535
    a88c:	9ca4b03a 	or	r18,r19,r18
    a890:	9500052e 	bgeu	r18,r20,a8a8 <__udivdi3+0x138>
    a894:	8ca5883a 	add	r18,r17,r18
    a898:	10ffffc4 	addi	r3,r2,-1
    a89c:	94400136 	bltu	r18,r17,a8a4 <__udivdi3+0x134>
    a8a0:	95011236 	bltu	r18,r20,acec <__udivdi3+0x57c>
    a8a4:	1805883a 	mov	r2,r3
    a8a8:	8020943a 	slli	r16,r16,16
    a8ac:	0007883a 	mov	r3,zero
    a8b0:	8084b03a 	or	r2,r16,r2
    a8b4:	00000306 	br	a8c4 <__udivdi3+0x154>
    a8b8:	29c00e2e 	bgeu	r5,r7,a8f4 <__udivdi3+0x184>
    a8bc:	0007883a 	mov	r3,zero
    a8c0:	0005883a 	mov	r2,zero
    a8c4:	dfc00a17 	ldw	ra,40(sp)
    a8c8:	df000917 	ldw	fp,36(sp)
    a8cc:	ddc00817 	ldw	r23,32(sp)
    a8d0:	dd800717 	ldw	r22,28(sp)
    a8d4:	dd400617 	ldw	r21,24(sp)
    a8d8:	dd000517 	ldw	r20,20(sp)
    a8dc:	dcc00417 	ldw	r19,16(sp)
    a8e0:	dc800317 	ldw	r18,12(sp)
    a8e4:	dc400217 	ldw	r17,8(sp)
    a8e8:	dc000117 	ldw	r16,4(sp)
    a8ec:	dec00b04 	addi	sp,sp,44
    a8f0:	f800283a 	ret
    a8f4:	00bfffd4 	movui	r2,65535
    a8f8:	11c05a2e 	bgeu	r2,r7,aa64 <__udivdi3+0x2f4>
    a8fc:	00804034 	movhi	r2,256
    a900:	3880dd36 	bltu	r7,r2,ac78 <__udivdi3+0x508>
    a904:	3804d63a 	srli	r2,r7,24
    a908:	01000604 	movi	r4,24
    a90c:	00c00074 	movhi	r3,1
    a910:	10c7883a 	add	r3,r2,r3
    a914:	18815803 	ldbu	r2,1376(r3)
    a918:	00c00804 	movi	r3,32
    a91c:	1105883a 	add	r2,r2,r4
    a920:	18abc83a 	sub	r21,r3,r2
    a924:	1880861e 	bne	r3,r2,ab40 <__udivdi3+0x3d0>
    a928:	3c00d836 	bltu	r7,r16,ac8c <__udivdi3+0x51c>
    a92c:	9985403a 	cmpgeu	r2,r19,r6
    a930:	0007883a 	mov	r3,zero
    a934:	003fe306 	br	a8c4 <__udivdi3+0x154>
    a938:	3000041e 	bne	r6,zero,a94c <__udivdi3+0x1dc>
    a93c:	000b883a 	mov	r5,zero
    a940:	01000044 	movi	r4,1
    a944:	000b3580 	call	b358 <__udivsi3>
    a948:	1023883a 	mov	r17,r2
    a94c:	00bfffd4 	movui	r2,65535
    a950:	14403a2e 	bgeu	r2,r17,aa3c <__udivdi3+0x2cc>
    a954:	00804034 	movhi	r2,256
    a958:	8880d236 	bltu	r17,r2,aca4 <__udivdi3+0x534>
    a95c:	8806d63a 	srli	r3,r17,24
    a960:	05000604 	movi	r20,24
    a964:	00800074 	movhi	r2,1
    a968:	1885883a 	add	r2,r3,r2
    a96c:	10815803 	ldbu	r2,1376(r2)
    a970:	00c00804 	movi	r3,32
    a974:	1505883a 	add	r2,r2,r20
    a978:	188dc83a 	sub	r6,r3,r2
    a97c:	18803e1e 	bne	r3,r2,aa78 <__udivdi3+0x308>
    a980:	882ad43a 	srli	r21,r17,16
    a984:	8461c83a 	sub	r16,r16,r17
    a988:	8cffffcc 	andi	r19,r17,65535
    a98c:	00c00044 	movi	r3,1
    a990:	8009883a 	mov	r4,r16
    a994:	a80b883a 	mov	r5,r21
    a998:	d8c00015 	stw	r3,0(sp)
    a99c:	000b3c80 	call	b3c8 <__umodsi3>
    a9a0:	8009883a 	mov	r4,r16
    a9a4:	a80b883a 	mov	r5,r21
    a9a8:	1021883a 	mov	r16,r2
    a9ac:	000b3580 	call	b358 <__udivsi3>
    a9b0:	8020943a 	slli	r16,r16,16
    a9b4:	9008d43a 	srli	r4,r18,16
    a9b8:	1029883a 	mov	r20,r2
    a9bc:	14c5383a 	mul	r2,r2,r19
    a9c0:	8108b03a 	or	r4,r16,r4
    a9c4:	d8c00017 	ldw	r3,0(sp)
    a9c8:	2080052e 	bgeu	r4,r2,a9e0 <__udivdi3+0x270>
    a9cc:	2449883a 	add	r4,r4,r17
    a9d0:	a17fffc4 	addi	r5,r20,-1
    a9d4:	24400136 	bltu	r4,r17,a9dc <__udivdi3+0x26c>
    a9d8:	2080c936 	bltu	r4,r2,ad00 <__udivdi3+0x590>
    a9dc:	2829883a 	mov	r20,r5
    a9e0:	20a1c83a 	sub	r16,r4,r2
    a9e4:	8009883a 	mov	r4,r16
    a9e8:	a80b883a 	mov	r5,r21
    a9ec:	d8c00015 	stw	r3,0(sp)
    a9f0:	000b3c80 	call	b3c8 <__umodsi3>
    a9f4:	8009883a 	mov	r4,r16
    a9f8:	a80b883a 	mov	r5,r21
    a9fc:	1021883a 	mov	r16,r2
    aa00:	8020943a 	slli	r16,r16,16
    aa04:	000b3580 	call	b358 <__udivsi3>
    aa08:	14e7383a 	mul	r19,r2,r19
    aa0c:	94bfffcc 	andi	r18,r18,65535
    aa10:	84a4b03a 	or	r18,r16,r18
    aa14:	d8c00017 	ldw	r3,0(sp)
    aa18:	94c0052e 	bgeu	r18,r19,aa30 <__udivdi3+0x2c0>
    aa1c:	8ca5883a 	add	r18,r17,r18
    aa20:	113fffc4 	addi	r4,r2,-1
    aa24:	94400136 	bltu	r18,r17,aa2c <__udivdi3+0x2bc>
    aa28:	94c0ae36 	bltu	r18,r19,ace4 <__udivdi3+0x574>
    aa2c:	2005883a 	mov	r2,r4
    aa30:	a00c943a 	slli	r6,r20,16
    aa34:	3084b03a 	or	r2,r6,r2
    aa38:	003fa206 	br	a8c4 <__udivdi3+0x154>
    aa3c:	88804030 	cmpltui	r2,r17,256
    aa40:	10009e1e 	bne	r2,zero,acbc <__udivdi3+0x54c>
    aa44:	8806d23a 	srli	r3,r17,8
    aa48:	05000204 	movi	r20,8
    aa4c:	003fc506 	br	a964 <__udivdi3+0x1f4>
    aa50:	30804030 	cmpltui	r2,r6,256
    aa54:	10008b1e 	bne	r2,zero,ac84 <__udivdi3+0x514>
    aa58:	3006d23a 	srli	r3,r6,8
    aa5c:	05000204 	movi	r20,8
    aa60:	003f5f06 	br	a7e0 <__udivdi3+0x70>
    aa64:	38804030 	cmpltui	r2,r7,256
    aa68:	10008b1e 	bne	r2,zero,ac98 <__udivdi3+0x528>
    aa6c:	3804d23a 	srli	r2,r7,8
    aa70:	01000204 	movi	r4,8
    aa74:	003fa506 	br	a90c <__udivdi3+0x19c>
    aa78:	89a2983a 	sll	r17,r17,r6
    aa7c:	80acd83a 	srl	r22,r16,r2
    aa80:	81a0983a 	sll	r16,r16,r6
    aa84:	882ad43a 	srli	r21,r17,16
    aa88:	9884d83a 	srl	r2,r19,r2
    aa8c:	b009883a 	mov	r4,r22
    aa90:	a80b883a 	mov	r5,r21
    aa94:	99a4983a 	sll	r18,r19,r6
    aa98:	1428b03a 	or	r20,r2,r16
    aa9c:	000b3c80 	call	b3c8 <__umodsi3>
    aaa0:	b009883a 	mov	r4,r22
    aaa4:	a80b883a 	mov	r5,r21
    aaa8:	1021883a 	mov	r16,r2
    aaac:	000b3580 	call	b358 <__udivsi3>
    aab0:	8008943a 	slli	r4,r16,16
    aab4:	a00ad43a 	srli	r5,r20,16
    aab8:	8cffffcc 	andi	r19,r17,65535
    aabc:	98a1383a 	mul	r16,r19,r2
    aac0:	2148b03a 	or	r4,r4,r5
    aac4:	102d883a 	mov	r22,r2
    aac8:	2400062e 	bgeu	r4,r16,aae4 <__udivdi3+0x374>
    aacc:	2449883a 	add	r4,r4,r17
    aad0:	10bfffc4 	addi	r2,r2,-1
    aad4:	24408136 	bltu	r4,r17,acdc <__udivdi3+0x56c>
    aad8:	2400802e 	bgeu	r4,r16,acdc <__udivdi3+0x56c>
    aadc:	b5bfff84 	addi	r22,r22,-2
    aae0:	2449883a 	add	r4,r4,r17
    aae4:	2421c83a 	sub	r16,r4,r16
    aae8:	8009883a 	mov	r4,r16
    aaec:	a80b883a 	mov	r5,r21
    aaf0:	000b3c80 	call	b3c8 <__umodsi3>
    aaf4:	8009883a 	mov	r4,r16
    aaf8:	a80b883a 	mov	r5,r21
    aafc:	1021883a 	mov	r16,r2
    ab00:	8020943a 	slli	r16,r16,16
    ab04:	000b3580 	call	b358 <__udivsi3>
    ab08:	9889383a 	mul	r4,r19,r2
    ab0c:	a53fffcc 	andi	r20,r20,65535
    ab10:	8520b03a 	or	r16,r16,r20
    ab14:	8100062e 	bgeu	r16,r4,ab30 <__udivdi3+0x3c0>
    ab18:	8461883a 	add	r16,r16,r17
    ab1c:	10ffffc4 	addi	r3,r2,-1
    ab20:	84406a36 	bltu	r16,r17,accc <__udivdi3+0x55c>
    ab24:	8100692e 	bgeu	r16,r4,accc <__udivdi3+0x55c>
    ab28:	10bfff84 	addi	r2,r2,-2
    ab2c:	8461883a 	add	r16,r16,r17
    ab30:	b006943a 	slli	r3,r22,16
    ab34:	8121c83a 	sub	r16,r16,r4
    ab38:	1886b03a 	or	r3,r3,r2
    ab3c:	003f9406 	br	a990 <__udivdi3+0x220>
    ab40:	30acd83a 	srl	r22,r6,r2
    ab44:	3d4e983a 	sll	r7,r7,r21
    ab48:	80a4d83a 	srl	r18,r16,r2
    ab4c:	8546983a 	sll	r3,r16,r21
    ab50:	b1ecb03a 	or	r22,r22,r7
    ab54:	b038d43a 	srli	fp,r22,16
    ab58:	9884d83a 	srl	r2,r19,r2
    ab5c:	9009883a 	mov	r4,r18
    ab60:	e00b883a 	mov	r5,fp
    ab64:	10e2b03a 	or	r17,r2,r3
    ab68:	3568983a 	sll	r20,r6,r21
    ab6c:	000b3c80 	call	b3c8 <__umodsi3>
    ab70:	9009883a 	mov	r4,r18
    ab74:	e00b883a 	mov	r5,fp
    ab78:	1025883a 	mov	r18,r2
    ab7c:	000b3580 	call	b358 <__udivsi3>
    ab80:	9008943a 	slli	r4,r18,16
    ab84:	8806d43a 	srli	r3,r17,16
    ab88:	b5ffffcc 	andi	r23,r22,65535
    ab8c:	b8a5383a 	mul	r18,r23,r2
    ab90:	20c8b03a 	or	r4,r4,r3
    ab94:	1021883a 	mov	r16,r2
    ab98:	2480062e 	bgeu	r4,r18,abb4 <__udivdi3+0x444>
    ab9c:	2589883a 	add	r4,r4,r22
    aba0:	10bfffc4 	addi	r2,r2,-1
    aba4:	25804b36 	bltu	r4,r22,acd4 <__udivdi3+0x564>
    aba8:	24804a2e 	bgeu	r4,r18,acd4 <__udivdi3+0x564>
    abac:	843fff84 	addi	r16,r16,-2
    abb0:	2589883a 	add	r4,r4,r22
    abb4:	24a5c83a 	sub	r18,r4,r18
    abb8:	9009883a 	mov	r4,r18
    abbc:	e00b883a 	mov	r5,fp
    abc0:	000b3c80 	call	b3c8 <__umodsi3>
    abc4:	9009883a 	mov	r4,r18
    abc8:	e00b883a 	mov	r5,fp
    abcc:	1025883a 	mov	r18,r2
    abd0:	9024943a 	slli	r18,r18,16
    abd4:	000b3580 	call	b358 <__udivsi3>
    abd8:	b8af383a 	mul	r23,r23,r2
    abdc:	8c7fffcc 	andi	r17,r17,65535
    abe0:	9462b03a 	or	r17,r18,r17
    abe4:	8dc0062e 	bgeu	r17,r23,ac00 <__udivdi3+0x490>
    abe8:	8da3883a 	add	r17,r17,r22
    abec:	10ffffc4 	addi	r3,r2,-1
    abf0:	8d803436 	bltu	r17,r22,acc4 <__udivdi3+0x554>
    abf4:	8dc0332e 	bgeu	r17,r23,acc4 <__udivdi3+0x554>
    abf8:	10bfff84 	addi	r2,r2,-2
    abfc:	8da3883a 	add	r17,r17,r22
    ac00:	8020943a 	slli	r16,r16,16
    ac04:	10ffffcc 	andi	r3,r2,65535
    ac08:	a00ed43a 	srli	r7,r20,16
    ac0c:	8084b03a 	or	r2,r16,r2
    ac10:	1008d43a 	srli	r4,r2,16
    ac14:	a1bfffcc 	andi	r6,r20,65535
    ac18:	1991383a 	mul	r8,r3,r6
    ac1c:	218d383a 	mul	r6,r4,r6
    ac20:	19c7383a 	mul	r3,r3,r7
    ac24:	400ad43a 	srli	r5,r8,16
    ac28:	21c9383a 	mul	r4,r4,r7
    ac2c:	1987883a 	add	r3,r3,r6
    ac30:	28c7883a 	add	r3,r5,r3
    ac34:	8de3c83a 	sub	r17,r17,r23
    ac38:	1980022e 	bgeu	r3,r6,ac44 <__udivdi3+0x4d4>
    ac3c:	01400074 	movhi	r5,1
    ac40:	2149883a 	add	r4,r4,r5
    ac44:	180ad43a 	srli	r5,r3,16
    ac48:	2909883a 	add	r4,r5,r4
    ac4c:	89000836 	bltu	r17,r4,ac70 <__udivdi3+0x500>
    ac50:	89000226 	beq	r17,r4,ac5c <__udivdi3+0x4ec>
    ac54:	0007883a 	mov	r3,zero
    ac58:	003f1a06 	br	a8c4 <__udivdi3+0x154>
    ac5c:	1806943a 	slli	r3,r3,16
    ac60:	9d4c983a 	sll	r6,r19,r21
    ac64:	423fffcc 	andi	r8,r8,65535
    ac68:	1a07883a 	add	r3,r3,r8
    ac6c:	30fff92e 	bgeu	r6,r3,ac54 <__udivdi3+0x4e4>
    ac70:	10bfffc4 	addi	r2,r2,-1
    ac74:	003ff706 	br	ac54 <__udivdi3+0x4e4>
    ac78:	3804d43a 	srli	r2,r7,16
    ac7c:	01000404 	movi	r4,16
    ac80:	003f2206 	br	a90c <__udivdi3+0x19c>
    ac84:	3007883a 	mov	r3,r6
    ac88:	003ed506 	br	a7e0 <__udivdi3+0x70>
    ac8c:	0007883a 	mov	r3,zero
    ac90:	00800044 	movi	r2,1
    ac94:	003f0b06 	br	a8c4 <__udivdi3+0x154>
    ac98:	3805883a 	mov	r2,r7
    ac9c:	0009883a 	mov	r4,zero
    aca0:	003f1a06 	br	a90c <__udivdi3+0x19c>
    aca4:	8806d43a 	srli	r3,r17,16
    aca8:	05000404 	movi	r20,16
    acac:	003f2d06 	br	a964 <__udivdi3+0x1f4>
    acb0:	3006d43a 	srli	r3,r6,16
    acb4:	05000404 	movi	r20,16
    acb8:	003ec906 	br	a7e0 <__udivdi3+0x70>
    acbc:	8807883a 	mov	r3,r17
    acc0:	003f2806 	br	a964 <__udivdi3+0x1f4>
    acc4:	1805883a 	mov	r2,r3
    acc8:	003fcd06 	br	ac00 <__udivdi3+0x490>
    accc:	1805883a 	mov	r2,r3
    acd0:	003f9706 	br	ab30 <__udivdi3+0x3c0>
    acd4:	1021883a 	mov	r16,r2
    acd8:	003fb606 	br	abb4 <__udivdi3+0x444>
    acdc:	102d883a 	mov	r22,r2
    ace0:	003f8006 	br	aae4 <__udivdi3+0x374>
    ace4:	10bfff84 	addi	r2,r2,-2
    ace8:	003f5106 	br	aa30 <__udivdi3+0x2c0>
    acec:	10bfff84 	addi	r2,r2,-2
    acf0:	003eed06 	br	a8a8 <__udivdi3+0x138>
    acf4:	843fff84 	addi	r16,r16,-2
    acf8:	2449883a 	add	r4,r4,r17
    acfc:	003ed806 	br	a860 <__udivdi3+0xf0>
    ad00:	a53fff84 	addi	r20,r20,-2
    ad04:	2449883a 	add	r4,r4,r17
    ad08:	003f3506 	br	a9e0 <__udivdi3+0x270>

0000ad0c <__umoddi3>:
    ad0c:	f811883a 	mov	r8,ra
    ad10:	000e1ac0 	call	e1ac <_mcount>
    ad14:	403f883a 	mov	ra,r8
    ad18:	defff504 	addi	sp,sp,-44
    ad1c:	dfc00a15 	stw	ra,40(sp)
    ad20:	df000915 	stw	fp,36(sp)
    ad24:	ddc00815 	stw	r23,32(sp)
    ad28:	dd800715 	stw	r22,28(sp)
    ad2c:	dd400615 	stw	r21,24(sp)
    ad30:	dd000515 	stw	r20,20(sp)
    ad34:	dcc00415 	stw	r19,16(sp)
    ad38:	dc800315 	stw	r18,12(sp)
    ad3c:	dc400215 	stw	r17,8(sp)
    ad40:	dc000115 	stw	r16,4(sp)
    ad44:	2823883a 	mov	r17,r5
    ad48:	2021883a 	mov	r16,r4
    ad4c:	3800371e 	bne	r7,zero,ae2c <__umoddi3+0x120>
    ad50:	3825883a 	mov	r18,r7
    ad54:	3029883a 	mov	r20,r6
    ad58:	2027883a 	mov	r19,r4
    ad5c:	2980572e 	bgeu	r5,r6,aebc <__umoddi3+0x1b0>
    ad60:	00bfffd4 	movui	r2,65535
    ad64:	282b883a 	mov	r21,r5
    ad68:	1180922e 	bgeu	r2,r6,afb4 <__umoddi3+0x2a8>
    ad6c:	00804034 	movhi	r2,256
    ad70:	30812036 	bltu	r6,r2,b1f4 <__umoddi3+0x4e8>
    ad74:	3006d63a 	srli	r3,r6,24
    ad78:	04800604 	movi	r18,24
    ad7c:	00800074 	movhi	r2,1
    ad80:	1885883a 	add	r2,r3,r2
    ad84:	10815803 	ldbu	r2,1376(r2)
    ad88:	00c00804 	movi	r3,32
    ad8c:	1485883a 	add	r2,r2,r18
    ad90:	18a5c83a 	sub	r18,r3,r2
    ad94:	18800526 	beq	r3,r2,adac <__umoddi3+0xa0>
    ad98:	8ca2983a 	sll	r17,r17,r18
    ad9c:	8084d83a 	srl	r2,r16,r2
    ada0:	34a8983a 	sll	r20,r6,r18
    ada4:	84a6983a 	sll	r19,r16,r18
    ada8:	146ab03a 	or	r21,r2,r17
    adac:	a02cd43a 	srli	r22,r20,16
    adb0:	a809883a 	mov	r4,r21
    adb4:	a43fffcc 	andi	r16,r20,65535
    adb8:	b00b883a 	mov	r5,r22
    adbc:	000b3c80 	call	b3c8 <__umodsi3>
    adc0:	a809883a 	mov	r4,r21
    adc4:	b00b883a 	mov	r5,r22
    adc8:	1023883a 	mov	r17,r2
    adcc:	000b3580 	call	b358 <__udivsi3>
    add0:	8822943a 	slli	r17,r17,16
    add4:	9808d43a 	srli	r4,r19,16
    add8:	80ab383a 	mul	r21,r16,r2
    addc:	8908b03a 	or	r4,r17,r4
    ade0:	2540042e 	bgeu	r4,r21,adf4 <__umoddi3+0xe8>
    ade4:	2509883a 	add	r4,r4,r20
    ade8:	25000236 	bltu	r4,r20,adf4 <__umoddi3+0xe8>
    adec:	2540012e 	bgeu	r4,r21,adf4 <__umoddi3+0xe8>
    adf0:	2509883a 	add	r4,r4,r20
    adf4:	256bc83a 	sub	r21,r4,r21
    adf8:	b00b883a 	mov	r5,r22
    adfc:	a809883a 	mov	r4,r21
    ae00:	000b3c80 	call	b3c8 <__umodsi3>
    ae04:	1023883a 	mov	r17,r2
    ae08:	b00b883a 	mov	r5,r22
    ae0c:	a809883a 	mov	r4,r21
    ae10:	000b3580 	call	b358 <__udivsi3>
    ae14:	8822943a 	slli	r17,r17,16
    ae18:	8085383a 	mul	r2,r16,r2
    ae1c:	98ffffcc 	andi	r3,r19,65535
    ae20:	88c6b03a 	or	r3,r17,r3
    ae24:	18805a2e 	bgeu	r3,r2,af90 <__umoddi3+0x284>
    ae28:	00005506 	br	af80 <__umoddi3+0x274>
    ae2c:	2005883a 	mov	r2,r4
    ae30:	29c00d2e 	bgeu	r5,r7,ae68 <__umoddi3+0x15c>
    ae34:	2807883a 	mov	r3,r5
    ae38:	dfc00a17 	ldw	ra,40(sp)
    ae3c:	df000917 	ldw	fp,36(sp)
    ae40:	ddc00817 	ldw	r23,32(sp)
    ae44:	dd800717 	ldw	r22,28(sp)
    ae48:	dd400617 	ldw	r21,24(sp)
    ae4c:	dd000517 	ldw	r20,20(sp)
    ae50:	dcc00417 	ldw	r19,16(sp)
    ae54:	dc800317 	ldw	r18,12(sp)
    ae58:	dc400217 	ldw	r17,8(sp)
    ae5c:	dc000117 	ldw	r16,4(sp)
    ae60:	dec00b04 	addi	sp,sp,44
    ae64:	f800283a 	ret
    ae68:	013fffd4 	movui	r4,65535
    ae6c:	2807883a 	mov	r3,r5
    ae70:	21c0552e 	bgeu	r4,r7,afc8 <__umoddi3+0x2bc>
    ae74:	01004034 	movhi	r4,256
    ae78:	3900e336 	bltu	r7,r4,b208 <__umoddi3+0x4fc>
    ae7c:	3808d63a 	srli	r4,r7,24
    ae80:	02000604 	movi	r8,24
    ae84:	01400074 	movhi	r5,1
    ae88:	214b883a 	add	r5,r4,r5
    ae8c:	2d415803 	ldbu	r21,1376(r5)
    ae90:	01000804 	movi	r4,32
    ae94:	aa2b883a 	add	r21,r21,r8
    ae98:	2569c83a 	sub	r20,r4,r21
    ae9c:	25404f1e 	bne	r4,r21,afdc <__umoddi3+0x2d0>
    aea0:	3c400136 	bltu	r7,r17,aea8 <__umoddi3+0x19c>
    aea4:	81bfe436 	bltu	r16,r6,ae38 <__umoddi3+0x12c>
    aea8:	8185c83a 	sub	r2,r16,r6
    aeac:	89cfc83a 	sub	r7,r17,r7
    aeb0:	8087803a 	cmpltu	r3,r16,r2
    aeb4:	38c7c83a 	sub	r3,r7,r3
    aeb8:	003fdf06 	br	ae38 <__umoddi3+0x12c>
    aebc:	3000041e 	bne	r6,zero,aed0 <__umoddi3+0x1c4>
    aec0:	000b883a 	mov	r5,zero
    aec4:	01000044 	movi	r4,1
    aec8:	000b3580 	call	b358 <__udivsi3>
    aecc:	1029883a 	mov	r20,r2
    aed0:	00bfffd4 	movui	r2,65535
    aed4:	1500322e 	bgeu	r2,r20,afa0 <__umoddi3+0x294>
    aed8:	00804034 	movhi	r2,256
    aedc:	a080cd36 	bltu	r20,r2,b214 <__umoddi3+0x508>
    aee0:	a006d63a 	srli	r3,r20,24
    aee4:	04800604 	movi	r18,24
    aee8:	00800074 	movhi	r2,1
    aeec:	1885883a 	add	r2,r3,r2
    aef0:	15815803 	ldbu	r22,1376(r2)
    aef4:	00800804 	movi	r2,32
    aef8:	b4ad883a 	add	r22,r22,r18
    aefc:	15a5c83a 	sub	r18,r2,r22
    af00:	15808a1e 	bne	r2,r22,b12c <__umoddi3+0x420>
    af04:	a02ed43a 	srli	r23,r20,16
    af08:	8d23c83a 	sub	r17,r17,r20
    af0c:	a57fffcc 	andi	r21,r20,65535
    af10:	b80b883a 	mov	r5,r23
    af14:	8809883a 	mov	r4,r17
    af18:	000b3c80 	call	b3c8 <__umodsi3>
    af1c:	8809883a 	mov	r4,r17
    af20:	b80b883a 	mov	r5,r23
    af24:	102d883a 	mov	r22,r2
    af28:	000b3580 	call	b358 <__udivsi3>
    af2c:	b02c943a 	slli	r22,r22,16
    af30:	9808d43a 	srli	r4,r19,16
    af34:	1561383a 	mul	r16,r2,r21
    af38:	b108b03a 	or	r4,r22,r4
    af3c:	2400032e 	bgeu	r4,r16,af4c <__umoddi3+0x240>
    af40:	2509883a 	add	r4,r4,r20
    af44:	25000136 	bltu	r4,r20,af4c <__umoddi3+0x240>
    af48:	2400be36 	bltu	r4,r16,b244 <__umoddi3+0x538>
    af4c:	2421c83a 	sub	r16,r4,r16
    af50:	b80b883a 	mov	r5,r23
    af54:	8009883a 	mov	r4,r16
    af58:	000b3c80 	call	b3c8 <__umodsi3>
    af5c:	1023883a 	mov	r17,r2
    af60:	b80b883a 	mov	r5,r23
    af64:	8009883a 	mov	r4,r16
    af68:	000b3580 	call	b358 <__udivsi3>
    af6c:	8822943a 	slli	r17,r17,16
    af70:	1545383a 	mul	r2,r2,r21
    af74:	98ffffcc 	andi	r3,r19,65535
    af78:	88c6b03a 	or	r3,r17,r3
    af7c:	1880042e 	bgeu	r3,r2,af90 <__umoddi3+0x284>
    af80:	1d07883a 	add	r3,r3,r20
    af84:	1d000236 	bltu	r3,r20,af90 <__umoddi3+0x284>
    af88:	1880012e 	bgeu	r3,r2,af90 <__umoddi3+0x284>
    af8c:	1d07883a 	add	r3,r3,r20
    af90:	1885c83a 	sub	r2,r3,r2
    af94:	1484d83a 	srl	r2,r2,r18
    af98:	0007883a 	mov	r3,zero
    af9c:	003fa606 	br	ae38 <__umoddi3+0x12c>
    afa0:	a0804030 	cmpltui	r2,r20,256
    afa4:	10009e1e 	bne	r2,zero,b220 <__umoddi3+0x514>
    afa8:	a006d23a 	srli	r3,r20,8
    afac:	04800204 	movi	r18,8
    afb0:	003fcd06 	br	aee8 <__umoddi3+0x1dc>
    afb4:	30804030 	cmpltui	r2,r6,256
    afb8:	1000911e 	bne	r2,zero,b200 <__umoddi3+0x4f4>
    afbc:	3006d23a 	srli	r3,r6,8
    afc0:	04800204 	movi	r18,8
    afc4:	003f6d06 	br	ad7c <__umoddi3+0x70>
    afc8:	39004030 	cmpltui	r4,r7,256
    afcc:	2000961e 	bne	r4,zero,b228 <__umoddi3+0x51c>
    afd0:	3808d23a 	srli	r4,r7,8
    afd4:	02000204 	movi	r8,8
    afd8:	003faa06 	br	ae84 <__umoddi3+0x178>
    afdc:	3d0e983a 	sll	r7,r7,r20
    afe0:	3544d83a 	srl	r2,r6,r21
    afe4:	8d64d83a 	srl	r18,r17,r21
    afe8:	8d22983a 	sll	r17,r17,r20
    afec:	11eeb03a 	or	r23,r2,r7
    aff0:	b838d43a 	srli	fp,r23,16
    aff4:	8544d83a 	srl	r2,r16,r21
    aff8:	9009883a 	mov	r4,r18
    affc:	e00b883a 	mov	r5,fp
    b000:	3526983a 	sll	r19,r6,r20
    b004:	1462b03a 	or	r17,r2,r17
    b008:	000b3c80 	call	b3c8 <__umodsi3>
    b00c:	9009883a 	mov	r4,r18
    b010:	e00b883a 	mov	r5,fp
    b014:	1025883a 	mov	r18,r2
    b018:	000b3580 	call	b358 <__udivsi3>
    b01c:	9008943a 	slli	r4,r18,16
    b020:	8806d43a 	srli	r3,r17,16
    b024:	b9ffffcc 	andi	r7,r23,65535
    b028:	38a5383a 	mul	r18,r7,r2
    b02c:	20c8b03a 	or	r4,r4,r3
    b030:	8520983a 	sll	r16,r16,r20
    b034:	102d883a 	mov	r22,r2
    b038:	2480062e 	bgeu	r4,r18,b054 <__umoddi3+0x348>
    b03c:	25c9883a 	add	r4,r4,r23
    b040:	10bfffc4 	addi	r2,r2,-1
    b044:	25c07d36 	bltu	r4,r23,b23c <__umoddi3+0x530>
    b048:	24807c2e 	bgeu	r4,r18,b23c <__umoddi3+0x530>
    b04c:	b5bfff84 	addi	r22,r22,-2
    b050:	25c9883a 	add	r4,r4,r23
    b054:	24a5c83a 	sub	r18,r4,r18
    b058:	9009883a 	mov	r4,r18
    b05c:	e00b883a 	mov	r5,fp
    b060:	d9c00015 	stw	r7,0(sp)
    b064:	000b3c80 	call	b3c8 <__umodsi3>
    b068:	9009883a 	mov	r4,r18
    b06c:	e00b883a 	mov	r5,fp
    b070:	1025883a 	mov	r18,r2
    b074:	000b3580 	call	b358 <__udivsi3>
    b078:	d9c00017 	ldw	r7,0(sp)
    b07c:	9024943a 	slli	r18,r18,16
    b080:	8c7fffcc 	andi	r17,r17,65535
    b084:	388f383a 	mul	r7,r7,r2
    b088:	9448b03a 	or	r4,r18,r17
    b08c:	21c0062e 	bgeu	r4,r7,b0a8 <__umoddi3+0x39c>
    b090:	25c9883a 	add	r4,r4,r23
    b094:	10ffffc4 	addi	r3,r2,-1
    b098:	25c06636 	bltu	r4,r23,b234 <__umoddi3+0x528>
    b09c:	21c0652e 	bgeu	r4,r7,b234 <__umoddi3+0x528>
    b0a0:	10bfff84 	addi	r2,r2,-2
    b0a4:	25c9883a 	add	r4,r4,r23
    b0a8:	b00a943a 	slli	r5,r22,16
    b0ac:	11bfffcc 	andi	r6,r2,65535
    b0b0:	9806d43a 	srli	r3,r19,16
    b0b4:	2884b03a 	or	r2,r5,r2
    b0b8:	102cd43a 	srli	r22,r2,16
    b0bc:	997fffcc 	andi	r5,r19,65535
    b0c0:	3151383a 	mul	r8,r6,r5
    b0c4:	b14b383a 	mul	r5,r22,r5
    b0c8:	30cd383a 	mul	r6,r6,r3
    b0cc:	4004d43a 	srli	r2,r8,16
    b0d0:	b0ed383a 	mul	r22,r22,r3
    b0d4:	314d883a 	add	r6,r6,r5
    b0d8:	1185883a 	add	r2,r2,r6
    b0dc:	21c9c83a 	sub	r4,r4,r7
    b0e0:	1140022e 	bgeu	r2,r5,b0ec <__umoddi3+0x3e0>
    b0e4:	00c00074 	movhi	r3,1
    b0e8:	b0ed883a 	add	r22,r22,r3
    b0ec:	1006d43a 	srli	r3,r2,16
    b0f0:	1004943a 	slli	r2,r2,16
    b0f4:	423fffcc 	andi	r8,r8,65535
    b0f8:	1dad883a 	add	r22,r3,r22
    b0fc:	1205883a 	add	r2,r2,r8
    b100:	25803636 	bltu	r4,r22,b1dc <__umoddi3+0x4d0>
    b104:	25803426 	beq	r4,r22,b1d8 <__umoddi3+0x4cc>
    b108:	8085c83a 	sub	r2,r16,r2
    b10c:	8087803a 	cmpltu	r3,r16,r2
    b110:	2589c83a 	sub	r4,r4,r22
    b114:	20c7c83a 	sub	r3,r4,r3
    b118:	1d60983a 	sll	r16,r3,r21
    b11c:	1504d83a 	srl	r2,r2,r20
    b120:	1d06d83a 	srl	r3,r3,r20
    b124:	8084b03a 	or	r2,r16,r2
    b128:	003f4306 	br	ae38 <__umoddi3+0x12c>
    b12c:	a4a8983a 	sll	r20,r20,r18
    b130:	8daad83a 	srl	r21,r17,r22
    b134:	8ca2983a 	sll	r17,r17,r18
    b138:	a02ed43a 	srli	r23,r20,16
    b13c:	a809883a 	mov	r4,r21
    b140:	85acd83a 	srl	r22,r16,r22
    b144:	b80b883a 	mov	r5,r23
    b148:	000b3c80 	call	b3c8 <__umodsi3>
    b14c:	a809883a 	mov	r4,r21
    b150:	b80b883a 	mov	r5,r23
    b154:	b46cb03a 	or	r22,r22,r17
    b158:	1027883a 	mov	r19,r2
    b15c:	000b3580 	call	b358 <__udivsi3>
    b160:	9826943a 	slli	r19,r19,16
    b164:	b008d43a 	srli	r4,r22,16
    b168:	a57fffcc 	andi	r21,r20,65535
    b16c:	a8a3383a 	mul	r17,r21,r2
    b170:	9908b03a 	or	r4,r19,r4
    b174:	84a6983a 	sll	r19,r16,r18
    b178:	2440042e 	bgeu	r4,r17,b18c <__umoddi3+0x480>
    b17c:	2509883a 	add	r4,r4,r20
    b180:	25000236 	bltu	r4,r20,b18c <__umoddi3+0x480>
    b184:	2440012e 	bgeu	r4,r17,b18c <__umoddi3+0x480>
    b188:	2509883a 	add	r4,r4,r20
    b18c:	2463c83a 	sub	r17,r4,r17
    b190:	8809883a 	mov	r4,r17
    b194:	b80b883a 	mov	r5,r23
    b198:	000b3c80 	call	b3c8 <__umodsi3>
    b19c:	1021883a 	mov	r16,r2
    b1a0:	8809883a 	mov	r4,r17
    b1a4:	b80b883a 	mov	r5,r23
    b1a8:	8020943a 	slli	r16,r16,16
    b1ac:	000b3580 	call	b358 <__udivsi3>
    b1b0:	a885383a 	mul	r2,r21,r2
    b1b4:	b47fffcc 	andi	r17,r22,65535
    b1b8:	8462b03a 	or	r17,r16,r17
    b1bc:	8880042e 	bgeu	r17,r2,b1d0 <__umoddi3+0x4c4>
    b1c0:	8d23883a 	add	r17,r17,r20
    b1c4:	8d000236 	bltu	r17,r20,b1d0 <__umoddi3+0x4c4>
    b1c8:	8880012e 	bgeu	r17,r2,b1d0 <__umoddi3+0x4c4>
    b1cc:	8d23883a 	add	r17,r17,r20
    b1d0:	88a3c83a 	sub	r17,r17,r2
    b1d4:	003f4e06 	br	af10 <__umoddi3+0x204>
    b1d8:	80bfcb2e 	bgeu	r16,r2,b108 <__umoddi3+0x3fc>
    b1dc:	14e7c83a 	sub	r19,r2,r19
    b1e0:	14c5803a 	cmpltu	r2,r2,r19
    b1e4:	15c5883a 	add	r2,r2,r23
    b1e8:	b0adc83a 	sub	r22,r22,r2
    b1ec:	9805883a 	mov	r2,r19
    b1f0:	003fc506 	br	b108 <__umoddi3+0x3fc>
    b1f4:	3006d43a 	srli	r3,r6,16
    b1f8:	04800404 	movi	r18,16
    b1fc:	003edf06 	br	ad7c <__umoddi3+0x70>
    b200:	3007883a 	mov	r3,r6
    b204:	003edd06 	br	ad7c <__umoddi3+0x70>
    b208:	3808d43a 	srli	r4,r7,16
    b20c:	02000404 	movi	r8,16
    b210:	003f1c06 	br	ae84 <__umoddi3+0x178>
    b214:	a006d43a 	srli	r3,r20,16
    b218:	04800404 	movi	r18,16
    b21c:	003f3206 	br	aee8 <__umoddi3+0x1dc>
    b220:	a007883a 	mov	r3,r20
    b224:	003f3006 	br	aee8 <__umoddi3+0x1dc>
    b228:	3809883a 	mov	r4,r7
    b22c:	0011883a 	mov	r8,zero
    b230:	003f1406 	br	ae84 <__umoddi3+0x178>
    b234:	1805883a 	mov	r2,r3
    b238:	003f9b06 	br	b0a8 <__umoddi3+0x39c>
    b23c:	102d883a 	mov	r22,r2
    b240:	003f8406 	br	b054 <__umoddi3+0x348>
    b244:	2509883a 	add	r4,r4,r20
    b248:	003f4006 	br	af4c <__umoddi3+0x240>

0000b24c <__divsi3>:
    b24c:	f811883a 	mov	r8,ra
    b250:	000e1ac0 	call	e1ac <_mcount>
    b254:	403f883a 	mov	ra,r8
    b258:	20001a16 	blt	r4,zero,b2c4 <__divsi3+0x78>
    b25c:	000f883a 	mov	r7,zero
    b260:	2800020e 	bge	r5,zero,b26c <__divsi3+0x20>
    b264:	014bc83a 	sub	r5,zero,r5
    b268:	39c0005c 	xori	r7,r7,1
    b26c:	200d883a 	mov	r6,r4
    b270:	00c00044 	movi	r3,1
    b274:	2900092e 	bgeu	r5,r4,b29c <__divsi3+0x50>
    b278:	00800804 	movi	r2,32
    b27c:	00c00044 	movi	r3,1
    b280:	00000106 	br	b288 <__divsi3+0x3c>
    b284:	10001226 	beq	r2,zero,b2d0 <__divsi3+0x84>
    b288:	294b883a 	add	r5,r5,r5
    b28c:	10bfffc4 	addi	r2,r2,-1
    b290:	18c7883a 	add	r3,r3,r3
    b294:	293ffb36 	bltu	r5,r4,b284 <__divsi3+0x38>
    b298:	18000d26 	beq	r3,zero,b2d0 <__divsi3+0x84>
    b29c:	0005883a 	mov	r2,zero
    b2a0:	31400236 	bltu	r6,r5,b2ac <__divsi3+0x60>
    b2a4:	314dc83a 	sub	r6,r6,r5
    b2a8:	10c4b03a 	or	r2,r2,r3
    b2ac:	1806d07a 	srli	r3,r3,1
    b2b0:	280ad07a 	srli	r5,r5,1
    b2b4:	183ffa1e 	bne	r3,zero,b2a0 <__divsi3+0x54>
    b2b8:	38000126 	beq	r7,zero,b2c0 <__divsi3+0x74>
    b2bc:	0085c83a 	sub	r2,zero,r2
    b2c0:	f800283a 	ret
    b2c4:	0109c83a 	sub	r4,zero,r4
    b2c8:	01c00044 	movi	r7,1
    b2cc:	003fe406 	br	b260 <__divsi3+0x14>
    b2d0:	0005883a 	mov	r2,zero
    b2d4:	003ff806 	br	b2b8 <__divsi3+0x6c>

0000b2d8 <__modsi3>:
    b2d8:	f811883a 	mov	r8,ra
    b2dc:	000e1ac0 	call	e1ac <_mcount>
    b2e0:	403f883a 	mov	ra,r8
    b2e4:	20001916 	blt	r4,zero,b34c <__modsi3+0x74>
    b2e8:	000f883a 	mov	r7,zero
    b2ec:	2005883a 	mov	r2,r4
    b2f0:	2800010e 	bge	r5,zero,b2f8 <__modsi3+0x20>
    b2f4:	014bc83a 	sub	r5,zero,r5
    b2f8:	00c00044 	movi	r3,1
    b2fc:	2900092e 	bgeu	r5,r4,b324 <__modsi3+0x4c>
    b300:	01800804 	movi	r6,32
    b304:	00c00044 	movi	r3,1
    b308:	00000106 	br	b310 <__modsi3+0x38>
    b30c:	30000d26 	beq	r6,zero,b344 <__modsi3+0x6c>
    b310:	294b883a 	add	r5,r5,r5
    b314:	31bfffc4 	addi	r6,r6,-1
    b318:	18c7883a 	add	r3,r3,r3
    b31c:	293ffb36 	bltu	r5,r4,b30c <__modsi3+0x34>
    b320:	18000826 	beq	r3,zero,b344 <__modsi3+0x6c>
    b324:	1806d07a 	srli	r3,r3,1
    b328:	11400136 	bltu	r2,r5,b330 <__modsi3+0x58>
    b32c:	1145c83a 	sub	r2,r2,r5
    b330:	280ad07a 	srli	r5,r5,1
    b334:	183ffb1e 	bne	r3,zero,b324 <__modsi3+0x4c>
    b338:	38000126 	beq	r7,zero,b340 <__modsi3+0x68>
    b33c:	0085c83a 	sub	r2,zero,r2
    b340:	f800283a 	ret
    b344:	2005883a 	mov	r2,r4
    b348:	003ffb06 	br	b338 <__modsi3+0x60>
    b34c:	0109c83a 	sub	r4,zero,r4
    b350:	01c00044 	movi	r7,1
    b354:	003fe506 	br	b2ec <__modsi3+0x14>

0000b358 <__udivsi3>:
    b358:	f811883a 	mov	r8,ra
    b35c:	000e1ac0 	call	e1ac <_mcount>
    b360:	403f883a 	mov	ra,r8
    b364:	200d883a 	mov	r6,r4
    b368:	2900152e 	bgeu	r5,r4,b3c0 <__udivsi3+0x68>
    b36c:	28001416 	blt	r5,zero,b3c0 <__udivsi3+0x68>
    b370:	00800804 	movi	r2,32
    b374:	00c00044 	movi	r3,1
    b378:	00000206 	br	b384 <__udivsi3+0x2c>
    b37c:	10000e26 	beq	r2,zero,b3b8 <__udivsi3+0x60>
    b380:	28000516 	blt	r5,zero,b398 <__udivsi3+0x40>
    b384:	294b883a 	add	r5,r5,r5
    b388:	10bfffc4 	addi	r2,r2,-1
    b38c:	18c7883a 	add	r3,r3,r3
    b390:	293ffa36 	bltu	r5,r4,b37c <__udivsi3+0x24>
    b394:	18000826 	beq	r3,zero,b3b8 <__udivsi3+0x60>
    b398:	0005883a 	mov	r2,zero
    b39c:	31400236 	bltu	r6,r5,b3a8 <__udivsi3+0x50>
    b3a0:	314dc83a 	sub	r6,r6,r5
    b3a4:	10c4b03a 	or	r2,r2,r3
    b3a8:	1806d07a 	srli	r3,r3,1
    b3ac:	280ad07a 	srli	r5,r5,1
    b3b0:	183ffa1e 	bne	r3,zero,b39c <__udivsi3+0x44>
    b3b4:	f800283a 	ret
    b3b8:	0005883a 	mov	r2,zero
    b3bc:	f800283a 	ret
    b3c0:	00c00044 	movi	r3,1
    b3c4:	003ff406 	br	b398 <__udivsi3+0x40>

0000b3c8 <__umodsi3>:
    b3c8:	f811883a 	mov	r8,ra
    b3cc:	000e1ac0 	call	e1ac <_mcount>
    b3d0:	403f883a 	mov	ra,r8
    b3d4:	2005883a 	mov	r2,r4
    b3d8:	2900132e 	bgeu	r5,r4,b428 <__umodsi3+0x60>
    b3dc:	28001216 	blt	r5,zero,b428 <__umodsi3+0x60>
    b3e0:	01800804 	movi	r6,32
    b3e4:	00c00044 	movi	r3,1
    b3e8:	00000206 	br	b3f4 <__umodsi3+0x2c>
    b3ec:	30000c26 	beq	r6,zero,b420 <__umodsi3+0x58>
    b3f0:	28000516 	blt	r5,zero,b408 <__umodsi3+0x40>
    b3f4:	294b883a 	add	r5,r5,r5
    b3f8:	31bfffc4 	addi	r6,r6,-1
    b3fc:	18c7883a 	add	r3,r3,r3
    b400:	293ffa36 	bltu	r5,r4,b3ec <__umodsi3+0x24>
    b404:	18000626 	beq	r3,zero,b420 <__umodsi3+0x58>
    b408:	1806d07a 	srli	r3,r3,1
    b40c:	11400136 	bltu	r2,r5,b414 <__umodsi3+0x4c>
    b410:	1145c83a 	sub	r2,r2,r5
    b414:	280ad07a 	srli	r5,r5,1
    b418:	183ffb1e 	bne	r3,zero,b408 <__umodsi3+0x40>
    b41c:	f800283a 	ret
    b420:	2005883a 	mov	r2,r4
    b424:	f800283a 	ret
    b428:	00c00044 	movi	r3,1
    b42c:	003ff606 	br	b408 <__umodsi3+0x40>

0000b430 <__adddf3>:
    b430:	f811883a 	mov	r8,ra
    b434:	000e1ac0 	call	e1ac <_mcount>
    b438:	403f883a 	mov	ra,r8
    b43c:	defffb04 	addi	sp,sp,-20
    b440:	dfc00415 	stw	ra,16(sp)
    b444:	dcc00315 	stw	r19,12(sp)
    b448:	dc800215 	stw	r18,8(sp)
    b44c:	dc400115 	stw	r17,4(sp)
    b450:	dc000015 	stw	r16,0(sp)
    b454:	02000434 	movhi	r8,16
    b458:	423fffc4 	addi	r8,r8,-1
    b45c:	2806d53a 	srli	r3,r5,20
    b460:	3804d53a 	srli	r2,r7,20
    b464:	2a14703a 	and	r10,r5,r8
    b468:	3a12703a 	and	r9,r7,r8
    b46c:	280ad7fa 	srli	r5,r5,31
    b470:	501490fa 	slli	r10,r10,3
    b474:	2018d77a 	srli	r12,r4,29
    b478:	481290fa 	slli	r9,r9,3
    b47c:	3016d77a 	srli	r11,r6,29
    b480:	380ed7fa 	srli	r7,r7,31
    b484:	1c81ffcc 	andi	r18,r3,2047
    b488:	1081ffcc 	andi	r2,r2,2047
    b48c:	201c90fa 	slli	r14,r4,3
    b490:	301a90fa 	slli	r13,r6,3
    b494:	2821883a 	mov	r16,r5
    b498:	6294b03a 	or	r10,r12,r10
    b49c:	5a52b03a 	or	r9,r11,r9
    b4a0:	9087c83a 	sub	r3,r18,r2
    b4a4:	29c06126 	beq	r5,r7,b62c <__adddf3+0x1fc>
    b4a8:	00c0550e 	bge	zero,r3,b600 <__adddf3+0x1d0>
    b4ac:	10007326 	beq	r2,zero,b67c <__adddf3+0x24c>
    b4b0:	9081ffd8 	cmpnei	r2,r18,2047
    b4b4:	1000bd26 	beq	r2,zero,b7ac <__adddf3+0x37c>
    b4b8:	4a402034 	orhi	r9,r9,128
    b4bc:	18800e48 	cmpgei	r2,r3,57
    b4c0:	1000ef1e 	bne	r2,zero,b880 <__adddf3+0x450>
    b4c4:	18800808 	cmpgei	r2,r3,32
    b4c8:	1001321e 	bne	r2,zero,b994 <__adddf3+0x564>
    b4cc:	00800804 	movi	r2,32
    b4d0:	10c5c83a 	sub	r2,r2,r3
    b4d4:	68c8d83a 	srl	r4,r13,r3
    b4d8:	48a2983a 	sll	r17,r9,r2
    b4dc:	689a983a 	sll	r13,r13,r2
    b4e0:	48c6d83a 	srl	r3,r9,r3
    b4e4:	8922b03a 	or	r17,r17,r4
    b4e8:	681ac03a 	cmpne	r13,r13,zero
    b4ec:	8b62b03a 	or	r17,r17,r13
    b4f0:	50d5c83a 	sub	r10,r10,r3
    b4f4:	7463c83a 	sub	r17,r14,r17
    b4f8:	7451803a 	cmpltu	r8,r14,r17
    b4fc:	5211c83a 	sub	r8,r10,r8
    b500:	4080202c 	andhi	r2,r8,128
    b504:	10008d26 	beq	r2,zero,b73c <__adddf3+0x30c>
    b508:	02402034 	movhi	r9,128
    b50c:	4a7fffc4 	addi	r9,r9,-1
    b510:	4266703a 	and	r19,r8,r9
    b514:	9800b326 	beq	r19,zero,b7e4 <__adddf3+0x3b4>
    b518:	9809883a 	mov	r4,r19
    b51c:	000d9940 	call	d994 <__clzsi2>
    b520:	10fffe04 	addi	r3,r2,-8
    b524:	02000804 	movi	r8,32
    b528:	40d1c83a 	sub	r8,r8,r3
    b52c:	8a10d83a 	srl	r8,r17,r8
    b530:	98d2983a 	sll	r9,r19,r3
    b534:	88e2983a 	sll	r17,r17,r3
    b538:	4250b03a 	or	r8,r8,r9
    b53c:	1c80b216 	blt	r3,r18,b808 <__adddf3+0x3d8>
    b540:	1c87c83a 	sub	r3,r3,r18
    b544:	19000044 	addi	r4,r3,1
    b548:	20800808 	cmpgei	r2,r4,32
    b54c:	10006f1e 	bne	r2,zero,b70c <__adddf3+0x2dc>
    b550:	00800804 	movi	r2,32
    b554:	1105c83a 	sub	r2,r2,r4
    b558:	8906d83a 	srl	r3,r17,r4
    b55c:	88a2983a 	sll	r17,r17,r2
    b560:	4084983a 	sll	r2,r8,r2
    b564:	4110d83a 	srl	r8,r8,r4
    b568:	8822c03a 	cmpne	r17,r17,zero
    b56c:	10c4b03a 	or	r2,r2,r3
    b570:	1462b03a 	or	r17,r2,r17
    b574:	0025883a 	mov	r18,zero
    b578:	888001cc 	andi	r2,r17,7
    b57c:	10000726 	beq	r2,zero,b59c <__adddf3+0x16c>
    b580:	888003cc 	andi	r2,r17,15
    b584:	10800120 	cmpeqi	r2,r2,4
    b588:	1000041e 	bne	r2,zero,b59c <__adddf3+0x16c>
    b58c:	88c00104 	addi	r3,r17,4
    b590:	1c63803a 	cmpltu	r17,r3,r17
    b594:	4451883a 	add	r8,r8,r17
    b598:	1823883a 	mov	r17,r3
    b59c:	4080202c 	andhi	r2,r8,128
    b5a0:	10006826 	beq	r2,zero,b744 <__adddf3+0x314>
    b5a4:	90c00044 	addi	r3,r18,1
    b5a8:	1881ffe0 	cmpeqi	r2,r3,2047
    b5ac:	18c1ffcc 	andi	r3,r3,2047
    b5b0:	10007a1e 	bne	r2,zero,b79c <__adddf3+0x36c>
    b5b4:	00bfe034 	movhi	r2,65408
    b5b8:	10bfffc4 	addi	r2,r2,-1
    b5bc:	4090703a 	and	r8,r8,r2
    b5c0:	4004977a 	slli	r2,r8,29
    b5c4:	4010927a 	slli	r8,r8,9
    b5c8:	8822d0fa 	srli	r17,r17,3
    b5cc:	4010d33a 	srli	r8,r8,12
    b5d0:	1444b03a 	or	r2,r2,r17
    b5d4:	1806953a 	slli	r3,r3,20
    b5d8:	802097fa 	slli	r16,r16,31
    b5dc:	1a06b03a 	or	r3,r3,r8
    b5e0:	1c06b03a 	or	r3,r3,r16
    b5e4:	dfc00417 	ldw	ra,16(sp)
    b5e8:	dcc00317 	ldw	r19,12(sp)
    b5ec:	dc800217 	ldw	r18,8(sp)
    b5f0:	dc400117 	ldw	r17,4(sp)
    b5f4:	dc000017 	ldw	r16,0(sp)
    b5f8:	dec00504 	addi	sp,sp,20
    b5fc:	f800283a 	ret
    b600:	18002626 	beq	r3,zero,b69c <__adddf3+0x26c>
    b604:	1487c83a 	sub	r3,r2,r18
    b608:	9000ba1e 	bne	r18,zero,b8f4 <__adddf3+0x4c4>
    b60c:	5388b03a 	or	r4,r10,r14
    b610:	20011826 	beq	r4,zero,ba74 <__adddf3+0x644>
    b614:	193fffc4 	addi	r4,r3,-1
    b618:	20015726 	beq	r4,zero,bb78 <__adddf3+0x748>
    b61c:	18c1ffd8 	cmpnei	r3,r3,2047
    b620:	18013026 	beq	r3,zero,bae4 <__adddf3+0x6b4>
    b624:	2007883a 	mov	r3,r4
    b628:	0000b506 	br	b900 <__adddf3+0x4d0>
    b62c:	00c07b0e 	bge	zero,r3,b81c <__adddf3+0x3ec>
    b630:	10002e26 	beq	r2,zero,b6ec <__adddf3+0x2bc>
    b634:	9081ffd8 	cmpnei	r2,r18,2047
    b638:	10005c26 	beq	r2,zero,b7ac <__adddf3+0x37c>
    b63c:	4a402034 	orhi	r9,r9,128
    b640:	18800e48 	cmpgei	r2,r3,57
    b644:	10004b1e 	bne	r2,zero,b774 <__adddf3+0x344>
    b648:	18800808 	cmpgei	r2,r3,32
    b64c:	1000ec26 	beq	r2,zero,ba00 <__adddf3+0x5d0>
    b650:	1c7ff804 	addi	r17,r3,-32
    b654:	19000820 	cmpeqi	r4,r3,32
    b658:	4c44d83a 	srl	r2,r9,r17
    b65c:	2000041e 	bne	r4,zero,b670 <__adddf3+0x240>
    b660:	01001004 	movi	r4,64
    b664:	20c7c83a 	sub	r3,r4,r3
    b668:	48d2983a 	sll	r9,r9,r3
    b66c:	6a5ab03a 	or	r13,r13,r9
    b670:	6822c03a 	cmpne	r17,r13,zero
    b674:	88a2b03a 	or	r17,r17,r2
    b678:	00004006 	br	b77c <__adddf3+0x34c>
    b67c:	4b44b03a 	or	r2,r9,r13
    b680:	10008226 	beq	r2,zero,b88c <__adddf3+0x45c>
    b684:	18bfffc4 	addi	r2,r3,-1
    b688:	10011026 	beq	r2,zero,bacc <__adddf3+0x69c>
    b68c:	18c1ffd8 	cmpnei	r3,r3,2047
    b690:	18004626 	beq	r3,zero,b7ac <__adddf3+0x37c>
    b694:	1007883a 	mov	r3,r2
    b698:	003f8806 	br	b4bc <__adddf3+0x8c>
    b69c:	90800044 	addi	r2,r18,1
    b6a0:	1081ff8c 	andi	r2,r2,2046
    b6a4:	1000a51e 	bne	r2,zero,b93c <__adddf3+0x50c>
    b6a8:	538ab03a 	or	r5,r10,r14
    b6ac:	4b44b03a 	or	r2,r9,r13
    b6b0:	9000f81e 	bne	r18,zero,ba94 <__adddf3+0x664>
    b6b4:	28013726 	beq	r5,zero,bb94 <__adddf3+0x764>
    b6b8:	10011226 	beq	r2,zero,bb04 <__adddf3+0x6d4>
    b6bc:	7363c83a 	sub	r17,r14,r13
    b6c0:	7445803a 	cmpltu	r2,r14,r17
    b6c4:	5251c83a 	sub	r8,r10,r9
    b6c8:	4091c83a 	sub	r8,r8,r2
    b6cc:	4080202c 	andhi	r2,r8,128
    b6d0:	10018f26 	beq	r2,zero,bd10 <__adddf3+0x8e0>
    b6d4:	6ba3c83a 	sub	r17,r13,r14
    b6d8:	4a95c83a 	sub	r10,r9,r10
    b6dc:	6c51803a 	cmpltu	r8,r13,r17
    b6e0:	5211c83a 	sub	r8,r10,r8
    b6e4:	3821883a 	mov	r16,r7
    b6e8:	003fa306 	br	b578 <__adddf3+0x148>
    b6ec:	4b44b03a 	or	r2,r9,r13
    b6f0:	10006626 	beq	r2,zero,b88c <__adddf3+0x45c>
    b6f4:	18bfffc4 	addi	r2,r3,-1
    b6f8:	1000ec26 	beq	r2,zero,baac <__adddf3+0x67c>
    b6fc:	18c1ffd8 	cmpnei	r3,r3,2047
    b700:	18012d26 	beq	r3,zero,bbb8 <__adddf3+0x788>
    b704:	1007883a 	mov	r3,r2
    b708:	003fcd06 	br	b640 <__adddf3+0x210>
    b70c:	18fff844 	addi	r3,r3,-31
    b710:	20800820 	cmpeqi	r2,r4,32
    b714:	40c6d83a 	srl	r3,r8,r3
    b718:	1000041e 	bne	r2,zero,b72c <__adddf3+0x2fc>
    b71c:	00801004 	movi	r2,64
    b720:	1109c83a 	sub	r4,r2,r4
    b724:	4110983a 	sll	r8,r8,r4
    b728:	8a22b03a 	or	r17,r17,r8
    b72c:	8822c03a 	cmpne	r17,r17,zero
    b730:	88e2b03a 	or	r17,r17,r3
    b734:	0011883a 	mov	r8,zero
    b738:	0025883a 	mov	r18,zero
    b73c:	888001cc 	andi	r2,r17,7
    b740:	103f8f1e 	bne	r2,zero,b580 <__adddf3+0x150>
    b744:	8822d0fa 	srli	r17,r17,3
    b748:	4004977a 	slli	r2,r8,29
    b74c:	4014d0fa 	srli	r10,r8,3
    b750:	9007883a 	mov	r3,r18
    b754:	8884b03a 	or	r2,r17,r2
    b758:	1901ffe0 	cmpeqi	r4,r3,2047
    b75c:	2000191e 	bne	r4,zero,b7c4 <__adddf3+0x394>
    b760:	02000434 	movhi	r8,16
    b764:	423fffc4 	addi	r8,r8,-1
    b768:	5210703a 	and	r8,r10,r8
    b76c:	18c1ffcc 	andi	r3,r3,2047
    b770:	003f9806 	br	b5d4 <__adddf3+0x1a4>
    b774:	4b62b03a 	or	r17,r9,r13
    b778:	8822c03a 	cmpne	r17,r17,zero
    b77c:	8ba3883a 	add	r17,r17,r14
    b780:	8b91803a 	cmpltu	r8,r17,r14
    b784:	4291883a 	add	r8,r8,r10
    b788:	4080202c 	andhi	r2,r8,128
    b78c:	103feb26 	beq	r2,zero,b73c <__adddf3+0x30c>
    b790:	94800044 	addi	r18,r18,1
    b794:	9081ffe0 	cmpeqi	r2,r18,2047
    b798:	10007426 	beq	r2,zero,b96c <__adddf3+0x53c>
    b79c:	00c1ffc4 	movi	r3,2047
    b7a0:	0011883a 	mov	r8,zero
    b7a4:	0005883a 	mov	r2,zero
    b7a8:	003f8a06 	br	b5d4 <__adddf3+0x1a4>
    b7ac:	500a977a 	slli	r5,r10,29
    b7b0:	00c80034 	movhi	r3,8192
    b7b4:	18ffffc4 	addi	r3,r3,-1
    b7b8:	5014d0fa 	srli	r10,r10,3
    b7bc:	20c4703a 	and	r2,r4,r3
    b7c0:	1144b03a 	or	r2,r2,r5
    b7c4:	1286b03a 	or	r3,r2,r10
    b7c8:	18015426 	beq	r3,zero,bd1c <__adddf3+0x8ec>
    b7cc:	00c00434 	movhi	r3,16
    b7d0:	18ffffc4 	addi	r3,r3,-1
    b7d4:	52000234 	orhi	r8,r10,8
    b7d8:	40d0703a 	and	r8,r8,r3
    b7dc:	00c1ffc4 	movi	r3,2047
    b7e0:	003f7c06 	br	b5d4 <__adddf3+0x1a4>
    b7e4:	8809883a 	mov	r4,r17
    b7e8:	000d9940 	call	d994 <__clzsi2>
    b7ec:	10c00604 	addi	r3,r2,24
    b7f0:	19000808 	cmpgei	r4,r3,32
    b7f4:	203f4b26 	beq	r4,zero,b524 <__adddf3+0xf4>
    b7f8:	123ffe04 	addi	r8,r2,-8
    b7fc:	8a10983a 	sll	r8,r17,r8
    b800:	0023883a 	mov	r17,zero
    b804:	1cbf4e0e 	bge	r3,r18,b540 <__adddf3+0x110>
    b808:	00bfe034 	movhi	r2,65408
    b80c:	10bfffc4 	addi	r2,r2,-1
    b810:	90e5c83a 	sub	r18,r18,r3
    b814:	4090703a 	and	r8,r8,r2
    b818:	003f5706 	br	b578 <__adddf3+0x148>
    b81c:	18002226 	beq	r3,zero,b8a8 <__adddf3+0x478>
    b820:	1487c83a 	sub	r3,r2,r18
    b824:	90006e26 	beq	r18,zero,b9e0 <__adddf3+0x5b0>
    b828:	1101ffd8 	cmpnei	r4,r2,2047
    b82c:	2000e926 	beq	r4,zero,bbd4 <__adddf3+0x7a4>
    b830:	52802034 	orhi	r10,r10,128
    b834:	19000e48 	cmpgei	r4,r3,57
    b838:	2000b91e 	bne	r4,zero,bb20 <__adddf3+0x6f0>
    b83c:	19000808 	cmpgei	r4,r3,32
    b840:	2001101e 	bne	r4,zero,bc84 <__adddf3+0x854>
    b844:	01000804 	movi	r4,32
    b848:	20c9c83a 	sub	r4,r4,r3
    b84c:	5122983a 	sll	r17,r10,r4
    b850:	70cad83a 	srl	r5,r14,r3
    b854:	7108983a 	sll	r4,r14,r4
    b858:	50d4d83a 	srl	r10,r10,r3
    b85c:	8962b03a 	or	r17,r17,r5
    b860:	2008c03a 	cmpne	r4,r4,zero
    b864:	8922b03a 	or	r17,r17,r4
    b868:	4a93883a 	add	r9,r9,r10
    b86c:	8b63883a 	add	r17,r17,r13
    b870:	8b51803a 	cmpltu	r8,r17,r13
    b874:	4251883a 	add	r8,r8,r9
    b878:	1025883a 	mov	r18,r2
    b87c:	003fc206 	br	b788 <__adddf3+0x358>
    b880:	4b62b03a 	or	r17,r9,r13
    b884:	8822c03a 	cmpne	r17,r17,zero
    b888:	003f1a06 	br	b4f4 <__adddf3+0xc4>
    b88c:	500c977a 	slli	r6,r10,29
    b890:	01480034 	movhi	r5,8192
    b894:	297fffc4 	addi	r5,r5,-1
    b898:	2144703a 	and	r2,r4,r5
    b89c:	5014d0fa 	srli	r10,r10,3
    b8a0:	1184b03a 	or	r2,r2,r6
    b8a4:	003fac06 	br	b758 <__adddf3+0x328>
    b8a8:	90800044 	addi	r2,r18,1
    b8ac:	1141ff8c 	andi	r5,r2,2046
    b8b0:	28005e1e 	bne	r5,zero,ba2c <__adddf3+0x5fc>
    b8b4:	5384b03a 	or	r2,r10,r14
    b8b8:	9000a71e 	bne	r18,zero,bb58 <__adddf3+0x728>
    b8bc:	1000e526 	beq	r2,zero,bc54 <__adddf3+0x824>
    b8c0:	4b44b03a 	or	r2,r9,r13
    b8c4:	10008f26 	beq	r2,zero,bb04 <__adddf3+0x6d4>
    b8c8:	7363883a 	add	r17,r14,r13
    b8cc:	5255883a 	add	r10,r10,r9
    b8d0:	8b91803a 	cmpltu	r8,r17,r14
    b8d4:	5211883a 	add	r8,r10,r8
    b8d8:	4080202c 	andhi	r2,r8,128
    b8dc:	103f9726 	beq	r2,zero,b73c <__adddf3+0x30c>
    b8e0:	00bfe034 	movhi	r2,65408
    b8e4:	10bfffc4 	addi	r2,r2,-1
    b8e8:	4090703a 	and	r8,r8,r2
    b8ec:	04800044 	movi	r18,1
    b8f0:	003f9206 	br	b73c <__adddf3+0x30c>
    b8f4:	1101ffd8 	cmpnei	r4,r2,2047
    b8f8:	20007a26 	beq	r4,zero,bae4 <__adddf3+0x6b4>
    b8fc:	52802034 	orhi	r10,r10,128
    b900:	19000e48 	cmpgei	r4,r3,57
    b904:	20002e1e 	bne	r4,zero,b9c0 <__adddf3+0x590>
    b908:	19000808 	cmpgei	r4,r3,32
    b90c:	2000871e 	bne	r4,zero,bb2c <__adddf3+0x6fc>
    b910:	01000804 	movi	r4,32
    b914:	20c9c83a 	sub	r4,r4,r3
    b918:	5122983a 	sll	r17,r10,r4
    b91c:	70cad83a 	srl	r5,r14,r3
    b920:	711c983a 	sll	r14,r14,r4
    b924:	50d4d83a 	srl	r10,r10,r3
    b928:	8962b03a 	or	r17,r17,r5
    b92c:	701cc03a 	cmpne	r14,r14,zero
    b930:	8ba2b03a 	or	r17,r17,r14
    b934:	4a93c83a 	sub	r9,r9,r10
    b938:	00002306 	br	b9c8 <__adddf3+0x598>
    b93c:	7363c83a 	sub	r17,r14,r13
    b940:	5267c83a 	sub	r19,r10,r9
    b944:	7451803a 	cmpltu	r8,r14,r17
    b948:	9a27c83a 	sub	r19,r19,r8
    b94c:	9880202c 	andhi	r2,r19,128
    b950:	1000421e 	bne	r2,zero,ba5c <__adddf3+0x62c>
    b954:	8cc4b03a 	or	r2,r17,r19
    b958:	103eee1e 	bne	r2,zero,b514 <__adddf3+0xe4>
    b95c:	0015883a 	mov	r10,zero
    b960:	0021883a 	mov	r16,zero
    b964:	003f7e06 	br	b760 <__adddf3+0x330>
    b968:	04800084 	movi	r18,2
    b96c:	00bfe034 	movhi	r2,65408
    b970:	10bfffc4 	addi	r2,r2,-1
    b974:	8806d07a 	srli	r3,r17,1
    b978:	4090703a 	and	r8,r8,r2
    b97c:	400497fa 	slli	r2,r8,31
    b980:	8c40004c 	andi	r17,r17,1
    b984:	1c62b03a 	or	r17,r3,r17
    b988:	4010d07a 	srli	r8,r8,1
    b98c:	1462b03a 	or	r17,r2,r17
    b990:	003ef906 	br	b578 <__adddf3+0x148>
    b994:	1c7ff804 	addi	r17,r3,-32
    b998:	19000820 	cmpeqi	r4,r3,32
    b99c:	4c44d83a 	srl	r2,r9,r17
    b9a0:	2000041e 	bne	r4,zero,b9b4 <__adddf3+0x584>
    b9a4:	01001004 	movi	r4,64
    b9a8:	20c7c83a 	sub	r3,r4,r3
    b9ac:	48d2983a 	sll	r9,r9,r3
    b9b0:	6a5ab03a 	or	r13,r13,r9
    b9b4:	6822c03a 	cmpne	r17,r13,zero
    b9b8:	88a2b03a 	or	r17,r17,r2
    b9bc:	003ecd06 	br	b4f4 <__adddf3+0xc4>
    b9c0:	5394b03a 	or	r10,r10,r14
    b9c4:	5022c03a 	cmpne	r17,r10,zero
    b9c8:	6c63c83a 	sub	r17,r13,r17
    b9cc:	6c51803a 	cmpltu	r8,r13,r17
    b9d0:	4a11c83a 	sub	r8,r9,r8
    b9d4:	3821883a 	mov	r16,r7
    b9d8:	1025883a 	mov	r18,r2
    b9dc:	003ec806 	br	b500 <__adddf3+0xd0>
    b9e0:	5388b03a 	or	r4,r10,r14
    b9e4:	20008226 	beq	r4,zero,bbf0 <__adddf3+0x7c0>
    b9e8:	193fffc4 	addi	r4,r3,-1
    b9ec:	2000b026 	beq	r4,zero,bcb0 <__adddf3+0x880>
    b9f0:	18c1ffd8 	cmpnei	r3,r3,2047
    b9f4:	18007726 	beq	r3,zero,bbd4 <__adddf3+0x7a4>
    b9f8:	2007883a 	mov	r3,r4
    b9fc:	003f8d06 	br	b834 <__adddf3+0x404>
    ba00:	00800804 	movi	r2,32
    ba04:	10c5c83a 	sub	r2,r2,r3
    ba08:	68c8d83a 	srl	r4,r13,r3
    ba0c:	48a2983a 	sll	r17,r9,r2
    ba10:	689a983a 	sll	r13,r13,r2
    ba14:	48c6d83a 	srl	r3,r9,r3
    ba18:	8922b03a 	or	r17,r17,r4
    ba1c:	681ac03a 	cmpne	r13,r13,zero
    ba20:	8b62b03a 	or	r17,r17,r13
    ba24:	50d5883a 	add	r10,r10,r3
    ba28:	003f5406 	br	b77c <__adddf3+0x34c>
    ba2c:	10c1ffe0 	cmpeqi	r3,r2,2047
    ba30:	183f5a1e 	bne	r3,zero,b79c <__adddf3+0x36c>
    ba34:	7351883a 	add	r8,r14,r13
    ba38:	4387803a 	cmpltu	r3,r8,r14
    ba3c:	5255883a 	add	r10,r10,r9
    ba40:	50c7883a 	add	r3,r10,r3
    ba44:	401ad07a 	srli	r13,r8,1
    ba48:	182297fa 	slli	r17,r3,31
    ba4c:	1810d07a 	srli	r8,r3,1
    ba50:	1025883a 	mov	r18,r2
    ba54:	8b62b03a 	or	r17,r17,r13
    ba58:	003f3806 	br	b73c <__adddf3+0x30c>
    ba5c:	6ba3c83a 	sub	r17,r13,r14
    ba60:	4a93c83a 	sub	r9,r9,r10
    ba64:	6c51803a 	cmpltu	r8,r13,r17
    ba68:	4a27c83a 	sub	r19,r9,r8
    ba6c:	3821883a 	mov	r16,r7
    ba70:	003ea806 	br	b514 <__adddf3+0xe4>
    ba74:	480a977a 	slli	r5,r9,29
    ba78:	01080034 	movhi	r4,8192
    ba7c:	213fffc4 	addi	r4,r4,-1
    ba80:	3104703a 	and	r2,r6,r4
    ba84:	4814d0fa 	srli	r10,r9,3
    ba88:	1144b03a 	or	r2,r2,r5
    ba8c:	3821883a 	mov	r16,r7
    ba90:	003f3106 	br	b758 <__adddf3+0x328>
    ba94:	28005d1e 	bne	r5,zero,bc0c <__adddf3+0x7dc>
    ba98:	1000121e 	bne	r2,zero,bae4 <__adddf3+0x6b4>
    ba9c:	0021883a 	mov	r16,zero
    baa0:	4015883a 	mov	r10,r8
    baa4:	00bfffc4 	movi	r2,-1
    baa8:	003f4806 	br	b7cc <__adddf3+0x39c>
    baac:	7363883a 	add	r17,r14,r13
    bab0:	5255883a 	add	r10,r10,r9
    bab4:	8b91803a 	cmpltu	r8,r17,r14
    bab8:	5211883a 	add	r8,r10,r8
    babc:	4080202c 	andhi	r2,r8,128
    bac0:	103fa91e 	bne	r2,zero,b968 <__adddf3+0x538>
    bac4:	04800044 	movi	r18,1
    bac8:	003f1c06 	br	b73c <__adddf3+0x30c>
    bacc:	7363c83a 	sub	r17,r14,r13
    bad0:	5255c83a 	sub	r10,r10,r9
    bad4:	7451803a 	cmpltu	r8,r14,r17
    bad8:	5211c83a 	sub	r8,r10,r8
    badc:	04800044 	movi	r18,1
    bae0:	003e8706 	br	b500 <__adddf3+0xd0>
    bae4:	4806977a 	slli	r3,r9,29
    bae8:	00880034 	movhi	r2,8192
    baec:	10bfffc4 	addi	r2,r2,-1
    baf0:	3084703a 	and	r2,r6,r2
    baf4:	4814d0fa 	srli	r10,r9,3
    baf8:	10c4b03a 	or	r2,r2,r3
    bafc:	3821883a 	mov	r16,r7
    bb00:	003f3006 	br	b7c4 <__adddf3+0x394>
    bb04:	500a977a 	slli	r5,r10,29
    bb08:	00880034 	movhi	r2,8192
    bb0c:	10bfffc4 	addi	r2,r2,-1
    bb10:	2084703a 	and	r2,r4,r2
    bb14:	5014d0fa 	srli	r10,r10,3
    bb18:	1144b03a 	or	r2,r2,r5
    bb1c:	003f1006 	br	b760 <__adddf3+0x330>
    bb20:	5394b03a 	or	r10,r10,r14
    bb24:	5022c03a 	cmpne	r17,r10,zero
    bb28:	003f5006 	br	b86c <__adddf3+0x43c>
    bb2c:	1c7ff804 	addi	r17,r3,-32
    bb30:	19400820 	cmpeqi	r5,r3,32
    bb34:	5448d83a 	srl	r4,r10,r17
    bb38:	2800041e 	bne	r5,zero,bb4c <__adddf3+0x71c>
    bb3c:	01401004 	movi	r5,64
    bb40:	28c7c83a 	sub	r3,r5,r3
    bb44:	50d4983a 	sll	r10,r10,r3
    bb48:	729cb03a 	or	r14,r14,r10
    bb4c:	7022c03a 	cmpne	r17,r14,zero
    bb50:	8922b03a 	or	r17,r17,r4
    bb54:	003f9c06 	br	b9c8 <__adddf3+0x598>
    bb58:	10005a1e 	bne	r2,zero,bcc4 <__adddf3+0x894>
    bb5c:	4804977a 	slli	r2,r9,29
    bb60:	00c80034 	movhi	r3,8192
    bb64:	18ffffc4 	addi	r3,r3,-1
    bb68:	30cc703a 	and	r6,r6,r3
    bb6c:	4814d0fa 	srli	r10,r9,3
    bb70:	1184b03a 	or	r2,r2,r6
    bb74:	003f1306 	br	b7c4 <__adddf3+0x394>
    bb78:	6ba3c83a 	sub	r17,r13,r14
    bb7c:	4a95c83a 	sub	r10,r9,r10
    bb80:	6c51803a 	cmpltu	r8,r13,r17
    bb84:	5211c83a 	sub	r8,r10,r8
    bb88:	3821883a 	mov	r16,r7
    bb8c:	04800044 	movi	r18,1
    bb90:	003e5b06 	br	b500 <__adddf3+0xd0>
    bb94:	103f7126 	beq	r2,zero,b95c <__adddf3+0x52c>
    bb98:	4808977a 	slli	r4,r9,29
    bb9c:	00880034 	movhi	r2,8192
    bba0:	10bfffc4 	addi	r2,r2,-1
    bba4:	3084703a 	and	r2,r6,r2
    bba8:	4814d0fa 	srli	r10,r9,3
    bbac:	1104b03a 	or	r2,r2,r4
    bbb0:	3821883a 	mov	r16,r7
    bbb4:	003eea06 	br	b760 <__adddf3+0x330>
    bbb8:	5006977a 	slli	r3,r10,29
    bbbc:	00880034 	movhi	r2,8192
    bbc0:	10bfffc4 	addi	r2,r2,-1
    bbc4:	2084703a 	and	r2,r4,r2
    bbc8:	5014d0fa 	srli	r10,r10,3
    bbcc:	10c4b03a 	or	r2,r2,r3
    bbd0:	003efc06 	br	b7c4 <__adddf3+0x394>
    bbd4:	4806977a 	slli	r3,r9,29
    bbd8:	00880034 	movhi	r2,8192
    bbdc:	10bfffc4 	addi	r2,r2,-1
    bbe0:	3084703a 	and	r2,r6,r2
    bbe4:	4814d0fa 	srli	r10,r9,3
    bbe8:	10c4b03a 	or	r2,r2,r3
    bbec:	003ef506 	br	b7c4 <__adddf3+0x394>
    bbf0:	4808977a 	slli	r4,r9,29
    bbf4:	00880034 	movhi	r2,8192
    bbf8:	10bfffc4 	addi	r2,r2,-1
    bbfc:	3084703a 	and	r2,r6,r2
    bc00:	4814d0fa 	srli	r10,r9,3
    bc04:	1104b03a 	or	r2,r2,r4
    bc08:	003ed306 	br	b758 <__adddf3+0x328>
    bc0c:	500a977a 	slli	r5,r10,29
    bc10:	5014d0fa 	srli	r10,r10,3
    bc14:	10001626 	beq	r2,zero,bc70 <__adddf3+0x840>
    bc18:	00c80034 	movhi	r3,8192
    bc1c:	18ffffc4 	addi	r3,r3,-1
    bc20:	20c4703a 	and	r2,r4,r3
    bc24:	5100022c 	andhi	r4,r10,8
    bc28:	1144b03a 	or	r2,r2,r5
    bc2c:	203ee526 	beq	r4,zero,b7c4 <__adddf3+0x394>
    bc30:	4808d0fa 	srli	r4,r9,3
    bc34:	2140022c 	andhi	r5,r4,8
    bc38:	283ee21e 	bne	r5,zero,b7c4 <__adddf3+0x394>
    bc3c:	4812977a 	slli	r9,r9,29
    bc40:	30c4703a 	and	r2,r6,r3
    bc44:	3821883a 	mov	r16,r7
    bc48:	1244b03a 	or	r2,r2,r9
    bc4c:	2015883a 	mov	r10,r4
    bc50:	003edc06 	br	b7c4 <__adddf3+0x394>
    bc54:	4804977a 	slli	r2,r9,29
    bc58:	01080034 	movhi	r4,8192
    bc5c:	213fffc4 	addi	r4,r4,-1
    bc60:	310c703a 	and	r6,r6,r4
    bc64:	4814d0fa 	srli	r10,r9,3
    bc68:	1184b03a 	or	r2,r2,r6
    bc6c:	003ebc06 	br	b760 <__adddf3+0x330>
    bc70:	00880034 	movhi	r2,8192
    bc74:	10bfffc4 	addi	r2,r2,-1
    bc78:	2084703a 	and	r2,r4,r2
    bc7c:	1144b03a 	or	r2,r2,r5
    bc80:	003ed006 	br	b7c4 <__adddf3+0x394>
    bc84:	193ff804 	addi	r4,r3,-32
    bc88:	19400820 	cmpeqi	r5,r3,32
    bc8c:	5108d83a 	srl	r4,r10,r4
    bc90:	2800041e 	bne	r5,zero,bca4 <__adddf3+0x874>
    bc94:	01401004 	movi	r5,64
    bc98:	28c7c83a 	sub	r3,r5,r3
    bc9c:	50d4983a 	sll	r10,r10,r3
    bca0:	729cb03a 	or	r14,r14,r10
    bca4:	7022c03a 	cmpne	r17,r14,zero
    bca8:	8922b03a 	or	r17,r17,r4
    bcac:	003eef06 	br	b86c <__adddf3+0x43c>
    bcb0:	7363883a 	add	r17,r14,r13
    bcb4:	5255883a 	add	r10,r10,r9
    bcb8:	8b51803a 	cmpltu	r8,r17,r13
    bcbc:	5211883a 	add	r8,r10,r8
    bcc0:	003f7e06 	br	babc <__adddf3+0x68c>
    bcc4:	4b50b03a 	or	r8,r9,r13
    bcc8:	500a977a 	slli	r5,r10,29
    bccc:	5014d0fa 	srli	r10,r10,3
    bcd0:	403fe726 	beq	r8,zero,bc70 <__adddf3+0x840>
    bcd4:	00c80034 	movhi	r3,8192
    bcd8:	18ffffc4 	addi	r3,r3,-1
    bcdc:	20c4703a 	and	r2,r4,r3
    bce0:	5100022c 	andhi	r4,r10,8
    bce4:	1144b03a 	or	r2,r2,r5
    bce8:	203eb626 	beq	r4,zero,b7c4 <__adddf3+0x394>
    bcec:	4808d0fa 	srli	r4,r9,3
    bcf0:	2140022c 	andhi	r5,r4,8
    bcf4:	283eb31e 	bne	r5,zero,b7c4 <__adddf3+0x394>
    bcf8:	4804977a 	slli	r2,r9,29
    bcfc:	30cc703a 	and	r6,r6,r3
    bd00:	3821883a 	mov	r16,r7
    bd04:	3084b03a 	or	r2,r6,r2
    bd08:	2015883a 	mov	r10,r4
    bd0c:	003ead06 	br	b7c4 <__adddf3+0x394>
    bd10:	8a04b03a 	or	r2,r17,r8
    bd14:	103f1126 	beq	r2,zero,b95c <__adddf3+0x52c>
    bd18:	003e8806 	br	b73c <__adddf3+0x30c>
    bd1c:	0005883a 	mov	r2,zero
    bd20:	00c1ffc4 	movi	r3,2047
    bd24:	0011883a 	mov	r8,zero
    bd28:	003e2a06 	br	b5d4 <__adddf3+0x1a4>

0000bd2c <__divdf3>:
    bd2c:	f811883a 	mov	r8,ra
    bd30:	000e1ac0 	call	e1ac <_mcount>
    bd34:	403f883a 	mov	ra,r8
    bd38:	defff204 	addi	sp,sp,-56
    bd3c:	dfc00d15 	stw	ra,52(sp)
    bd40:	df000c15 	stw	fp,48(sp)
    bd44:	ddc00b15 	stw	r23,44(sp)
    bd48:	dd800a15 	stw	r22,40(sp)
    bd4c:	dd400915 	stw	r21,36(sp)
    bd50:	dd000815 	stw	r20,32(sp)
    bd54:	dcc00715 	stw	r19,28(sp)
    bd58:	dc800615 	stw	r18,24(sp)
    bd5c:	dc400515 	stw	r17,20(sp)
    bd60:	dc000415 	stw	r16,16(sp)
    bd64:	2804d53a 	srli	r2,r5,20
    bd68:	04000434 	movhi	r16,16
    bd6c:	843fffc4 	addi	r16,r16,-1
    bd70:	1081ffcc 	andi	r2,r2,2047
    bd74:	282cd7fa 	srli	r22,r5,31
    bd78:	302f883a 	mov	r23,r6
    bd7c:	2025883a 	mov	r18,r4
    bd80:	2c20703a 	and	r16,r5,r16
    bd84:	10006a26 	beq	r2,zero,bf30 <__divdf3+0x204>
    bd88:	10c1ffe0 	cmpeqi	r3,r2,2047
    bd8c:	18007d1e 	bne	r3,zero,bf84 <__divdf3+0x258>
    bd90:	2028d77a 	srli	r20,r4,29
    bd94:	800a90fa 	slli	r5,r16,3
    bd98:	202490fa 	slli	r18,r4,3
    bd9c:	14ff0044 	addi	r19,r2,-1023
    bda0:	a14ab03a 	or	r5,r20,r5
    bda4:	2d002034 	orhi	r20,r5,128
    bda8:	0021883a 	mov	r16,zero
    bdac:	0039883a 	mov	fp,zero
    bdb0:	3804d53a 	srli	r2,r7,20
    bdb4:	00c00434 	movhi	r3,16
    bdb8:	18ffffc4 	addi	r3,r3,-1
    bdbc:	1081ffcc 	andi	r2,r2,2047
    bdc0:	3810d7fa 	srli	r8,r7,31
    bdc4:	38e2703a 	and	r17,r7,r3
    bdc8:	10004626 	beq	r2,zero,bee4 <__divdf3+0x1b8>
    bdcc:	10c1ffe0 	cmpeqi	r3,r2,2047
    bdd0:	1800731e 	bne	r3,zero,bfa0 <__divdf3+0x274>
    bdd4:	880690fa 	slli	r3,r17,3
    bdd8:	b822d77a 	srli	r17,r23,29
    bddc:	b81290fa 	slli	r9,r23,3
    bde0:	10bf0044 	addi	r2,r2,-1023
    bde4:	88c6b03a 	or	r3,r17,r3
    bde8:	1c402034 	orhi	r17,r3,128
    bdec:	98a7c83a 	sub	r19,r19,r2
    bdf0:	0007883a 	mov	r3,zero
    bdf4:	80800428 	cmpgeui	r2,r16,16
    bdf8:	b22af03a 	xor	r21,r22,r8
    bdfc:	1000ab1e 	bne	r2,zero,c0ac <__divdf3+0x380>
    be00:	800490ba 	slli	r2,r16,2
    be04:	01800074 	movhi	r6,1
    be08:	118d883a 	add	r6,r2,r6
    be0c:	30af8517 	ldw	r2,-16876(r6)
    be10:	1000683a 	jmp	r2
    be14:	0000c0ac 	andhi	zero,zero,770
    be18:	0000bec0 	call	bec <___vfprintf_internal_r+0x3dc>
    be1c:	0000be70 	cmpltui	zero,zero,761
    be20:	0000bed0 	cmplti	zero,zero,763
    be24:	0000be70 	cmpltui	zero,zero,761
    be28:	0000c050 	cmplti	zero,zero,769
    be2c:	0000be70 	cmpltui	zero,zero,761
    be30:	0000bed0 	cmplti	zero,zero,763
    be34:	0000bec0 	call	bec <___vfprintf_internal_r+0x3dc>
    be38:	0000bec0 	call	bec <___vfprintf_internal_r+0x3dc>
    be3c:	0000c050 	cmplti	zero,zero,769
    be40:	0000bed0 	cmplti	zero,zero,763
    be44:	0000be54 	movui	zero,761
    be48:	0000be54 	movui	zero,761
    be4c:	0000be54 	movui	zero,761
    be50:	0000c068 	cmpgeui	zero,zero,769
    be54:	b02b883a 	mov	r21,r22
    be58:	e08000a0 	cmpeqi	r2,fp,2
    be5c:	1000181e 	bne	r2,zero,bec0 <__divdf3+0x194>
    be60:	e08000e0 	cmpeqi	r2,fp,3
    be64:	1001c21e 	bne	r2,zero,c570 <__divdf3+0x844>
    be68:	e0800060 	cmpeqi	r2,fp,1
    be6c:	10006526 	beq	r2,zero,c004 <__divdf3+0x2d8>
    be70:	0007883a 	mov	r3,zero
    be74:	000b883a 	mov	r5,zero
    be78:	0025883a 	mov	r18,zero
    be7c:	1806953a 	slli	r3,r3,20
    be80:	a82a97fa 	slli	r21,r21,31
    be84:	9005883a 	mov	r2,r18
    be88:	1946b03a 	or	r3,r3,r5
    be8c:	1d46b03a 	or	r3,r3,r21
    be90:	dfc00d17 	ldw	ra,52(sp)
    be94:	df000c17 	ldw	fp,48(sp)
    be98:	ddc00b17 	ldw	r23,44(sp)
    be9c:	dd800a17 	ldw	r22,40(sp)
    bea0:	dd400917 	ldw	r21,36(sp)
    bea4:	dd000817 	ldw	r20,32(sp)
    bea8:	dcc00717 	ldw	r19,28(sp)
    beac:	dc800617 	ldw	r18,24(sp)
    beb0:	dc400517 	ldw	r17,20(sp)
    beb4:	dc000417 	ldw	r16,16(sp)
    beb8:	dec00e04 	addi	sp,sp,56
    bebc:	f800283a 	ret
    bec0:	00c1ffc4 	movi	r3,2047
    bec4:	000b883a 	mov	r5,zero
    bec8:	0025883a 	mov	r18,zero
    becc:	003feb06 	br	be7c <__divdf3+0x150>
    bed0:	402b883a 	mov	r21,r8
    bed4:	8829883a 	mov	r20,r17
    bed8:	4825883a 	mov	r18,r9
    bedc:	1839883a 	mov	fp,r3
    bee0:	003fdd06 	br	be58 <__divdf3+0x12c>
    bee4:	8dd2b03a 	or	r9,r17,r23
    bee8:	48004226 	beq	r9,zero,bff4 <__divdf3+0x2c8>
    beec:	da000015 	stw	r8,0(sp)
    bef0:	88013d26 	beq	r17,zero,c3e8 <__divdf3+0x6bc>
    bef4:	8809883a 	mov	r4,r17
    bef8:	000d9940 	call	d994 <__clzsi2>
    befc:	da000017 	ldw	r8,0(sp)
    bf00:	117ffd44 	addi	r5,r2,-11
    bf04:	01000744 	movi	r4,29
    bf08:	127ffe04 	addi	r9,r2,-8
    bf0c:	2149c83a 	sub	r4,r4,r5
    bf10:	8a46983a 	sll	r3,r17,r9
    bf14:	b908d83a 	srl	r4,r23,r4
    bf18:	ba52983a 	sll	r9,r23,r9
    bf1c:	20e2b03a 	or	r17,r4,r3
    bf20:	14c5883a 	add	r2,r2,r19
    bf24:	14c0fcc4 	addi	r19,r2,1011
    bf28:	0007883a 	mov	r3,zero
    bf2c:	003fb106 	br	bdf4 <__divdf3+0xc8>
    bf30:	8128b03a 	or	r20,r16,r4
    bf34:	2023883a 	mov	r17,r4
    bf38:	a0002926 	beq	r20,zero,bfe0 <__divdf3+0x2b4>
    bf3c:	d9c00015 	stw	r7,0(sp)
    bf40:	80013526 	beq	r16,zero,c418 <__divdf3+0x6ec>
    bf44:	8009883a 	mov	r4,r16
    bf48:	000d9940 	call	d994 <__clzsi2>
    bf4c:	d9c00017 	ldw	r7,0(sp)
    bf50:	10fffd44 	addi	r3,r2,-11
    bf54:	05000744 	movi	r20,29
    bf58:	113ffe04 	addi	r4,r2,-8
    bf5c:	a0e9c83a 	sub	r20,r20,r3
    bf60:	810a983a 	sll	r5,r16,r4
    bf64:	8d28d83a 	srl	r20,r17,r20
    bf68:	8924983a 	sll	r18,r17,r4
    bf6c:	a168b03a 	or	r20,r20,r5
    bf70:	04ff0344 	movi	r19,-1011
    bf74:	98a7c83a 	sub	r19,r19,r2
    bf78:	0021883a 	mov	r16,zero
    bf7c:	0039883a 	mov	fp,zero
    bf80:	003f8b06 	br	bdb0 <__divdf3+0x84>
    bf84:	8128b03a 	or	r20,r16,r4
    bf88:	a000101e 	bne	r20,zero,bfcc <__divdf3+0x2a0>
    bf8c:	0025883a 	mov	r18,zero
    bf90:	04000204 	movi	r16,8
    bf94:	04c1ffc4 	movi	r19,2047
    bf98:	07000084 	movi	fp,2
    bf9c:	003f8406 	br	bdb0 <__divdf3+0x84>
    bfa0:	8dd2b03a 	or	r9,r17,r23
    bfa4:	9cfe0044 	addi	r19,r19,-2047
    bfa8:	4800041e 	bne	r9,zero,bfbc <__divdf3+0x290>
    bfac:	84000094 	ori	r16,r16,2
    bfb0:	0023883a 	mov	r17,zero
    bfb4:	00c00084 	movi	r3,2
    bfb8:	003f8e06 	br	bdf4 <__divdf3+0xc8>
    bfbc:	840000d4 	ori	r16,r16,3
    bfc0:	b813883a 	mov	r9,r23
    bfc4:	00c000c4 	movi	r3,3
    bfc8:	003f8a06 	br	bdf4 <__divdf3+0xc8>
    bfcc:	8029883a 	mov	r20,r16
    bfd0:	04c1ffc4 	movi	r19,2047
    bfd4:	04000304 	movi	r16,12
    bfd8:	070000c4 	movi	fp,3
    bfdc:	003f7406 	br	bdb0 <__divdf3+0x84>
    bfe0:	0025883a 	mov	r18,zero
    bfe4:	04000104 	movi	r16,4
    bfe8:	0027883a 	mov	r19,zero
    bfec:	07000044 	movi	fp,1
    bff0:	003f6f06 	br	bdb0 <__divdf3+0x84>
    bff4:	84000054 	ori	r16,r16,1
    bff8:	0023883a 	mov	r17,zero
    bffc:	00c00044 	movi	r3,1
    c000:	003f7c06 	br	bdf4 <__divdf3+0xc8>
    c004:	9c40ffc4 	addi	r17,r19,1023
    c008:	0440c70e 	bge	zero,r17,c328 <__divdf3+0x5fc>
    c00c:	908001cc 	andi	r2,r18,7
    c010:	1001331e 	bne	r2,zero,c4e0 <__divdf3+0x7b4>
    c014:	900cd0fa 	srli	r6,r18,3
    c018:	a080402c 	andhi	r2,r20,256
    c01c:	10000426 	beq	r2,zero,c030 <__divdf3+0x304>
    c020:	00bfc034 	movhi	r2,65280
    c024:	10bfffc4 	addi	r2,r2,-1
    c028:	a0a8703a 	and	r20,r20,r2
    c02c:	9c410004 	addi	r17,r19,1024
    c030:	8881ffc8 	cmpgei	r2,r17,2047
    c034:	103fa21e 	bne	r2,zero,bec0 <__divdf3+0x194>
    c038:	a008977a 	slli	r4,r20,29
    c03c:	a00a927a 	slli	r5,r20,9
    c040:	88c1ffcc 	andi	r3,r17,2047
    c044:	21a4b03a 	or	r18,r4,r6
    c048:	280ad33a 	srli	r5,r5,12
    c04c:	003f8b06 	br	be7c <__divdf3+0x150>
    c050:	01400434 	movhi	r5,16
    c054:	002b883a 	mov	r21,zero
    c058:	297fffc4 	addi	r5,r5,-1
    c05c:	04bfffc4 	movi	r18,-1
    c060:	00c1ffc4 	movi	r3,2047
    c064:	003f8506 	br	be7c <__divdf3+0x150>
    c068:	a080022c 	andhi	r2,r20,8
    c06c:	10000926 	beq	r2,zero,c094 <__divdf3+0x368>
    c070:	8880022c 	andhi	r2,r17,8
    c074:	1000071e 	bne	r2,zero,c094 <__divdf3+0x368>
    c078:	00800434 	movhi	r2,16
    c07c:	89400234 	orhi	r5,r17,8
    c080:	10bfffc4 	addi	r2,r2,-1
    c084:	288a703a 	and	r5,r5,r2
    c088:	402b883a 	mov	r21,r8
    c08c:	4825883a 	mov	r18,r9
    c090:	003ff306 	br	c060 <__divdf3+0x334>
    c094:	00800434 	movhi	r2,16
    c098:	a1400234 	orhi	r5,r20,8
    c09c:	10bfffc4 	addi	r2,r2,-1
    c0a0:	288a703a 	and	r5,r5,r2
    c0a4:	b02b883a 	mov	r21,r22
    c0a8:	003fed06 	br	c060 <__divdf3+0x334>
    c0ac:	8d00c836 	bltu	r17,r20,c3d0 <__divdf3+0x6a4>
    c0b0:	8d00c626 	beq	r17,r20,c3cc <__divdf3+0x6a0>
    c0b4:	9cffffc4 	addi	r19,r19,-1
    c0b8:	0021883a 	mov	r16,zero
    c0bc:	8806923a 	slli	r3,r17,8
    c0c0:	480cd63a 	srli	r6,r9,24
    c0c4:	4804923a 	slli	r2,r9,8
    c0c8:	1838d43a 	srli	fp,r3,16
    c0cc:	a009883a 	mov	r4,r20
    c0d0:	30ecb03a 	or	r22,r6,r3
    c0d4:	e00b883a 	mov	r5,fp
    c0d8:	d8800015 	stw	r2,0(sp)
    c0dc:	000b3580 	call	b358 <__udivsi3>
    c0e0:	a009883a 	mov	r4,r20
    c0e4:	e00b883a 	mov	r5,fp
    c0e8:	d8800115 	stw	r2,4(sp)
    c0ec:	000b3c80 	call	b3c8 <__umodsi3>
    c0f0:	d8c00117 	ldw	r3,4(sp)
    c0f4:	1004943a 	slli	r2,r2,16
    c0f8:	9008d43a 	srli	r4,r18,16
    c0fc:	b5ffffcc 	andi	r23,r22,65535
    c100:	b8e3383a 	mul	r17,r23,r3
    c104:	2088b03a 	or	r4,r4,r2
    c108:	2440042e 	bgeu	r4,r17,c11c <__divdf3+0x3f0>
    c10c:	2589883a 	add	r4,r4,r22
    c110:	18bfffc4 	addi	r2,r3,-1
    c114:	2580d32e 	bgeu	r4,r22,c464 <__divdf3+0x738>
    c118:	1007883a 	mov	r3,r2
    c11c:	2463c83a 	sub	r17,r4,r17
    c120:	e00b883a 	mov	r5,fp
    c124:	8809883a 	mov	r4,r17
    c128:	d8c00115 	stw	r3,4(sp)
    c12c:	000b3580 	call	b358 <__udivsi3>
    c130:	8809883a 	mov	r4,r17
    c134:	e00b883a 	mov	r5,fp
    c138:	1029883a 	mov	r20,r2
    c13c:	000b3c80 	call	b3c8 <__umodsi3>
    c140:	1008943a 	slli	r4,r2,16
    c144:	bd13383a 	mul	r9,r23,r20
    c148:	94bfffcc 	andi	r18,r18,65535
    c14c:	9108b03a 	or	r4,r18,r4
    c150:	d8c00117 	ldw	r3,4(sp)
    c154:	2240042e 	bgeu	r4,r9,c168 <__divdf3+0x43c>
    c158:	2589883a 	add	r4,r4,r22
    c15c:	a0bfffc4 	addi	r2,r20,-1
    c160:	2580bc2e 	bgeu	r4,r22,c454 <__divdf3+0x728>
    c164:	1029883a 	mov	r20,r2
    c168:	180a943a 	slli	r5,r3,16
    c16c:	d8800017 	ldw	r2,0(sp)
    c170:	2249c83a 	sub	r4,r4,r9
    c174:	2d28b03a 	or	r20,r5,r20
    c178:	100ed43a 	srli	r7,r2,16
    c17c:	123fffcc 	andi	r8,r2,65535
    c180:	a00ad43a 	srli	r5,r20,16
    c184:	a0bfffcc 	andi	r2,r20,65535
    c188:	1225383a 	mul	r18,r2,r8
    c18c:	2a15383a 	mul	r10,r5,r8
    c190:	3887383a 	mul	r3,r7,r2
    c194:	9004d43a 	srli	r2,r18,16
    c198:	29cb383a 	mul	r5,r5,r7
    c19c:	1a87883a 	add	r3,r3,r10
    c1a0:	10c5883a 	add	r2,r2,r3
    c1a4:	1280022e 	bgeu	r2,r10,c1b0 <__divdf3+0x484>
    c1a8:	00c00074 	movhi	r3,1
    c1ac:	28cb883a 	add	r5,r5,r3
    c1b0:	1006d43a 	srli	r3,r2,16
    c1b4:	1004943a 	slli	r2,r2,16
    c1b8:	94bfffcc 	andi	r18,r18,65535
    c1bc:	1947883a 	add	r3,r3,r5
    c1c0:	14a5883a 	add	r18,r2,r18
    c1c4:	20c07636 	bltu	r4,r3,c3a0 <__divdf3+0x674>
    c1c8:	20c07426 	beq	r4,r3,c39c <__divdf3+0x670>
    c1cc:	84a5c83a 	sub	r18,r16,r18
    c1d0:	20c9c83a 	sub	r4,r4,r3
    c1d4:	84a1803a 	cmpltu	r16,r16,r18
    c1d8:	2421c83a 	sub	r16,r4,r16
    c1dc:	9c40ffc4 	addi	r17,r19,1023
    c1e0:	b400ba26 	beq	r22,r16,c4cc <__divdf3+0x7a0>
    c1e4:	8009883a 	mov	r4,r16
    c1e8:	e00b883a 	mov	r5,fp
    c1ec:	da000315 	stw	r8,12(sp)
    c1f0:	d9c00215 	stw	r7,8(sp)
    c1f4:	000b3580 	call	b358 <__udivsi3>
    c1f8:	8009883a 	mov	r4,r16
    c1fc:	e00b883a 	mov	r5,fp
    c200:	d8800115 	stw	r2,4(sp)
    c204:	000b3c80 	call	b3c8 <__umodsi3>
    c208:	da400117 	ldw	r9,4(sp)
    c20c:	1004943a 	slli	r2,r2,16
    c210:	9008d43a 	srli	r4,r18,16
    c214:	ba61383a 	mul	r16,r23,r9
    c218:	d9c00217 	ldw	r7,8(sp)
    c21c:	2088b03a 	or	r4,r4,r2
    c220:	da000317 	ldw	r8,12(sp)
    c224:	2400062e 	bgeu	r4,r16,c240 <__divdf3+0x514>
    c228:	2589883a 	add	r4,r4,r22
    c22c:	48bfffc4 	addi	r2,r9,-1
    c230:	2580b536 	bltu	r4,r22,c508 <__divdf3+0x7dc>
    c234:	2400b42e 	bgeu	r4,r16,c508 <__divdf3+0x7dc>
    c238:	4a7fff84 	addi	r9,r9,-2
    c23c:	2589883a 	add	r4,r4,r22
    c240:	2421c83a 	sub	r16,r4,r16
    c244:	8009883a 	mov	r4,r16
    c248:	e00b883a 	mov	r5,fp
    c24c:	da000315 	stw	r8,12(sp)
    c250:	da400215 	stw	r9,8(sp)
    c254:	d9c00115 	stw	r7,4(sp)
    c258:	000b3580 	call	b358 <__udivsi3>
    c25c:	8009883a 	mov	r4,r16
    c260:	e00b883a 	mov	r5,fp
    c264:	1021883a 	mov	r16,r2
    c268:	000b3c80 	call	b3c8 <__umodsi3>
    c26c:	1004943a 	slli	r2,r2,16
    c270:	bc2f383a 	mul	r23,r23,r16
    c274:	90ffffcc 	andi	r3,r18,65535
    c278:	1886b03a 	or	r3,r3,r2
    c27c:	d9c00117 	ldw	r7,4(sp)
    c280:	da400217 	ldw	r9,8(sp)
    c284:	da000317 	ldw	r8,12(sp)
    c288:	1dc0062e 	bgeu	r3,r23,c2a4 <__divdf3+0x578>
    c28c:	1d87883a 	add	r3,r3,r22
    c290:	80bfffc4 	addi	r2,r16,-1
    c294:	1d809a36 	bltu	r3,r22,c500 <__divdf3+0x7d4>
    c298:	1dc0992e 	bgeu	r3,r23,c500 <__divdf3+0x7d4>
    c29c:	843fff84 	addi	r16,r16,-2
    c2a0:	1d87883a 	add	r3,r3,r22
    c2a4:	4808943a 	slli	r4,r9,16
    c2a8:	1defc83a 	sub	r23,r3,r23
    c2ac:	2424b03a 	or	r18,r4,r16
    c2b0:	900ad43a 	srli	r5,r18,16
    c2b4:	90bfffcc 	andi	r2,r18,65535
    c2b8:	4087383a 	mul	r3,r8,r2
    c2bc:	3885383a 	mul	r2,r7,r2
    c2c0:	2a11383a 	mul	r8,r5,r8
    c2c4:	1808d43a 	srli	r4,r3,16
    c2c8:	394f383a 	mul	r7,r7,r5
    c2cc:	1205883a 	add	r2,r2,r8
    c2d0:	2089883a 	add	r4,r4,r2
    c2d4:	2200022e 	bgeu	r4,r8,c2e0 <__divdf3+0x5b4>
    c2d8:	00800074 	movhi	r2,1
    c2dc:	388f883a 	add	r7,r7,r2
    c2e0:	2004d43a 	srli	r2,r4,16
    c2e4:	2008943a 	slli	r4,r4,16
    c2e8:	18ffffcc 	andi	r3,r3,65535
    c2ec:	11cf883a 	add	r7,r2,r7
    c2f0:	20c9883a 	add	r4,r4,r3
    c2f4:	b9c00436 	bltu	r23,r7,c308 <__divdf3+0x5dc>
    c2f8:	b9c00226 	beq	r23,r7,c304 <__divdf3+0x5d8>
    c2fc:	94800054 	ori	r18,r18,1
    c300:	003f4106 	br	c008 <__divdf3+0x2dc>
    c304:	203f4026 	beq	r4,zero,c008 <__divdf3+0x2dc>
    c308:	b5ef883a 	add	r23,r22,r23
    c30c:	90bfffc4 	addi	r2,r18,-1
    c310:	bd806936 	bltu	r23,r22,c4b8 <__divdf3+0x78c>
    c314:	b9c08636 	bltu	r23,r7,c530 <__divdf3+0x804>
    c318:	b9c09a26 	beq	r23,r7,c584 <__divdf3+0x858>
    c31c:	1025883a 	mov	r18,r2
    c320:	003ff606 	br	c2fc <__divdf3+0x5d0>
    c324:	04bfffc4 	movi	r18,-1
    c328:	01400044 	movi	r5,1
    c32c:	2c4bc83a 	sub	r5,r5,r17
    c330:	28800e48 	cmpgei	r2,r5,57
    c334:	103ece1e 	bne	r2,zero,be70 <__divdf3+0x144>
    c338:	28800808 	cmpgei	r2,r5,32
    c33c:	10004d1e 	bne	r2,zero,c474 <__divdf3+0x748>
    c340:	98810784 	addi	r2,r19,1054
    c344:	a086983a 	sll	r3,r20,r2
    c348:	9148d83a 	srl	r4,r18,r5
    c34c:	9084983a 	sll	r2,r18,r2
    c350:	a14ad83a 	srl	r5,r20,r5
    c354:	1924b03a 	or	r18,r3,r4
    c358:	1004c03a 	cmpne	r2,r2,zero
    c35c:	90a4b03a 	or	r18,r18,r2
    c360:	908001cc 	andi	r2,r18,7
    c364:	10000726 	beq	r2,zero,c384 <__divdf3+0x658>
    c368:	908003cc 	andi	r2,r18,15
    c36c:	10800120 	cmpeqi	r2,r2,4
    c370:	1000041e 	bne	r2,zero,c384 <__divdf3+0x658>
    c374:	90800104 	addi	r2,r18,4
    c378:	14a5803a 	cmpltu	r18,r2,r18
    c37c:	2c8b883a 	add	r5,r5,r18
    c380:	1025883a 	mov	r18,r2
    c384:	2880202c 	andhi	r2,r5,128
    c388:	10007526 	beq	r2,zero,c560 <__divdf3+0x834>
    c38c:	00c00044 	movi	r3,1
    c390:	000b883a 	mov	r5,zero
    c394:	0025883a 	mov	r18,zero
    c398:	003eb806 	br	be7c <__divdf3+0x150>
    c39c:	84bf8b2e 	bgeu	r16,r18,c1cc <__divdf3+0x4a0>
    c3a0:	d8800017 	ldw	r2,0(sp)
    c3a4:	80a1883a 	add	r16,r16,r2
    c3a8:	8085803a 	cmpltu	r2,r16,r2
    c3ac:	1585883a 	add	r2,r2,r22
    c3b0:	2089883a 	add	r4,r4,r2
    c3b4:	a0bfffc4 	addi	r2,r20,-1
    c3b8:	b100222e 	bgeu	r22,r4,c444 <__divdf3+0x718>
    c3bc:	20c05536 	bltu	r4,r3,c514 <__divdf3+0x7e8>
    c3c0:	19005326 	beq	r3,r4,c510 <__divdf3+0x7e4>
    c3c4:	1029883a 	mov	r20,r2
    c3c8:	003f8006 	br	c1cc <__divdf3+0x4a0>
    c3cc:	927f3936 	bltu	r18,r9,c0b4 <__divdf3+0x388>
    c3d0:	a00897fa 	slli	r4,r20,31
    c3d4:	9004d07a 	srli	r2,r18,1
    c3d8:	902097fa 	slli	r16,r18,31
    c3dc:	a028d07a 	srli	r20,r20,1
    c3e0:	20a4b03a 	or	r18,r4,r2
    c3e4:	003f3506 	br	c0bc <__divdf3+0x390>
    c3e8:	b809883a 	mov	r4,r23
    c3ec:	000d9940 	call	d994 <__clzsi2>
    c3f0:	11400544 	addi	r5,r2,21
    c3f4:	29000748 	cmpgei	r4,r5,29
    c3f8:	1007883a 	mov	r3,r2
    c3fc:	da000017 	ldw	r8,0(sp)
    c400:	10800804 	addi	r2,r2,32
    c404:	203ebf26 	beq	r4,zero,bf04 <__divdf3+0x1d8>
    c408:	18fffe04 	addi	r3,r3,-8
    c40c:	b8e2983a 	sll	r17,r23,r3
    c410:	0013883a 	mov	r9,zero
    c414:	003ec206 	br	bf20 <__divdf3+0x1f4>
    c418:	000d9940 	call	d994 <__clzsi2>
    c41c:	10c00544 	addi	r3,r2,21
    c420:	19000748 	cmpgei	r4,r3,29
    c424:	100b883a 	mov	r5,r2
    c428:	d9c00017 	ldw	r7,0(sp)
    c42c:	10800804 	addi	r2,r2,32
    c430:	203ec826 	beq	r4,zero,bf54 <__divdf3+0x228>
    c434:	297ffe04 	addi	r5,r5,-8
    c438:	9168983a 	sll	r20,r18,r5
    c43c:	0025883a 	mov	r18,zero
    c440:	003ecb06 	br	bf70 <__divdf3+0x244>
    c444:	b13fdf1e 	bne	r22,r4,c3c4 <__divdf3+0x698>
    c448:	d9400017 	ldw	r5,0(sp)
    c44c:	817fdd36 	bltu	r16,r5,c3c4 <__divdf3+0x698>
    c450:	003fda06 	br	c3bc <__divdf3+0x690>
    c454:	227f432e 	bgeu	r4,r9,c164 <__divdf3+0x438>
    c458:	a53fff84 	addi	r20,r20,-2
    c45c:	2589883a 	add	r4,r4,r22
    c460:	003f4106 	br	c168 <__divdf3+0x43c>
    c464:	247f2c2e 	bgeu	r4,r17,c118 <__divdf3+0x3ec>
    c468:	18ffff84 	addi	r3,r3,-2
    c46c:	2589883a 	add	r4,r4,r22
    c470:	003f2a06 	br	c11c <__divdf3+0x3f0>
    c474:	00fff844 	movi	r3,-31
    c478:	1c47c83a 	sub	r3,r3,r17
    c47c:	29400820 	cmpeqi	r5,r5,32
    c480:	a0c6d83a 	srl	r3,r20,r3
    c484:	2800031e 	bne	r5,zero,c494 <__divdf3+0x768>
    c488:	99410f84 	addi	r5,r19,1086
    c48c:	a14a983a 	sll	r5,r20,r5
    c490:	9164b03a 	or	r18,r18,r5
    c494:	9024c03a 	cmpne	r18,r18,zero
    c498:	90e4b03a 	or	r18,r18,r3
    c49c:	910001cc 	andi	r4,r18,7
    c4a0:	20002b1e 	bne	r4,zero,c550 <__divdf3+0x824>
    c4a4:	000b883a 	mov	r5,zero
    c4a8:	9024d0fa 	srli	r18,r18,3
    c4ac:	0007883a 	mov	r3,zero
    c4b0:	9124b03a 	or	r18,r18,r4
    c4b4:	003e7106 	br	be7c <__divdf3+0x150>
    c4b8:	1025883a 	mov	r18,r2
    c4bc:	b9ff8f1e 	bne	r23,r7,c2fc <__divdf3+0x5d0>
    c4c0:	d8800017 	ldw	r2,0(sp)
    c4c4:	20bf8d1e 	bne	r4,r2,c2fc <__divdf3+0x5d0>
    c4c8:	003ecf06 	br	c008 <__divdf3+0x2dc>
    c4cc:	047f950e 	bge	zero,r17,c324 <__divdf3+0x5f8>
    c4d0:	000d883a 	mov	r6,zero
    c4d4:	01000044 	movi	r4,1
    c4d8:	a129883a 	add	r20,r20,r4
    c4dc:	003ece06 	br	c018 <__divdf3+0x2ec>
    c4e0:	908003cc 	andi	r2,r18,15
    c4e4:	10800118 	cmpnei	r2,r2,4
    c4e8:	103eca26 	beq	r2,zero,c014 <__divdf3+0x2e8>
    c4ec:	91800104 	addi	r6,r18,4
    c4f0:	013ffec4 	movi	r4,-5
    c4f4:	300cd0fa 	srli	r6,r6,3
    c4f8:	2489803a 	cmpltu	r4,r4,r18
    c4fc:	003ff606 	br	c4d8 <__divdf3+0x7ac>
    c500:	1021883a 	mov	r16,r2
    c504:	003f6706 	br	c2a4 <__divdf3+0x578>
    c508:	1013883a 	mov	r9,r2
    c50c:	003f4c06 	br	c240 <__divdf3+0x514>
    c510:	84bfac2e 	bgeu	r16,r18,c3c4 <__divdf3+0x698>
    c514:	d8800017 	ldw	r2,0(sp)
    c518:	a53fff84 	addi	r20,r20,-2
    c51c:	80a1883a 	add	r16,r16,r2
    c520:	8085803a 	cmpltu	r2,r16,r2
    c524:	1585883a 	add	r2,r2,r22
    c528:	2089883a 	add	r4,r4,r2
    c52c:	003f2706 	br	c1cc <__divdf3+0x4a0>
    c530:	d8c00017 	ldw	r3,0(sp)
    c534:	94bfff84 	addi	r18,r18,-2
    c538:	18c5883a 	add	r2,r3,r3
    c53c:	10c7803a 	cmpltu	r3,r2,r3
    c540:	1d8d883a 	add	r6,r3,r22
    c544:	b9af883a 	add	r23,r23,r6
    c548:	d8800015 	stw	r2,0(sp)
    c54c:	003fdb06 	br	c4bc <__divdf3+0x790>
    c550:	908003cc 	andi	r2,r18,15
    c554:	10800118 	cmpnei	r2,r2,4
    c558:	000b883a 	mov	r5,zero
    c55c:	103f851e 	bne	r2,zero,c374 <__divdf3+0x648>
    c560:	2804927a 	slli	r2,r5,9
    c564:	2808977a 	slli	r4,r5,29
    c568:	100ad33a 	srli	r5,r2,12
    c56c:	003fce06 	br	c4a8 <__divdf3+0x77c>
    c570:	00800434 	movhi	r2,16
    c574:	a1400234 	orhi	r5,r20,8
    c578:	10bfffc4 	addi	r2,r2,-1
    c57c:	288a703a 	and	r5,r5,r2
    c580:	003eb706 	br	c060 <__divdf3+0x334>
    c584:	d8c00017 	ldw	r3,0(sp)
    c588:	193fe936 	bltu	r3,r4,c530 <__divdf3+0x804>
    c58c:	1025883a 	mov	r18,r2
    c590:	003fcb06 	br	c4c0 <__divdf3+0x794>

0000c594 <__eqdf2>:
    c594:	f811883a 	mov	r8,ra
    c598:	000e1ac0 	call	e1ac <_mcount>
    c59c:	403f883a 	mov	ra,r8
    c5a0:	2810d53a 	srli	r8,r5,20
    c5a4:	3806d53a 	srli	r3,r7,20
    c5a8:	00800434 	movhi	r2,16
    c5ac:	4201ffcc 	andi	r8,r8,2047
    c5b0:	10bfffc4 	addi	r2,r2,-1
    c5b4:	4241ffd8 	cmpnei	r9,r8,2047
    c5b8:	2814d7fa 	srli	r10,r5,31
    c5bc:	3816d7fa 	srli	r11,r7,31
    c5c0:	288a703a 	and	r5,r5,r2
    c5c4:	388e703a 	and	r7,r7,r2
    c5c8:	1881ffcc 	andi	r2,r3,2047
    c5cc:	48000626 	beq	r9,zero,c5e8 <__eqdf2+0x54>
    c5d0:	10c1ffe0 	cmpeqi	r3,r2,2047
    c5d4:	1800021e 	bne	r3,zero,c5e0 <__eqdf2+0x4c>
    c5d8:	4080011e 	bne	r8,r2,c5e0 <__eqdf2+0x4c>
    c5dc:	29c00826 	beq	r5,r7,c600 <__eqdf2+0x6c>
    c5e0:	00800044 	movi	r2,1
    c5e4:	f800283a 	ret
    c5e8:	2906b03a 	or	r3,r5,r4
    c5ec:	183ffc1e 	bne	r3,zero,c5e0 <__eqdf2+0x4c>
    c5f0:	1081ffd8 	cmpnei	r2,r2,2047
    c5f4:	103ffa1e 	bne	r2,zero,c5e0 <__eqdf2+0x4c>
    c5f8:	398eb03a 	or	r7,r7,r6
    c5fc:	383ff81e 	bne	r7,zero,c5e0 <__eqdf2+0x4c>
    c600:	21bff71e 	bne	r4,r6,c5e0 <__eqdf2+0x4c>
    c604:	52c00426 	beq	r10,r11,c618 <__eqdf2+0x84>
    c608:	403ff51e 	bne	r8,zero,c5e0 <__eqdf2+0x4c>
    c60c:	290ab03a 	or	r5,r5,r4
    c610:	2804c03a 	cmpne	r2,r5,zero
    c614:	003ff306 	br	c5e4 <__eqdf2+0x50>
    c618:	0005883a 	mov	r2,zero
    c61c:	003ff106 	br	c5e4 <__eqdf2+0x50>

0000c620 <__gedf2>:
    c620:	f811883a 	mov	r8,ra
    c624:	000e1ac0 	call	e1ac <_mcount>
    c628:	403f883a 	mov	ra,r8
    c62c:	2810d53a 	srli	r8,r5,20
    c630:	3812d53a 	srli	r9,r7,20
    c634:	00c00434 	movhi	r3,16
    c638:	4201ffcc 	andi	r8,r8,2047
    c63c:	18ffffc4 	addi	r3,r3,-1
    c640:	4281ffd8 	cmpnei	r10,r8,2047
    c644:	2816d7fa 	srli	r11,r5,31
    c648:	3804d7fa 	srli	r2,r7,31
    c64c:	28ca703a 	and	r5,r5,r3
    c650:	38ce703a 	and	r7,r7,r3
    c654:	48c1ffcc 	andi	r3,r9,2047
    c658:	50000a26 	beq	r10,zero,c684 <__gedf2+0x64>
    c65c:	1a41ffd8 	cmpnei	r9,r3,2047
    c660:	48000c26 	beq	r9,zero,c694 <__gedf2+0x74>
    c664:	4000171e 	bne	r8,zero,c6c4 <__gedf2+0xa4>
    c668:	2912b03a 	or	r9,r5,r4
    c66c:	1800121e 	bne	r3,zero,c6b8 <__gedf2+0x98>
    c670:	3994b03a 	or	r10,r7,r6
    c674:	5000101e 	bne	r10,zero,c6b8 <__gedf2+0x98>
    c678:	48000a1e 	bne	r9,zero,c6a4 <__gedf2+0x84>
    c67c:	0005883a 	mov	r2,zero
    c680:	f800283a 	ret
    c684:	2912b03a 	or	r9,r5,r4
    c688:	48001d1e 	bne	r9,zero,c700 <__gedf2+0xe0>
    c68c:	1a41ffe0 	cmpeqi	r9,r3,2047
    c690:	48000c26 	beq	r9,zero,c6c4 <__gedf2+0xa4>
    c694:	3992b03a 	or	r9,r7,r6
    c698:	4800191e 	bne	r9,zero,c700 <__gedf2+0xe0>
    c69c:	40000526 	beq	r8,zero,c6b4 <__gedf2+0x94>
    c6a0:	58800c26 	beq	r11,r2,c6d4 <__gedf2+0xb4>
    c6a4:	00800044 	movi	r2,1
    c6a8:	58000526 	beq	r11,zero,c6c0 <__gedf2+0xa0>
    c6ac:	00bfffc4 	movi	r2,-1
    c6b0:	00000306 	br	c6c0 <__gedf2+0xa0>
    c6b4:	2912b03a 	or	r9,r5,r4
    c6b8:	483ff91e 	bne	r9,zero,c6a0 <__gedf2+0x80>
    c6bc:	103ffb26 	beq	r2,zero,c6ac <__gedf2+0x8c>
    c6c0:	f800283a 	ret
    c6c4:	183ff61e 	bne	r3,zero,c6a0 <__gedf2+0x80>
    c6c8:	3992b03a 	or	r9,r7,r6
    c6cc:	483ff41e 	bne	r9,zero,c6a0 <__gedf2+0x80>
    c6d0:	003ff406 	br	c6a4 <__gedf2+0x84>
    c6d4:	1a000716 	blt	r3,r8,c6f4 <__gedf2+0xd4>
    c6d8:	40fff816 	blt	r8,r3,c6bc <__gedf2+0x9c>
    c6dc:	397ff136 	bltu	r7,r5,c6a4 <__gedf2+0x84>
    c6e0:	29c00926 	beq	r5,r7,c708 <__gedf2+0xe8>
    c6e4:	29ffe52e 	bgeu	r5,r7,c67c <__gedf2+0x5c>
    c6e8:	583ff026 	beq	r11,zero,c6ac <__gedf2+0x8c>
    c6ec:	5805883a 	mov	r2,r11
    c6f0:	003ff306 	br	c6c0 <__gedf2+0xa0>
    c6f4:	103fed1e 	bne	r2,zero,c6ac <__gedf2+0x8c>
    c6f8:	00800044 	movi	r2,1
    c6fc:	003ff006 	br	c6c0 <__gedf2+0xa0>
    c700:	00bfff84 	movi	r2,-2
    c704:	003fee06 	br	c6c0 <__gedf2+0xa0>
    c708:	313fe636 	bltu	r6,r4,c6a4 <__gedf2+0x84>
    c70c:	21bfdb2e 	bgeu	r4,r6,c67c <__gedf2+0x5c>
    c710:	003ff506 	br	c6e8 <__gedf2+0xc8>

0000c714 <__ledf2>:
    c714:	f811883a 	mov	r8,ra
    c718:	000e1ac0 	call	e1ac <_mcount>
    c71c:	403f883a 	mov	ra,r8
    c720:	2810d53a 	srli	r8,r5,20
    c724:	3812d53a 	srli	r9,r7,20
    c728:	00c00434 	movhi	r3,16
    c72c:	4201ffcc 	andi	r8,r8,2047
    c730:	18ffffc4 	addi	r3,r3,-1
    c734:	4281ffd8 	cmpnei	r10,r8,2047
    c738:	2816d7fa 	srli	r11,r5,31
    c73c:	3804d7fa 	srli	r2,r7,31
    c740:	28ca703a 	and	r5,r5,r3
    c744:	38ce703a 	and	r7,r7,r3
    c748:	48c1ffcc 	andi	r3,r9,2047
    c74c:	50000a26 	beq	r10,zero,c778 <__ledf2+0x64>
    c750:	1a41ffd8 	cmpnei	r9,r3,2047
    c754:	48000c26 	beq	r9,zero,c788 <__ledf2+0x74>
    c758:	4000191e 	bne	r8,zero,c7c0 <__ledf2+0xac>
    c75c:	2912b03a 	or	r9,r5,r4
    c760:	18000d1e 	bne	r3,zero,c798 <__ledf2+0x84>
    c764:	3994b03a 	or	r10,r7,r6
    c768:	50000b1e 	bne	r10,zero,c798 <__ledf2+0x84>
    c76c:	48000c1e 	bne	r9,zero,c7a0 <__ledf2+0x8c>
    c770:	0005883a 	mov	r2,zero
    c774:	00000f06 	br	c7b4 <__ledf2+0xa0>
    c778:	2912b03a 	or	r9,r5,r4
    c77c:	48000c1e 	bne	r9,zero,c7b0 <__ledf2+0x9c>
    c780:	1a41ffe0 	cmpeqi	r9,r3,2047
    c784:	48000e26 	beq	r9,zero,c7c0 <__ledf2+0xac>
    c788:	3992b03a 	or	r9,r7,r6
    c78c:	4800081e 	bne	r9,zero,c7b0 <__ledf2+0x9c>
    c790:	4000021e 	bne	r8,zero,c79c <__ledf2+0x88>
    c794:	2912b03a 	or	r9,r5,r4
    c798:	48000726 	beq	r9,zero,c7b8 <__ledf2+0xa4>
    c79c:	58800c26 	beq	r11,r2,c7d0 <__ledf2+0xbc>
    c7a0:	00800044 	movi	r2,1
    c7a4:	58000326 	beq	r11,zero,c7b4 <__ledf2+0xa0>
    c7a8:	00bfffc4 	movi	r2,-1
    c7ac:	00000106 	br	c7b4 <__ledf2+0xa0>
    c7b0:	00800084 	movi	r2,2
    c7b4:	f800283a 	ret
    c7b8:	103ffb26 	beq	r2,zero,c7a8 <__ledf2+0x94>
    c7bc:	f800283a 	ret
    c7c0:	183ff61e 	bne	r3,zero,c79c <__ledf2+0x88>
    c7c4:	3992b03a 	or	r9,r7,r6
    c7c8:	483ff41e 	bne	r9,zero,c79c <__ledf2+0x88>
    c7cc:	003ff406 	br	c7a0 <__ledf2+0x8c>
    c7d0:	1a00030e 	bge	r3,r8,c7e0 <__ledf2+0xcc>
    c7d4:	103ff41e 	bne	r2,zero,c7a8 <__ledf2+0x94>
    c7d8:	00800044 	movi	r2,1
    c7dc:	003ff506 	br	c7b4 <__ledf2+0xa0>
    c7e0:	40fff516 	blt	r8,r3,c7b8 <__ledf2+0xa4>
    c7e4:	397fee36 	bltu	r7,r5,c7a0 <__ledf2+0x8c>
    c7e8:	29c00426 	beq	r5,r7,c7fc <__ledf2+0xe8>
    c7ec:	29ffe02e 	bgeu	r5,r7,c770 <__ledf2+0x5c>
    c7f0:	583fed26 	beq	r11,zero,c7a8 <__ledf2+0x94>
    c7f4:	5805883a 	mov	r2,r11
    c7f8:	003fee06 	br	c7b4 <__ledf2+0xa0>
    c7fc:	313fe836 	bltu	r6,r4,c7a0 <__ledf2+0x8c>
    c800:	21bfdb2e 	bgeu	r4,r6,c770 <__ledf2+0x5c>
    c804:	003ffa06 	br	c7f0 <__ledf2+0xdc>

0000c808 <__muldf3>:
    c808:	f811883a 	mov	r8,ra
    c80c:	000e1ac0 	call	e1ac <_mcount>
    c810:	403f883a 	mov	ra,r8
    c814:	defff504 	addi	sp,sp,-44
    c818:	dfc00a15 	stw	ra,40(sp)
    c81c:	df000915 	stw	fp,36(sp)
    c820:	ddc00815 	stw	r23,32(sp)
    c824:	dd800715 	stw	r22,28(sp)
    c828:	dd400615 	stw	r21,24(sp)
    c82c:	dd000515 	stw	r20,20(sp)
    c830:	dcc00415 	stw	r19,16(sp)
    c834:	dc800315 	stw	r18,12(sp)
    c838:	dc400215 	stw	r17,8(sp)
    c83c:	dc000115 	stw	r16,4(sp)
    c840:	2804d53a 	srli	r2,r5,20
    c844:	02000434 	movhi	r8,16
    c848:	423fffc4 	addi	r8,r8,-1
    c84c:	1081ffcc 	andi	r2,r2,2047
    c850:	2828d7fa 	srli	r20,r5,31
    c854:	2027883a 	mov	r19,r4
    c858:	3039883a 	mov	fp,r6
    c85c:	2a20703a 	and	r16,r5,r8
    c860:	1000e726 	beq	r2,zero,cc00 <__muldf3+0x3f8>
    c864:	10c1ffe0 	cmpeqi	r3,r2,2047
    c868:	1800f91e 	bne	r3,zero,cc50 <__muldf3+0x448>
    c86c:	800a90fa 	slli	r5,r16,3
    c870:	2020d77a 	srli	r16,r4,29
    c874:	202490fa 	slli	r18,r4,3
    c878:	14ff0044 	addi	r19,r2,-1023
    c87c:	8160b03a 	or	r16,r16,r5
    c880:	84002034 	orhi	r16,r16,128
    c884:	002b883a 	mov	r21,zero
    c888:	002d883a 	mov	r22,zero
    c88c:	3804d53a 	srli	r2,r7,20
    c890:	00c00434 	movhi	r3,16
    c894:	18ffffc4 	addi	r3,r3,-1
    c898:	1081ffcc 	andi	r2,r2,2047
    c89c:	382ed7fa 	srli	r23,r7,31
    c8a0:	38e2703a 	and	r17,r7,r3
    c8a4:	1000c526 	beq	r2,zero,cbbc <__muldf3+0x3b4>
    c8a8:	10c1ffe0 	cmpeqi	r3,r2,2047
    c8ac:	1800ef1e 	bne	r3,zero,cc6c <__muldf3+0x464>
    c8b0:	880690fa 	slli	r3,r17,3
    c8b4:	e022d77a 	srli	r17,fp,29
    c8b8:	e00a90fa 	slli	r5,fp,3
    c8bc:	10bf0044 	addi	r2,r2,-1023
    c8c0:	88e2b03a 	or	r17,r17,r3
    c8c4:	8c402034 	orhi	r17,r17,128
    c8c8:	98a7883a 	add	r19,r19,r2
    c8cc:	0007883a 	mov	r3,zero
    c8d0:	a8800428 	cmpgeui	r2,r21,16
    c8d4:	a5ccf03a 	xor	r6,r20,r23
    c8d8:	9a000044 	addi	r8,r19,1
    c8dc:	1000371e 	bne	r2,zero,c9bc <__muldf3+0x1b4>
    c8e0:	a80490ba 	slli	r2,r21,2
    c8e4:	01000074 	movhi	r4,1
    c8e8:	1109883a 	add	r4,r2,r4
    c8ec:	20b23d17 	ldw	r2,-14092(r4)
    c8f0:	1000683a 	jmp	r2
    c8f4:	0000c9bc 	xorhi	zero,zero,806
    c8f8:	0000c938 	rdprs	zero,zero,804
    c8fc:	0000c938 	rdprs	zero,zero,804
    c900:	0000c934 	movhi	zero,804
    c904:	0000c944 	movi	zero,805
    c908:	0000c944 	movi	zero,805
    c90c:	0000cce0 	cmpeqi	zero,zero,819
    c910:	0000c934 	movhi	zero,804
    c914:	0000c944 	movi	zero,805
    c918:	0000cce0 	cmpeqi	zero,zero,819
    c91c:	0000c944 	movi	zero,805
    c920:	0000c934 	movhi	zero,804
    c924:	0000cc88 	cmpgei	zero,zero,818
    c928:	0000cc88 	cmpgei	zero,zero,818
    c92c:	0000cc88 	cmpgei	zero,zero,818
    c930:	0000cd6c 	andhi	zero,zero,821
    c934:	b80d883a 	mov	r6,r23
    c938:	8821883a 	mov	r16,r17
    c93c:	2825883a 	mov	r18,r5
    c940:	182d883a 	mov	r22,r3
    c944:	b08000a0 	cmpeqi	r2,r22,2
    c948:	1000181e 	bne	r2,zero,c9ac <__muldf3+0x1a4>
    c94c:	b08000e0 	cmpeqi	r2,r22,3
    c950:	1001481e 	bne	r2,zero,ce74 <__muldf3+0x66c>
    c954:	b0800060 	cmpeqi	r2,r22,1
    c958:	10007e26 	beq	r2,zero,cb54 <__muldf3+0x34c>
    c95c:	0007883a 	mov	r3,zero
    c960:	0021883a 	mov	r16,zero
    c964:	0025883a 	mov	r18,zero
    c968:	1806953a 	slli	r3,r3,20
    c96c:	300c97fa 	slli	r6,r6,31
    c970:	9005883a 	mov	r2,r18
    c974:	1c06b03a 	or	r3,r3,r16
    c978:	1986b03a 	or	r3,r3,r6
    c97c:	dfc00a17 	ldw	ra,40(sp)
    c980:	df000917 	ldw	fp,36(sp)
    c984:	ddc00817 	ldw	r23,32(sp)
    c988:	dd800717 	ldw	r22,28(sp)
    c98c:	dd400617 	ldw	r21,24(sp)
    c990:	dd000517 	ldw	r20,20(sp)
    c994:	dcc00417 	ldw	r19,16(sp)
    c998:	dc800317 	ldw	r18,12(sp)
    c99c:	dc400217 	ldw	r17,8(sp)
    c9a0:	dc000117 	ldw	r16,4(sp)
    c9a4:	dec00b04 	addi	sp,sp,44
    c9a8:	f800283a 	ret
    c9ac:	00c1ffc4 	movi	r3,2047
    c9b0:	0021883a 	mov	r16,zero
    c9b4:	0025883a 	mov	r18,zero
    c9b8:	003feb06 	br	c968 <__muldf3+0x160>
    c9bc:	9004d43a 	srli	r2,r18,16
    c9c0:	281ed43a 	srli	r15,r5,16
    c9c4:	94bfffcc 	andi	r18,r18,65535
    c9c8:	297fffcc 	andi	r5,r5,65535
    c9cc:	2c89383a 	mul	r4,r5,r18
    c9d0:	114f383a 	mul	r7,r2,r5
    c9d4:	7c87383a 	mul	r3,r15,r18
    c9d8:	2012d43a 	srli	r9,r4,16
    c9dc:	13dd383a 	mul	r14,r2,r15
    c9e0:	19c7883a 	add	r3,r3,r7
    c9e4:	48d3883a 	add	r9,r9,r3
    c9e8:	49c0022e 	bgeu	r9,r7,c9f4 <__muldf3+0x1ec>
    c9ec:	00c00074 	movhi	r3,1
    c9f0:	70dd883a 	add	r14,r14,r3
    c9f4:	881ad43a 	srli	r13,r17,16
    c9f8:	8c7fffcc 	andi	r17,r17,65535
    c9fc:	8c87383a 	mul	r3,r17,r18
    ca00:	144f383a 	mul	r7,r2,r17
    ca04:	6ca5383a 	mul	r18,r13,r18
    ca08:	1816d43a 	srli	r11,r3,16
    ca0c:	4814943a 	slli	r10,r9,16
    ca10:	91e5883a 	add	r18,r18,r7
    ca14:	213fffcc 	andi	r4,r4,65535
    ca18:	5c97883a 	add	r11,r11,r18
    ca1c:	4818d43a 	srli	r12,r9,16
    ca20:	1345383a 	mul	r2,r2,r13
    ca24:	5115883a 	add	r10,r10,r4
    ca28:	59c0022e 	bgeu	r11,r7,ca34 <__muldf3+0x22c>
    ca2c:	01000074 	movhi	r4,1
    ca30:	1105883a 	add	r2,r2,r4
    ca34:	8028d43a 	srli	r20,r16,16
    ca38:	827fffcc 	andi	r9,r16,65535
    ca3c:	2a6b383a 	mul	r21,r5,r9
    ca40:	7a49383a 	mul	r4,r15,r9
    ca44:	a14b383a 	mul	r5,r20,r5
    ca48:	580e943a 	slli	r7,r11,16
    ca4c:	a82cd43a 	srli	r22,r21,16
    ca50:	5824d43a 	srli	r18,r11,16
    ca54:	18ffffcc 	andi	r3,r3,65535
    ca58:	2149883a 	add	r4,r4,r5
    ca5c:	38cf883a 	add	r7,r7,r3
    ca60:	b109883a 	add	r4,r22,r4
    ca64:	7d1f383a 	mul	r15,r15,r20
    ca68:	9097883a 	add	r11,r18,r2
    ca6c:	61c7883a 	add	r3,r12,r7
    ca70:	2140022e 	bgeu	r4,r5,ca7c <__muldf3+0x274>
    ca74:	00800074 	movhi	r2,1
    ca78:	789f883a 	add	r15,r15,r2
    ca7c:	8a65383a 	mul	r18,r17,r9
    ca80:	6a53383a 	mul	r9,r13,r9
    ca84:	a463383a 	mul	r17,r20,r17
    ca88:	9020d43a 	srli	r16,r18,16
    ca8c:	200ad43a 	srli	r5,r4,16
    ca90:	2008943a 	slli	r4,r4,16
    ca94:	4c53883a 	add	r9,r9,r17
    ca98:	ab3fffcc 	andi	r12,r21,65535
    ca9c:	8253883a 	add	r9,r16,r9
    caa0:	6d1b383a 	mul	r13,r13,r20
    caa4:	2bdf883a 	add	r15,r5,r15
    caa8:	2309883a 	add	r4,r4,r12
    caac:	4c40022e 	bgeu	r9,r17,cab8 <__muldf3+0x2b0>
    cab0:	00800074 	movhi	r2,1
    cab4:	689b883a 	add	r13,r13,r2
    cab8:	4804943a 	slli	r2,r9,16
    cabc:	917fffcc 	andi	r5,r18,65535
    cac0:	1b87883a 	add	r3,r3,r14
    cac4:	1145883a 	add	r2,r2,r5
    cac8:	19cf803a 	cmpltu	r7,r3,r7
    cacc:	12c5883a 	add	r2,r2,r11
    cad0:	1907883a 	add	r3,r3,r4
    cad4:	11dd883a 	add	r14,r2,r7
    cad8:	1909803a 	cmpltu	r4,r3,r4
    cadc:	73cb883a 	add	r5,r14,r15
    cae0:	4812d43a 	srli	r9,r9,16
    cae4:	2919883a 	add	r12,r5,r4
    cae8:	12c5803a 	cmpltu	r2,r2,r11
    caec:	71e1803a 	cmpltu	r16,r14,r7
    caf0:	1420b03a 	or	r16,r2,r16
    caf4:	2bcb803a 	cmpltu	r5,r5,r15
    caf8:	6109803a 	cmpltu	r4,r12,r4
    cafc:	2908b03a 	or	r4,r5,r4
    cb00:	8261883a 	add	r16,r16,r9
    cb04:	1824927a 	slli	r18,r3,9
    cb08:	8121883a 	add	r16,r16,r4
    cb0c:	8361883a 	add	r16,r16,r13
    cb10:	8020927a 	slli	r16,r16,9
    cb14:	1806d5fa 	srli	r3,r3,23
    cb18:	600ad5fa 	srli	r5,r12,23
    cb1c:	6004927a 	slli	r2,r12,9
    cb20:	92a4b03a 	or	r18,r18,r10
    cb24:	9024c03a 	cmpne	r18,r18,zero
    cb28:	90e4b03a 	or	r18,r18,r3
    cb2c:	80c0402c 	andhi	r3,r16,256
    cb30:	90a4b03a 	or	r18,r18,r2
    cb34:	8160b03a 	or	r16,r16,r5
    cb38:	1800b326 	beq	r3,zero,ce08 <__muldf3+0x600>
    cb3c:	9006d07a 	srli	r3,r18,1
    cb40:	800497fa 	slli	r2,r16,31
    cb44:	9480004c 	andi	r18,r18,1
    cb48:	8020d07a 	srli	r16,r16,1
    cb4c:	1c86b03a 	or	r3,r3,r18
    cb50:	18a4b03a 	or	r18,r3,r2
    cb54:	4100ffc4 	addi	r4,r8,1023
    cb58:	0100670e 	bge	zero,r4,ccf8 <__muldf3+0x4f0>
    cb5c:	908001cc 	andi	r2,r18,7
    cb60:	10000726 	beq	r2,zero,cb80 <__muldf3+0x378>
    cb64:	908003cc 	andi	r2,r18,15
    cb68:	10800120 	cmpeqi	r2,r2,4
    cb6c:	1000041e 	bne	r2,zero,cb80 <__muldf3+0x378>
    cb70:	90800104 	addi	r2,r18,4
    cb74:	14a5803a 	cmpltu	r18,r2,r18
    cb78:	84a1883a 	add	r16,r16,r18
    cb7c:	1025883a 	mov	r18,r2
    cb80:	8080402c 	andhi	r2,r16,256
    cb84:	10000426 	beq	r2,zero,cb98 <__muldf3+0x390>
    cb88:	00bfc034 	movhi	r2,65280
    cb8c:	10bfffc4 	addi	r2,r2,-1
    cb90:	80a0703a 	and	r16,r16,r2
    cb94:	41010004 	addi	r4,r8,1024
    cb98:	2081ffc8 	cmpgei	r2,r4,2047
    cb9c:	103f831e 	bne	r2,zero,c9ac <__muldf3+0x1a4>
    cba0:	8004977a 	slli	r2,r16,29
    cba4:	9024d0fa 	srli	r18,r18,3
    cba8:	8020927a 	slli	r16,r16,9
    cbac:	20c1ffcc 	andi	r3,r4,2047
    cbb0:	14a4b03a 	or	r18,r2,r18
    cbb4:	8020d33a 	srli	r16,r16,12
    cbb8:	003f6b06 	br	c968 <__muldf3+0x160>
    cbbc:	8f0ab03a 	or	r5,r17,fp
    cbc0:	28004326 	beq	r5,zero,ccd0 <__muldf3+0x4c8>
    cbc4:	88008526 	beq	r17,zero,cddc <__muldf3+0x5d4>
    cbc8:	8809883a 	mov	r4,r17
    cbcc:	000d9940 	call	d994 <__clzsi2>
    cbd0:	11bffd44 	addi	r6,r2,-11
    cbd4:	01000744 	movi	r4,29
    cbd8:	117ffe04 	addi	r5,r2,-8
    cbdc:	2189c83a 	sub	r4,r4,r6
    cbe0:	8962983a 	sll	r17,r17,r5
    cbe4:	e108d83a 	srl	r4,fp,r4
    cbe8:	e14a983a 	sll	r5,fp,r5
    cbec:	2462b03a 	or	r17,r4,r17
    cbf0:	9885c83a 	sub	r2,r19,r2
    cbf4:	14ff0344 	addi	r19,r2,-1011
    cbf8:	0007883a 	mov	r3,zero
    cbfc:	003f3406 	br	c8d0 <__muldf3+0xc8>
    cc00:	8124b03a 	or	r18,r16,r4
    cc04:	90002d26 	beq	r18,zero,ccbc <__muldf3+0x4b4>
    cc08:	d9c00015 	stw	r7,0(sp)
    cc0c:	80006826 	beq	r16,zero,cdb0 <__muldf3+0x5a8>
    cc10:	8009883a 	mov	r4,r16
    cc14:	000d9940 	call	d994 <__clzsi2>
    cc18:	d9c00017 	ldw	r7,0(sp)
    cc1c:	113ffd44 	addi	r4,r2,-11
    cc20:	00c00744 	movi	r3,29
    cc24:	14bffe04 	addi	r18,r2,-8
    cc28:	1907c83a 	sub	r3,r3,r4
    cc2c:	84a0983a 	sll	r16,r16,r18
    cc30:	98c6d83a 	srl	r3,r19,r3
    cc34:	9ca4983a 	sll	r18,r19,r18
    cc38:	1c20b03a 	or	r16,r3,r16
    cc3c:	04ff0344 	movi	r19,-1011
    cc40:	98a7c83a 	sub	r19,r19,r2
    cc44:	002b883a 	mov	r21,zero
    cc48:	002d883a 	mov	r22,zero
    cc4c:	003f0f06 	br	c88c <__muldf3+0x84>
    cc50:	8124b03a 	or	r18,r16,r4
    cc54:	9000141e 	bne	r18,zero,cca8 <__muldf3+0x4a0>
    cc58:	0021883a 	mov	r16,zero
    cc5c:	05400204 	movi	r21,8
    cc60:	04c1ffc4 	movi	r19,2047
    cc64:	05800084 	movi	r22,2
    cc68:	003f0806 	br	c88c <__muldf3+0x84>
    cc6c:	8f0ab03a 	or	r5,r17,fp
    cc70:	9cc1ffc4 	addi	r19,r19,2047
    cc74:	2800081e 	bne	r5,zero,cc98 <__muldf3+0x490>
    cc78:	ad400094 	ori	r21,r21,2
    cc7c:	0023883a 	mov	r17,zero
    cc80:	00c00084 	movi	r3,2
    cc84:	003f1206 	br	c8d0 <__muldf3+0xc8>
    cc88:	b08000a0 	cmpeqi	r2,r22,2
    cc8c:	a00d883a 	mov	r6,r20
    cc90:	103f2e26 	beq	r2,zero,c94c <__muldf3+0x144>
    cc94:	003f4506 	br	c9ac <__muldf3+0x1a4>
    cc98:	ad4000d4 	ori	r21,r21,3
    cc9c:	e00b883a 	mov	r5,fp
    cca0:	00c000c4 	movi	r3,3
    cca4:	003f0a06 	br	c8d0 <__muldf3+0xc8>
    cca8:	2025883a 	mov	r18,r4
    ccac:	05400304 	movi	r21,12
    ccb0:	04c1ffc4 	movi	r19,2047
    ccb4:	058000c4 	movi	r22,3
    ccb8:	003ef406 	br	c88c <__muldf3+0x84>
    ccbc:	0021883a 	mov	r16,zero
    ccc0:	05400104 	movi	r21,4
    ccc4:	0027883a 	mov	r19,zero
    ccc8:	05800044 	movi	r22,1
    cccc:	003eef06 	br	c88c <__muldf3+0x84>
    ccd0:	ad400054 	ori	r21,r21,1
    ccd4:	0023883a 	mov	r17,zero
    ccd8:	00c00044 	movi	r3,1
    ccdc:	003efc06 	br	c8d0 <__muldf3+0xc8>
    cce0:	04000434 	movhi	r16,16
    cce4:	000d883a 	mov	r6,zero
    cce8:	843fffc4 	addi	r16,r16,-1
    ccec:	04bfffc4 	movi	r18,-1
    ccf0:	00c1ffc4 	movi	r3,2047
    ccf4:	003f1c06 	br	c968 <__muldf3+0x160>
    ccf8:	00800044 	movi	r2,1
    ccfc:	1105c83a 	sub	r2,r2,r4
    cd00:	10c00e48 	cmpgei	r3,r2,57
    cd04:	183f151e 	bne	r3,zero,c95c <__muldf3+0x154>
    cd08:	10c00808 	cmpgei	r3,r2,32
    cd0c:	1800401e 	bne	r3,zero,ce10 <__muldf3+0x608>
    cd10:	42010784 	addi	r8,r8,1054
    cd14:	8206983a 	sll	r3,r16,r8
    cd18:	9088d83a 	srl	r4,r18,r2
    cd1c:	9210983a 	sll	r8,r18,r8
    cd20:	80a0d83a 	srl	r16,r16,r2
    cd24:	1904b03a 	or	r2,r3,r4
    cd28:	4024c03a 	cmpne	r18,r8,zero
    cd2c:	1484b03a 	or	r2,r2,r18
    cd30:	10c001cc 	andi	r3,r2,7
    cd34:	18000726 	beq	r3,zero,cd54 <__muldf3+0x54c>
    cd38:	10c003cc 	andi	r3,r2,15
    cd3c:	18c00120 	cmpeqi	r3,r3,4
    cd40:	1800041e 	bne	r3,zero,cd54 <__muldf3+0x54c>
    cd44:	10c00104 	addi	r3,r2,4
    cd48:	1885803a 	cmpltu	r2,r3,r2
    cd4c:	80a1883a 	add	r16,r16,r2
    cd50:	1805883a 	mov	r2,r3
    cd54:	80c0202c 	andhi	r3,r16,128
    cd58:	18004226 	beq	r3,zero,ce64 <__muldf3+0x65c>
    cd5c:	00c00044 	movi	r3,1
    cd60:	0021883a 	mov	r16,zero
    cd64:	0025883a 	mov	r18,zero
    cd68:	003eff06 	br	c968 <__muldf3+0x160>
    cd6c:	8080022c 	andhi	r2,r16,8
    cd70:	10000926 	beq	r2,zero,cd98 <__muldf3+0x590>
    cd74:	8880022c 	andhi	r2,r17,8
    cd78:	1000071e 	bne	r2,zero,cd98 <__muldf3+0x590>
    cd7c:	00800434 	movhi	r2,16
    cd80:	8c000234 	orhi	r16,r17,8
    cd84:	10bfffc4 	addi	r2,r2,-1
    cd88:	80a0703a 	and	r16,r16,r2
    cd8c:	b80d883a 	mov	r6,r23
    cd90:	2825883a 	mov	r18,r5
    cd94:	003fd606 	br	ccf0 <__muldf3+0x4e8>
    cd98:	00800434 	movhi	r2,16
    cd9c:	84000234 	orhi	r16,r16,8
    cda0:	10bfffc4 	addi	r2,r2,-1
    cda4:	80a0703a 	and	r16,r16,r2
    cda8:	a00d883a 	mov	r6,r20
    cdac:	003fd006 	br	ccf0 <__muldf3+0x4e8>
    cdb0:	000d9940 	call	d994 <__clzsi2>
    cdb4:	11000544 	addi	r4,r2,21
    cdb8:	21400748 	cmpgei	r5,r4,29
    cdbc:	1007883a 	mov	r3,r2
    cdc0:	d9c00017 	ldw	r7,0(sp)
    cdc4:	10800804 	addi	r2,r2,32
    cdc8:	283f9526 	beq	r5,zero,cc20 <__muldf3+0x418>
    cdcc:	18fffe04 	addi	r3,r3,-8
    cdd0:	98e0983a 	sll	r16,r19,r3
    cdd4:	0025883a 	mov	r18,zero
    cdd8:	003f9806 	br	cc3c <__muldf3+0x434>
    cddc:	e009883a 	mov	r4,fp
    cde0:	000d9940 	call	d994 <__clzsi2>
    cde4:	11800544 	addi	r6,r2,21
    cde8:	31000748 	cmpgei	r4,r6,29
    cdec:	1007883a 	mov	r3,r2
    cdf0:	10800804 	addi	r2,r2,32
    cdf4:	203f7726 	beq	r4,zero,cbd4 <__muldf3+0x3cc>
    cdf8:	1c7ffe04 	addi	r17,r3,-8
    cdfc:	e462983a 	sll	r17,fp,r17
    ce00:	000b883a 	mov	r5,zero
    ce04:	003f7a06 	br	cbf0 <__muldf3+0x3e8>
    ce08:	9811883a 	mov	r8,r19
    ce0c:	003f5106 	br	cb54 <__muldf3+0x34c>
    ce10:	00fff844 	movi	r3,-31
    ce14:	1907c83a 	sub	r3,r3,r4
    ce18:	10800820 	cmpeqi	r2,r2,32
    ce1c:	80c6d83a 	srl	r3,r16,r3
    ce20:	1000031e 	bne	r2,zero,ce30 <__muldf3+0x628>
    ce24:	42010f84 	addi	r8,r8,1086
    ce28:	8220983a 	sll	r16,r16,r8
    ce2c:	9424b03a 	or	r18,r18,r16
    ce30:	9024c03a 	cmpne	r18,r18,zero
    ce34:	90c4b03a 	or	r2,r18,r3
    ce38:	148001cc 	andi	r18,r2,7
    ce3c:	9000051e 	bne	r18,zero,ce54 <__muldf3+0x64c>
    ce40:	0021883a 	mov	r16,zero
    ce44:	1004d0fa 	srli	r2,r2,3
    ce48:	0007883a 	mov	r3,zero
    ce4c:	14a4b03a 	or	r18,r2,r18
    ce50:	003ec506 	br	c968 <__muldf3+0x160>
    ce54:	10c003cc 	andi	r3,r2,15
    ce58:	18c00118 	cmpnei	r3,r3,4
    ce5c:	0021883a 	mov	r16,zero
    ce60:	183fb81e 	bne	r3,zero,cd44 <__muldf3+0x53c>
    ce64:	8006927a 	slli	r3,r16,9
    ce68:	8024977a 	slli	r18,r16,29
    ce6c:	1820d33a 	srli	r16,r3,12
    ce70:	003ff406 	br	ce44 <__muldf3+0x63c>
    ce74:	00800434 	movhi	r2,16
    ce78:	84000234 	orhi	r16,r16,8
    ce7c:	10bfffc4 	addi	r2,r2,-1
    ce80:	80a0703a 	and	r16,r16,r2
    ce84:	003f9a06 	br	ccf0 <__muldf3+0x4e8>

0000ce88 <__subdf3>:
    ce88:	f811883a 	mov	r8,ra
    ce8c:	000e1ac0 	call	e1ac <_mcount>
    ce90:	403f883a 	mov	ra,r8
    ce94:	defffb04 	addi	sp,sp,-20
    ce98:	dfc00415 	stw	ra,16(sp)
    ce9c:	dcc00315 	stw	r19,12(sp)
    cea0:	dc800215 	stw	r18,8(sp)
    cea4:	dc400115 	stw	r17,4(sp)
    cea8:	dc000015 	stw	r16,0(sp)
    ceac:	00800434 	movhi	r2,16
    ceb0:	3810d53a 	srli	r8,r7,20
    ceb4:	10bfffc4 	addi	r2,r2,-1
    ceb8:	2806d53a 	srli	r3,r5,20
    cebc:	2892703a 	and	r9,r5,r2
    cec0:	3884703a 	and	r2,r7,r2
    cec4:	280ad7fa 	srli	r5,r5,31
    cec8:	481290fa 	slli	r9,r9,3
    cecc:	2018d77a 	srli	r12,r4,29
    ced0:	100490fa 	slli	r2,r2,3
    ced4:	3016d77a 	srli	r11,r6,29
    ced8:	4201ffcc 	andi	r8,r8,2047
    cedc:	1c81ffcc 	andi	r18,r3,2047
    cee0:	4281ffd8 	cmpnei	r10,r8,2047
    cee4:	2823883a 	mov	r17,r5
    cee8:	201c90fa 	slli	r14,r4,3
    ceec:	380ed7fa 	srli	r7,r7,31
    cef0:	301a90fa 	slli	r13,r6,3
    cef4:	29403fcc 	andi	r5,r5,255
    cef8:	6252b03a 	or	r9,r12,r9
    cefc:	589eb03a 	or	r15,r11,r2
    cf00:	9207c83a 	sub	r3,r18,r8
    cf04:	50006826 	beq	r10,zero,d0a8 <__subdf3+0x220>
    cf08:	3ac0005c 	xori	r11,r7,1
    cf0c:	2ac07326 	beq	r5,r11,d0dc <__subdf3+0x254>
    cf10:	00c0590e 	bge	zero,r3,d078 <__subdf3+0x1f0>
    cf14:	4000691e 	bne	r8,zero,d0bc <__subdf3+0x234>
    cf18:	7b44b03a 	or	r2,r15,r13
    cf1c:	1000fb26 	beq	r2,zero,d30c <__subdf3+0x484>
    cf20:	18bfffc4 	addi	r2,r3,-1
    cf24:	10019126 	beq	r2,zero,d56c <__subdf3+0x6e4>
    cf28:	18c1ffd8 	cmpnei	r3,r3,2047
    cf2c:	1800c326 	beq	r3,zero,d23c <__subdf3+0x3b4>
    cf30:	1007883a 	mov	r3,r2
    cf34:	18800e48 	cmpgei	r2,r3,57
    cf38:	1000651e 	bne	r2,zero,d0d0 <__subdf3+0x248>
    cf3c:	18800808 	cmpgei	r2,r3,32
    cf40:	1001331e 	bne	r2,zero,d410 <__subdf3+0x588>
    cf44:	00800804 	movi	r2,32
    cf48:	10c5c83a 	sub	r2,r2,r3
    cf4c:	78a0983a 	sll	r16,r15,r2
    cf50:	68c8d83a 	srl	r4,r13,r3
    cf54:	689a983a 	sll	r13,r13,r2
    cf58:	78c4d83a 	srl	r2,r15,r3
    cf5c:	8120b03a 	or	r16,r16,r4
    cf60:	681ac03a 	cmpne	r13,r13,zero
    cf64:	8360b03a 	or	r16,r16,r13
    cf68:	4893c83a 	sub	r9,r9,r2
    cf6c:	7421c83a 	sub	r16,r14,r16
    cf70:	7409803a 	cmpltu	r4,r14,r16
    cf74:	4909c83a 	sub	r4,r9,r4
    cf78:	2080202c 	andhi	r2,r4,128
    cf7c:	10009326 	beq	r2,zero,d1cc <__subdf3+0x344>
    cf80:	04c02034 	movhi	r19,128
    cf84:	9cffffc4 	addi	r19,r19,-1
    cf88:	24e6703a 	and	r19,r4,r19
    cf8c:	9800b926 	beq	r19,zero,d274 <__subdf3+0x3ec>
    cf90:	9809883a 	mov	r4,r19
    cf94:	000d9940 	call	d994 <__clzsi2>
    cf98:	10fffe04 	addi	r3,r2,-8
    cf9c:	01000804 	movi	r4,32
    cfa0:	20c9c83a 	sub	r4,r4,r3
    cfa4:	8108d83a 	srl	r4,r16,r4
    cfa8:	98e6983a 	sll	r19,r19,r3
    cfac:	80e0983a 	sll	r16,r16,r3
    cfb0:	24c8b03a 	or	r4,r4,r19
    cfb4:	1c80b816 	blt	r3,r18,d298 <__subdf3+0x410>
    cfb8:	1c87c83a 	sub	r3,r3,r18
    cfbc:	19400044 	addi	r5,r3,1
    cfc0:	28800808 	cmpgei	r2,r5,32
    cfc4:	1000751e 	bne	r2,zero,d19c <__subdf3+0x314>
    cfc8:	00800804 	movi	r2,32
    cfcc:	1145c83a 	sub	r2,r2,r5
    cfd0:	8146d83a 	srl	r3,r16,r5
    cfd4:	80a0983a 	sll	r16,r16,r2
    cfd8:	2084983a 	sll	r2,r4,r2
    cfdc:	2148d83a 	srl	r4,r4,r5
    cfe0:	8020c03a 	cmpne	r16,r16,zero
    cfe4:	10c4b03a 	or	r2,r2,r3
    cfe8:	1420b03a 	or	r16,r2,r16
    cfec:	0025883a 	mov	r18,zero
    cff0:	808001cc 	andi	r2,r16,7
    cff4:	10000726 	beq	r2,zero,d014 <__subdf3+0x18c>
    cff8:	808003cc 	andi	r2,r16,15
    cffc:	10800120 	cmpeqi	r2,r2,4
    d000:	1000041e 	bne	r2,zero,d014 <__subdf3+0x18c>
    d004:	80800104 	addi	r2,r16,4
    d008:	1421803a 	cmpltu	r16,r2,r16
    d00c:	2409883a 	add	r4,r4,r16
    d010:	1021883a 	mov	r16,r2
    d014:	2080202c 	andhi	r2,r4,128
    d018:	10006e26 	beq	r2,zero,d1d4 <__subdf3+0x34c>
    d01c:	90c00044 	addi	r3,r18,1
    d020:	1881ffe0 	cmpeqi	r2,r3,2047
    d024:	18c1ffcc 	andi	r3,r3,2047
    d028:	1000801e 	bne	r2,zero,d22c <__subdf3+0x3a4>
    d02c:	00bfe034 	movhi	r2,65408
    d030:	10bfffc4 	addi	r2,r2,-1
    d034:	2088703a 	and	r4,r4,r2
    d038:	2004977a 	slli	r2,r4,29
    d03c:	2008927a 	slli	r4,r4,9
    d040:	8020d0fa 	srli	r16,r16,3
    d044:	2008d33a 	srli	r4,r4,12
    d048:	1404b03a 	or	r2,r2,r16
    d04c:	1806953a 	slli	r3,r3,20
    d050:	882297fa 	slli	r17,r17,31
    d054:	1906b03a 	or	r3,r3,r4
    d058:	1c46b03a 	or	r3,r3,r17
    d05c:	dfc00417 	ldw	ra,16(sp)
    d060:	dcc00317 	ldw	r19,12(sp)
    d064:	dc800217 	ldw	r18,8(sp)
    d068:	dc400117 	ldw	r17,4(sp)
    d06c:	dc000017 	ldw	r16,0(sp)
    d070:	dec00504 	addi	sp,sp,20
    d074:	f800283a 	ret
    d078:	18002c26 	beq	r3,zero,d12c <__subdf3+0x2a4>
    d07c:	4487c83a 	sub	r3,r8,r18
    d080:	5823883a 	mov	r17,r11
    d084:	9000bb1e 	bne	r18,zero,d374 <__subdf3+0x4ec>
    d088:	4b84b03a 	or	r2,r9,r14
    d08c:	10011726 	beq	r2,zero,d4ec <__subdf3+0x664>
    d090:	18bfffc4 	addi	r2,r3,-1
    d094:	10016326 	beq	r2,zero,d624 <__subdf3+0x79c>
    d098:	18c1ffd8 	cmpnei	r3,r3,2047
    d09c:	18012c26 	beq	r3,zero,d550 <__subdf3+0x6c8>
    d0a0:	1007883a 	mov	r3,r2
    d0a4:	0000b506 	br	d37c <__subdf3+0x4f4>
    d0a8:	7b44b03a 	or	r2,r15,r13
    d0ac:	103f9626 	beq	r2,zero,cf08 <__subdf3+0x80>
    d0b0:	3ac03fcc 	andi	r11,r7,255
    d0b4:	29c07d26 	beq	r5,r7,d2ac <__subdf3+0x424>
    d0b8:	00ffef0e 	bge	zero,r3,d078 <__subdf3+0x1f0>
    d0bc:	9081ffd8 	cmpnei	r2,r18,2047
    d0c0:	10005e26 	beq	r2,zero,d23c <__subdf3+0x3b4>
    d0c4:	18800e48 	cmpgei	r2,r3,57
    d0c8:	7bc02034 	orhi	r15,r15,128
    d0cc:	103f9b26 	beq	r2,zero,cf3c <__subdf3+0xb4>
    d0d0:	7b60b03a 	or	r16,r15,r13
    d0d4:	8020c03a 	cmpne	r16,r16,zero
    d0d8:	003fa406 	br	cf6c <__subdf3+0xe4>
    d0dc:	00c0730e 	bge	zero,r3,d2ac <__subdf3+0x424>
    d0e0:	40002626 	beq	r8,zero,d17c <__subdf3+0x2f4>
    d0e4:	9081ffd8 	cmpnei	r2,r18,2047
    d0e8:	10005426 	beq	r2,zero,d23c <__subdf3+0x3b4>
    d0ec:	7bc02034 	orhi	r15,r15,128
    d0f0:	18800e48 	cmpgei	r2,r3,57
    d0f4:	1000431e 	bne	r2,zero,d204 <__subdf3+0x37c>
    d0f8:	18800808 	cmpgei	r2,r3,32
    d0fc:	1000de26 	beq	r2,zero,d478 <__subdf3+0x5f0>
    d100:	1c3ff804 	addi	r16,r3,-32
    d104:	18800820 	cmpeqi	r2,r3,32
    d108:	7c0ad83a 	srl	r5,r15,r16
    d10c:	1000041e 	bne	r2,zero,d120 <__subdf3+0x298>
    d110:	00801004 	movi	r2,64
    d114:	10c5c83a 	sub	r2,r2,r3
    d118:	7884983a 	sll	r2,r15,r2
    d11c:	689ab03a 	or	r13,r13,r2
    d120:	6820c03a 	cmpne	r16,r13,zero
    d124:	8160b03a 	or	r16,r16,r5
    d128:	00003806 	br	d20c <__subdf3+0x384>
    d12c:	90800044 	addi	r2,r18,1
    d130:	1081ff8c 	andi	r2,r2,2046
    d134:	1000a01e 	bne	r2,zero,d3b8 <__subdf3+0x530>
    d138:	4b8ab03a 	or	r5,r9,r14
    d13c:	7b44b03a 	or	r2,r15,r13
    d140:	9000f11e 	bne	r18,zero,d508 <__subdf3+0x680>
    d144:	28012e26 	beq	r5,zero,d600 <__subdf3+0x778>
    d148:	10010e26 	beq	r2,zero,d584 <__subdf3+0x6fc>
    d14c:	7361c83a 	sub	r16,r14,r13
    d150:	7405803a 	cmpltu	r2,r14,r16
    d154:	4bc9c83a 	sub	r4,r9,r15
    d158:	2089c83a 	sub	r4,r4,r2
    d15c:	2080202c 	andhi	r2,r4,128
    d160:	10016d26 	beq	r2,zero,d718 <__subdf3+0x890>
    d164:	6ba1c83a 	sub	r16,r13,r14
    d168:	7a49c83a 	sub	r4,r15,r9
    d16c:	6c1b803a 	cmpltu	r13,r13,r16
    d170:	2349c83a 	sub	r4,r4,r13
    d174:	5823883a 	mov	r17,r11
    d178:	003f9d06 	br	cff0 <__subdf3+0x168>
    d17c:	7b44b03a 	or	r2,r15,r13
    d180:	10006226 	beq	r2,zero,d30c <__subdf3+0x484>
    d184:	18bfffc4 	addi	r2,r3,-1
    d188:	1000e926 	beq	r2,zero,d530 <__subdf3+0x6a8>
    d18c:	18c1ffd8 	cmpnei	r3,r3,2047
    d190:	18012a26 	beq	r3,zero,d63c <__subdf3+0x7b4>
    d194:	1007883a 	mov	r3,r2
    d198:	003fd506 	br	d0f0 <__subdf3+0x268>
    d19c:	18fff844 	addi	r3,r3,-31
    d1a0:	28800820 	cmpeqi	r2,r5,32
    d1a4:	20c6d83a 	srl	r3,r4,r3
    d1a8:	1000041e 	bne	r2,zero,d1bc <__subdf3+0x334>
    d1ac:	00801004 	movi	r2,64
    d1b0:	114bc83a 	sub	r5,r2,r5
    d1b4:	2148983a 	sll	r4,r4,r5
    d1b8:	8120b03a 	or	r16,r16,r4
    d1bc:	8020c03a 	cmpne	r16,r16,zero
    d1c0:	80e0b03a 	or	r16,r16,r3
    d1c4:	0009883a 	mov	r4,zero
    d1c8:	0025883a 	mov	r18,zero
    d1cc:	808001cc 	andi	r2,r16,7
    d1d0:	103f891e 	bne	r2,zero,cff8 <__subdf3+0x170>
    d1d4:	8020d0fa 	srli	r16,r16,3
    d1d8:	2004977a 	slli	r2,r4,29
    d1dc:	2012d0fa 	srli	r9,r4,3
    d1e0:	9007883a 	mov	r3,r18
    d1e4:	8084b03a 	or	r2,r16,r2
    d1e8:	1901ffe0 	cmpeqi	r4,r3,2047
    d1ec:	2000191e 	bne	r4,zero,d254 <__subdf3+0x3cc>
    d1f0:	01000434 	movhi	r4,16
    d1f4:	213fffc4 	addi	r4,r4,-1
    d1f8:	4908703a 	and	r4,r9,r4
    d1fc:	18c1ffcc 	andi	r3,r3,2047
    d200:	003f9206 	br	d04c <__subdf3+0x1c4>
    d204:	7b60b03a 	or	r16,r15,r13
    d208:	8020c03a 	cmpne	r16,r16,zero
    d20c:	83a1883a 	add	r16,r16,r14
    d210:	8389803a 	cmpltu	r4,r16,r14
    d214:	2249883a 	add	r4,r4,r9
    d218:	2080202c 	andhi	r2,r4,128
    d21c:	103feb26 	beq	r2,zero,d1cc <__subdf3+0x344>
    d220:	94800044 	addi	r18,r18,1
    d224:	9081ffe0 	cmpeqi	r2,r18,2047
    d228:	10006f26 	beq	r2,zero,d3e8 <__subdf3+0x560>
    d22c:	00c1ffc4 	movi	r3,2047
    d230:	0009883a 	mov	r4,zero
    d234:	0005883a 	mov	r2,zero
    d238:	003f8406 	br	d04c <__subdf3+0x1c4>
    d23c:	4806977a 	slli	r3,r9,29
    d240:	00880034 	movhi	r2,8192
    d244:	10bfffc4 	addi	r2,r2,-1
    d248:	4812d0fa 	srli	r9,r9,3
    d24c:	2088703a 	and	r4,r4,r2
    d250:	20c4b03a 	or	r2,r4,r3
    d254:	4886b03a 	or	r3,r9,r2
    d258:	18013726 	beq	r3,zero,d738 <__subdf3+0x8b0>
    d25c:	00c00434 	movhi	r3,16
    d260:	18ffffc4 	addi	r3,r3,-1
    d264:	49000234 	orhi	r4,r9,8
    d268:	20c8703a 	and	r4,r4,r3
    d26c:	00c1ffc4 	movi	r3,2047
    d270:	003f7606 	br	d04c <__subdf3+0x1c4>
    d274:	8009883a 	mov	r4,r16
    d278:	000d9940 	call	d994 <__clzsi2>
    d27c:	10c00604 	addi	r3,r2,24
    d280:	19000808 	cmpgei	r4,r3,32
    d284:	203f4526 	beq	r4,zero,cf9c <__subdf3+0x114>
    d288:	113ffe04 	addi	r4,r2,-8
    d28c:	8108983a 	sll	r4,r16,r4
    d290:	0021883a 	mov	r16,zero
    d294:	1cbf480e 	bge	r3,r18,cfb8 <__subdf3+0x130>
    d298:	00bfe034 	movhi	r2,65408
    d29c:	10bfffc4 	addi	r2,r2,-1
    d2a0:	90e5c83a 	sub	r18,r18,r3
    d2a4:	2088703a 	and	r4,r4,r2
    d2a8:	003f5106 	br	cff0 <__subdf3+0x168>
    d2ac:	18001e26 	beq	r3,zero,d328 <__subdf3+0x4a0>
    d2b0:	4487c83a 	sub	r3,r8,r18
    d2b4:	90006826 	beq	r18,zero,d458 <__subdf3+0x5d0>
    d2b8:	5000a526 	beq	r10,zero,d550 <__subdf3+0x6c8>
    d2bc:	4a402034 	orhi	r9,r9,128
    d2c0:	18800e48 	cmpgei	r2,r3,57
    d2c4:	1000b61e 	bne	r2,zero,d5a0 <__subdf3+0x718>
    d2c8:	18800808 	cmpgei	r2,r3,32
    d2cc:	1001021e 	bne	r2,zero,d6d8 <__subdf3+0x850>
    d2d0:	00800804 	movi	r2,32
    d2d4:	10c5c83a 	sub	r2,r2,r3
    d2d8:	48a0983a 	sll	r16,r9,r2
    d2dc:	70c8d83a 	srl	r4,r14,r3
    d2e0:	7084983a 	sll	r2,r14,r2
    d2e4:	48d2d83a 	srl	r9,r9,r3
    d2e8:	8120b03a 	or	r16,r16,r4
    d2ec:	1004c03a 	cmpne	r2,r2,zero
    d2f0:	80a0b03a 	or	r16,r16,r2
    d2f4:	7a5f883a 	add	r15,r15,r9
    d2f8:	8361883a 	add	r16,r16,r13
    d2fc:	8349803a 	cmpltu	r4,r16,r13
    d300:	23c9883a 	add	r4,r4,r15
    d304:	4025883a 	mov	r18,r8
    d308:	003fc306 	br	d218 <__subdf3+0x390>
    d30c:	480a977a 	slli	r5,r9,29
    d310:	00880034 	movhi	r2,8192
    d314:	10bfffc4 	addi	r2,r2,-1
    d318:	2088703a 	and	r4,r4,r2
    d31c:	4812d0fa 	srli	r9,r9,3
    d320:	2144b03a 	or	r2,r4,r5
    d324:	003fb006 	br	d1e8 <__subdf3+0x360>
    d328:	90800044 	addi	r2,r18,1
    d32c:	1141ff8c 	andi	r5,r2,2046
    d330:	28005c1e 	bne	r5,zero,d4a4 <__subdf3+0x61c>
    d334:	4b84b03a 	or	r2,r9,r14
    d338:	9000a71e 	bne	r18,zero,d5d8 <__subdf3+0x750>
    d33c:	1000df26 	beq	r2,zero,d6bc <__subdf3+0x834>
    d340:	7b44b03a 	or	r2,r15,r13
    d344:	10008f26 	beq	r2,zero,d584 <__subdf3+0x6fc>
    d348:	7361883a 	add	r16,r14,r13
    d34c:	4bc9883a 	add	r4,r9,r15
    d350:	839d803a 	cmpltu	r14,r16,r14
    d354:	2389883a 	add	r4,r4,r14
    d358:	2080202c 	andhi	r2,r4,128
    d35c:	103f9b26 	beq	r2,zero,d1cc <__subdf3+0x344>
    d360:	00bfe034 	movhi	r2,65408
    d364:	10bfffc4 	addi	r2,r2,-1
    d368:	2088703a 	and	r4,r4,r2
    d36c:	04800044 	movi	r18,1
    d370:	003f9606 	br	d1cc <__subdf3+0x344>
    d374:	50007626 	beq	r10,zero,d550 <__subdf3+0x6c8>
    d378:	4a402034 	orhi	r9,r9,128
    d37c:	18800e48 	cmpgei	r2,r3,57
    d380:	10002e1e 	bne	r2,zero,d43c <__subdf3+0x5b4>
    d384:	18800808 	cmpgei	r2,r3,32
    d388:	1000881e 	bne	r2,zero,d5ac <__subdf3+0x724>
    d38c:	00800804 	movi	r2,32
    d390:	10c5c83a 	sub	r2,r2,r3
    d394:	48a0983a 	sll	r16,r9,r2
    d398:	70c8d83a 	srl	r4,r14,r3
    d39c:	709c983a 	sll	r14,r14,r2
    d3a0:	48d2d83a 	srl	r9,r9,r3
    d3a4:	8120b03a 	or	r16,r16,r4
    d3a8:	701cc03a 	cmpne	r14,r14,zero
    d3ac:	83a0b03a 	or	r16,r16,r14
    d3b0:	7a5fc83a 	sub	r15,r15,r9
    d3b4:	00002306 	br	d444 <__subdf3+0x5bc>
    d3b8:	7361c83a 	sub	r16,r14,r13
    d3bc:	4be7c83a 	sub	r19,r9,r15
    d3c0:	7409803a 	cmpltu	r4,r14,r16
    d3c4:	9927c83a 	sub	r19,r19,r4
    d3c8:	9880202c 	andhi	r2,r19,128
    d3cc:	1000411e 	bne	r2,zero,d4d4 <__subdf3+0x64c>
    d3d0:	84c4b03a 	or	r2,r16,r19
    d3d4:	103eed1e 	bne	r2,zero,cf8c <__subdf3+0x104>
    d3d8:	0013883a 	mov	r9,zero
    d3dc:	0023883a 	mov	r17,zero
    d3e0:	003f8306 	br	d1f0 <__subdf3+0x368>
    d3e4:	04800084 	movi	r18,2
    d3e8:	00bfe034 	movhi	r2,65408
    d3ec:	10bfffc4 	addi	r2,r2,-1
    d3f0:	8006d07a 	srli	r3,r16,1
    d3f4:	2088703a 	and	r4,r4,r2
    d3f8:	200497fa 	slli	r2,r4,31
    d3fc:	8400004c 	andi	r16,r16,1
    d400:	1c20b03a 	or	r16,r3,r16
    d404:	2008d07a 	srli	r4,r4,1
    d408:	1420b03a 	or	r16,r2,r16
    d40c:	003ef806 	br	cff0 <__subdf3+0x168>
    d410:	1c3ff804 	addi	r16,r3,-32
    d414:	18800820 	cmpeqi	r2,r3,32
    d418:	7c0ad83a 	srl	r5,r15,r16
    d41c:	1000041e 	bne	r2,zero,d430 <__subdf3+0x5a8>
    d420:	00801004 	movi	r2,64
    d424:	10c5c83a 	sub	r2,r2,r3
    d428:	7884983a 	sll	r2,r15,r2
    d42c:	689ab03a 	or	r13,r13,r2
    d430:	6820c03a 	cmpne	r16,r13,zero
    d434:	8160b03a 	or	r16,r16,r5
    d438:	003ecc06 	br	cf6c <__subdf3+0xe4>
    d43c:	4b92b03a 	or	r9,r9,r14
    d440:	4820c03a 	cmpne	r16,r9,zero
    d444:	6c21c83a 	sub	r16,r13,r16
    d448:	6c09803a 	cmpltu	r4,r13,r16
    d44c:	7909c83a 	sub	r4,r15,r4
    d450:	4025883a 	mov	r18,r8
    d454:	003ec806 	br	cf78 <__subdf3+0xf0>
    d458:	4b84b03a 	or	r2,r9,r14
    d45c:	10007e26 	beq	r2,zero,d658 <__subdf3+0x7d0>
    d460:	18bfffc4 	addi	r2,r3,-1
    d464:	1000a726 	beq	r2,zero,d704 <__subdf3+0x87c>
    d468:	18c1ffd8 	cmpnei	r3,r3,2047
    d46c:	18003826 	beq	r3,zero,d550 <__subdf3+0x6c8>
    d470:	1007883a 	mov	r3,r2
    d474:	003f9206 	br	d2c0 <__subdf3+0x438>
    d478:	00800804 	movi	r2,32
    d47c:	10c5c83a 	sub	r2,r2,r3
    d480:	78a0983a 	sll	r16,r15,r2
    d484:	68c8d83a 	srl	r4,r13,r3
    d488:	689a983a 	sll	r13,r13,r2
    d48c:	78c4d83a 	srl	r2,r15,r3
    d490:	8120b03a 	or	r16,r16,r4
    d494:	681ac03a 	cmpne	r13,r13,zero
    d498:	8360b03a 	or	r16,r16,r13
    d49c:	4893883a 	add	r9,r9,r2
    d4a0:	003f5a06 	br	d20c <__subdf3+0x384>
    d4a4:	10c1ffe0 	cmpeqi	r3,r2,2047
    d4a8:	183f601e 	bne	r3,zero,d22c <__subdf3+0x3a4>
    d4ac:	735b883a 	add	r13,r14,r13
    d4b0:	6b9d803a 	cmpltu	r14,r13,r14
    d4b4:	4bc9883a 	add	r4,r9,r15
    d4b8:	2389883a 	add	r4,r4,r14
    d4bc:	202097fa 	slli	r16,r4,31
    d4c0:	681ad07a 	srli	r13,r13,1
    d4c4:	2008d07a 	srli	r4,r4,1
    d4c8:	1025883a 	mov	r18,r2
    d4cc:	8360b03a 	or	r16,r16,r13
    d4d0:	003f3e06 	br	d1cc <__subdf3+0x344>
    d4d4:	6ba1c83a 	sub	r16,r13,r14
    d4d8:	7a49c83a 	sub	r4,r15,r9
    d4dc:	6c1b803a 	cmpltu	r13,r13,r16
    d4e0:	2367c83a 	sub	r19,r4,r13
    d4e4:	5823883a 	mov	r17,r11
    d4e8:	003ea806 	br	cf8c <__subdf3+0x104>
    d4ec:	7808977a 	slli	r4,r15,29
    d4f0:	00880034 	movhi	r2,8192
    d4f4:	10bfffc4 	addi	r2,r2,-1
    d4f8:	308c703a 	and	r6,r6,r2
    d4fc:	7812d0fa 	srli	r9,r15,3
    d500:	3104b03a 	or	r2,r6,r4
    d504:	003f3806 	br	d1e8 <__subdf3+0x360>
    d508:	28005a1e 	bne	r5,zero,d674 <__subdf3+0x7ec>
    d50c:	10008526 	beq	r2,zero,d724 <__subdf3+0x89c>
    d510:	7806977a 	slli	r3,r15,29
    d514:	00880034 	movhi	r2,8192
    d518:	10bfffc4 	addi	r2,r2,-1
    d51c:	3084703a 	and	r2,r6,r2
    d520:	7812d0fa 	srli	r9,r15,3
    d524:	10c4b03a 	or	r2,r2,r3
    d528:	5823883a 	mov	r17,r11
    d52c:	003f4906 	br	d254 <__subdf3+0x3cc>
    d530:	7361883a 	add	r16,r14,r13
    d534:	4bc9883a 	add	r4,r9,r15
    d538:	839d803a 	cmpltu	r14,r16,r14
    d53c:	2389883a 	add	r4,r4,r14
    d540:	2080202c 	andhi	r2,r4,128
    d544:	103fa71e 	bne	r2,zero,d3e4 <__subdf3+0x55c>
    d548:	04800044 	movi	r18,1
    d54c:	003f1f06 	br	d1cc <__subdf3+0x344>
    d550:	7806977a 	slli	r3,r15,29
    d554:	00880034 	movhi	r2,8192
    d558:	10bfffc4 	addi	r2,r2,-1
    d55c:	3084703a 	and	r2,r6,r2
    d560:	7812d0fa 	srli	r9,r15,3
    d564:	10c4b03a 	or	r2,r2,r3
    d568:	003f3a06 	br	d254 <__subdf3+0x3cc>
    d56c:	7361c83a 	sub	r16,r14,r13
    d570:	4bc9c83a 	sub	r4,r9,r15
    d574:	741d803a 	cmpltu	r14,r14,r16
    d578:	2389c83a 	sub	r4,r4,r14
    d57c:	04800044 	movi	r18,1
    d580:	003e7d06 	br	cf78 <__subdf3+0xf0>
    d584:	480a977a 	slli	r5,r9,29
    d588:	00880034 	movhi	r2,8192
    d58c:	10bfffc4 	addi	r2,r2,-1
    d590:	2084703a 	and	r2,r4,r2
    d594:	4812d0fa 	srli	r9,r9,3
    d598:	1144b03a 	or	r2,r2,r5
    d59c:	003f1406 	br	d1f0 <__subdf3+0x368>
    d5a0:	4b92b03a 	or	r9,r9,r14
    d5a4:	4820c03a 	cmpne	r16,r9,zero
    d5a8:	003f5306 	br	d2f8 <__subdf3+0x470>
    d5ac:	1c3ff804 	addi	r16,r3,-32
    d5b0:	19000820 	cmpeqi	r4,r3,32
    d5b4:	4c04d83a 	srl	r2,r9,r16
    d5b8:	2000041e 	bne	r4,zero,d5cc <__subdf3+0x744>
    d5bc:	01001004 	movi	r4,64
    d5c0:	20c7c83a 	sub	r3,r4,r3
    d5c4:	48d2983a 	sll	r9,r9,r3
    d5c8:	725cb03a 	or	r14,r14,r9
    d5cc:	7020c03a 	cmpne	r16,r14,zero
    d5d0:	80a0b03a 	or	r16,r16,r2
    d5d4:	003f9b06 	br	d444 <__subdf3+0x5bc>
    d5d8:	103fdd26 	beq	r2,zero,d550 <__subdf3+0x6c8>
    d5dc:	7b5ab03a 	or	r13,r15,r13
    d5e0:	480a977a 	slli	r5,r9,29
    d5e4:	4812d0fa 	srli	r9,r9,3
    d5e8:	6800251e 	bne	r13,zero,d680 <__subdf3+0x7f8>
    d5ec:	00880034 	movhi	r2,8192
    d5f0:	10bfffc4 	addi	r2,r2,-1
    d5f4:	2084703a 	and	r2,r4,r2
    d5f8:	1144b03a 	or	r2,r2,r5
    d5fc:	003f1506 	br	d254 <__subdf3+0x3cc>
    d600:	103f7526 	beq	r2,zero,d3d8 <__subdf3+0x550>
    d604:	7808977a 	slli	r4,r15,29
    d608:	00880034 	movhi	r2,8192
    d60c:	10bfffc4 	addi	r2,r2,-1
    d610:	3084703a 	and	r2,r6,r2
    d614:	7812d0fa 	srli	r9,r15,3
    d618:	1104b03a 	or	r2,r2,r4
    d61c:	5823883a 	mov	r17,r11
    d620:	003ef306 	br	d1f0 <__subdf3+0x368>
    d624:	6ba1c83a 	sub	r16,r13,r14
    d628:	7a49c83a 	sub	r4,r15,r9
    d62c:	6c1b803a 	cmpltu	r13,r13,r16
    d630:	2349c83a 	sub	r4,r4,r13
    d634:	04800044 	movi	r18,1
    d638:	003e4f06 	br	cf78 <__subdf3+0xf0>
    d63c:	4806977a 	slli	r3,r9,29
    d640:	00880034 	movhi	r2,8192
    d644:	10bfffc4 	addi	r2,r2,-1
    d648:	2084703a 	and	r2,r4,r2
    d64c:	4812d0fa 	srli	r9,r9,3
    d650:	10c4b03a 	or	r2,r2,r3
    d654:	003eff06 	br	d254 <__subdf3+0x3cc>
    d658:	7808977a 	slli	r4,r15,29
    d65c:	00880034 	movhi	r2,8192
    d660:	10bfffc4 	addi	r2,r2,-1
    d664:	3084703a 	and	r2,r6,r2
    d668:	7812d0fa 	srli	r9,r15,3
    d66c:	1104b03a 	or	r2,r2,r4
    d670:	003edd06 	br	d1e8 <__subdf3+0x360>
    d674:	480a977a 	slli	r5,r9,29
    d678:	4812d0fa 	srli	r9,r9,3
    d67c:	103fdb26 	beq	r2,zero,d5ec <__subdf3+0x764>
    d680:	00c80034 	movhi	r3,8192
    d684:	18ffffc4 	addi	r3,r3,-1
    d688:	20c4703a 	and	r2,r4,r3
    d68c:	4900022c 	andhi	r4,r9,8
    d690:	1144b03a 	or	r2,r2,r5
    d694:	203eef26 	beq	r4,zero,d254 <__subdf3+0x3cc>
    d698:	7808d0fa 	srli	r4,r15,3
    d69c:	2140022c 	andhi	r5,r4,8
    d6a0:	283eec1e 	bne	r5,zero,d254 <__subdf3+0x3cc>
    d6a4:	7804977a 	slli	r2,r15,29
    d6a8:	30cc703a 	and	r6,r6,r3
    d6ac:	5823883a 	mov	r17,r11
    d6b0:	3084b03a 	or	r2,r6,r2
    d6b4:	2013883a 	mov	r9,r4
    d6b8:	003ee606 	br	d254 <__subdf3+0x3cc>
    d6bc:	7808977a 	slli	r4,r15,29
    d6c0:	00880034 	movhi	r2,8192
    d6c4:	10bfffc4 	addi	r2,r2,-1
    d6c8:	3084703a 	and	r2,r6,r2
    d6cc:	7812d0fa 	srli	r9,r15,3
    d6d0:	1104b03a 	or	r2,r2,r4
    d6d4:	003ec606 	br	d1f0 <__subdf3+0x368>
    d6d8:	18bff804 	addi	r2,r3,-32
    d6dc:	19000820 	cmpeqi	r4,r3,32
    d6e0:	4884d83a 	srl	r2,r9,r2
    d6e4:	2000041e 	bne	r4,zero,d6f8 <__subdf3+0x870>
    d6e8:	01001004 	movi	r4,64
    d6ec:	20c7c83a 	sub	r3,r4,r3
    d6f0:	48d2983a 	sll	r9,r9,r3
    d6f4:	725cb03a 	or	r14,r14,r9
    d6f8:	7020c03a 	cmpne	r16,r14,zero
    d6fc:	80a0b03a 	or	r16,r16,r2
    d700:	003efd06 	br	d2f8 <__subdf3+0x470>
    d704:	7361883a 	add	r16,r14,r13
    d708:	4bc9883a 	add	r4,r9,r15
    d70c:	835b803a 	cmpltu	r13,r16,r13
    d710:	2349883a 	add	r4,r4,r13
    d714:	003f8a06 	br	d540 <__subdf3+0x6b8>
    d718:	8104b03a 	or	r2,r16,r4
    d71c:	103f2e26 	beq	r2,zero,d3d8 <__subdf3+0x550>
    d720:	003eaa06 	br	d1cc <__subdf3+0x344>
    d724:	02400434 	movhi	r9,16
    d728:	0023883a 	mov	r17,zero
    d72c:	00bfffc4 	movi	r2,-1
    d730:	4a7fffc4 	addi	r9,r9,-1
    d734:	003ec906 	br	d25c <__subdf3+0x3d4>
    d738:	0005883a 	mov	r2,zero
    d73c:	00c1ffc4 	movi	r3,2047
    d740:	0009883a 	mov	r4,zero
    d744:	003e4106 	br	d04c <__subdf3+0x1c4>

0000d748 <__unorddf2>:
    d748:	f811883a 	mov	r8,ra
    d74c:	000e1ac0 	call	e1ac <_mcount>
    d750:	403f883a 	mov	ra,r8
    d754:	2806d53a 	srli	r3,r5,20
    d758:	3810d53a 	srli	r8,r7,20
    d75c:	02400434 	movhi	r9,16
    d760:	18c1ffcc 	andi	r3,r3,2047
    d764:	4a7fffc4 	addi	r9,r9,-1
    d768:	18c1ffd8 	cmpnei	r3,r3,2047
    d76c:	2a4a703a 	and	r5,r5,r9
    d770:	3a4e703a 	and	r7,r7,r9
    d774:	4201ffcc 	andi	r8,r8,2047
    d778:	18000426 	beq	r3,zero,d78c <__unorddf2+0x44>
    d77c:	4201ffd8 	cmpnei	r8,r8,2047
    d780:	40000626 	beq	r8,zero,d79c <__unorddf2+0x54>
    d784:	0005883a 	mov	r2,zero
    d788:	f800283a 	ret
    d78c:	290ab03a 	or	r5,r5,r4
    d790:	283ffa26 	beq	r5,zero,d77c <__unorddf2+0x34>
    d794:	00800044 	movi	r2,1
    d798:	f800283a 	ret
    d79c:	398eb03a 	or	r7,r7,r6
    d7a0:	3804c03a 	cmpne	r2,r7,zero
    d7a4:	f800283a 	ret

0000d7a8 <__fixdfsi>:
    d7a8:	f811883a 	mov	r8,ra
    d7ac:	000e1ac0 	call	e1ac <_mcount>
    d7b0:	403f883a 	mov	ra,r8
    d7b4:	2806d53a 	srli	r3,r5,20
    d7b8:	01800434 	movhi	r6,16
    d7bc:	31bfffc4 	addi	r6,r6,-1
    d7c0:	18c1ffcc 	andi	r3,r3,2047
    d7c4:	19c0ffd0 	cmplti	r7,r3,1023
    d7c8:	2810d7fa 	srli	r8,r5,31
    d7cc:	298a703a 	and	r5,r5,r6
    d7d0:	3800061e 	bne	r7,zero,d7ec <__fixdfsi+0x44>
    d7d4:	18810790 	cmplti	r2,r3,1054
    d7d8:	1000061e 	bne	r2,zero,d7f4 <__fixdfsi+0x4c>
    d7dc:	00a00034 	movhi	r2,32768
    d7e0:	10bfffc4 	addi	r2,r2,-1
    d7e4:	4085883a 	add	r2,r8,r2
    d7e8:	f800283a 	ret
    d7ec:	0005883a 	mov	r2,zero
    d7f0:	f800283a 	ret
    d7f4:	01810cc4 	movi	r6,1075
    d7f8:	30cdc83a 	sub	r6,r6,r3
    d7fc:	30800808 	cmpgei	r2,r6,32
    d800:	29400434 	orhi	r5,r5,16
    d804:	1000071e 	bne	r2,zero,d824 <__fixdfsi+0x7c>
    d808:	18befb44 	addi	r2,r3,-1043
    d80c:	2884983a 	sll	r2,r5,r2
    d810:	2188d83a 	srl	r4,r4,r6
    d814:	1104b03a 	or	r2,r2,r4
    d818:	403ff526 	beq	r8,zero,d7f0 <__fixdfsi+0x48>
    d81c:	0085c83a 	sub	r2,zero,r2
    d820:	f800283a 	ret
    d824:	008104c4 	movi	r2,1043
    d828:	10c5c83a 	sub	r2,r2,r3
    d82c:	2884d83a 	srl	r2,r5,r2
    d830:	003ff906 	br	d818 <__fixdfsi+0x70>

0000d834 <__floatsidf>:
    d834:	f811883a 	mov	r8,ra
    d838:	000e1ac0 	call	e1ac <_mcount>
    d83c:	403f883a 	mov	ra,r8
    d840:	defffd04 	addi	sp,sp,-12
    d844:	dfc00215 	stw	ra,8(sp)
    d848:	dc400115 	stw	r17,4(sp)
    d84c:	dc000015 	stw	r16,0(sp)
    d850:	20001326 	beq	r4,zero,d8a0 <__floatsidf+0x6c>
    d854:	2022d7fa 	srli	r17,r4,31
    d858:	2021883a 	mov	r16,r4
    d85c:	20002416 	blt	r4,zero,d8f0 <__floatsidf+0xbc>
    d860:	8009883a 	mov	r4,r16
    d864:	000d9940 	call	d994 <__clzsi2>
    d868:	01010784 	movi	r4,1054
    d86c:	2089c83a 	sub	r4,r4,r2
    d870:	114002c8 	cmpgei	r5,r2,11
    d874:	20c1ffcc 	andi	r3,r4,2047
    d878:	2800161e 	bne	r5,zero,d8d4 <__floatsidf+0xa0>
    d87c:	010002c4 	movi	r4,11
    d880:	2089c83a 	sub	r4,r4,r2
    d884:	810ad83a 	srl	r5,r16,r4
    d888:	01000434 	movhi	r4,16
    d88c:	10800544 	addi	r2,r2,21
    d890:	213fffc4 	addi	r4,r4,-1
    d894:	8084983a 	sll	r2,r16,r2
    d898:	290a703a 	and	r5,r5,r4
    d89c:	00000406 	br	d8b0 <__floatsidf+0x7c>
    d8a0:	0023883a 	mov	r17,zero
    d8a4:	0007883a 	mov	r3,zero
    d8a8:	000b883a 	mov	r5,zero
    d8ac:	0005883a 	mov	r2,zero
    d8b0:	1808953a 	slli	r4,r3,20
    d8b4:	880697fa 	slli	r3,r17,31
    d8b8:	2148b03a 	or	r4,r4,r5
    d8bc:	20c6b03a 	or	r3,r4,r3
    d8c0:	dfc00217 	ldw	ra,8(sp)
    d8c4:	dc400117 	ldw	r17,4(sp)
    d8c8:	dc000017 	ldw	r16,0(sp)
    d8cc:	dec00304 	addi	sp,sp,12
    d8d0:	f800283a 	ret
    d8d4:	10bffd44 	addi	r2,r2,-11
    d8d8:	808a983a 	sll	r5,r16,r2
    d8dc:	00800434 	movhi	r2,16
    d8e0:	10bfffc4 	addi	r2,r2,-1
    d8e4:	288a703a 	and	r5,r5,r2
    d8e8:	0005883a 	mov	r2,zero
    d8ec:	003ff006 	br	d8b0 <__floatsidf+0x7c>
    d8f0:	0121c83a 	sub	r16,zero,r4
    d8f4:	003fda06 	br	d860 <__floatsidf+0x2c>

0000d8f8 <__floatunsidf>:
    d8f8:	f811883a 	mov	r8,ra
    d8fc:	000e1ac0 	call	e1ac <_mcount>
    d900:	403f883a 	mov	ra,r8
    d904:	defffe04 	addi	sp,sp,-8
    d908:	dfc00115 	stw	ra,4(sp)
    d90c:	dc000015 	stw	r16,0(sp)
    d910:	2021883a 	mov	r16,r4
    d914:	20000f26 	beq	r4,zero,d954 <__floatunsidf+0x5c>
    d918:	000d9940 	call	d994 <__clzsi2>
    d91c:	00c10784 	movi	r3,1054
    d920:	1887c83a 	sub	r3,r3,r2
    d924:	110002c8 	cmpgei	r4,r2,11
    d928:	18c1ffcc 	andi	r3,r3,2047
    d92c:	2000121e 	bne	r4,zero,d978 <__floatunsidf+0x80>
    d930:	014002c4 	movi	r5,11
    d934:	288bc83a 	sub	r5,r5,r2
    d938:	814ad83a 	srl	r5,r16,r5
    d93c:	01000434 	movhi	r4,16
    d940:	10800544 	addi	r2,r2,21
    d944:	213fffc4 	addi	r4,r4,-1
    d948:	80a0983a 	sll	r16,r16,r2
    d94c:	290a703a 	and	r5,r5,r4
    d950:	00000206 	br	d95c <__floatunsidf+0x64>
    d954:	0007883a 	mov	r3,zero
    d958:	000b883a 	mov	r5,zero
    d95c:	1806953a 	slli	r3,r3,20
    d960:	8005883a 	mov	r2,r16
    d964:	1946b03a 	or	r3,r3,r5
    d968:	dfc00117 	ldw	ra,4(sp)
    d96c:	dc000017 	ldw	r16,0(sp)
    d970:	dec00204 	addi	sp,sp,8
    d974:	f800283a 	ret
    d978:	117ffd44 	addi	r5,r2,-11
    d97c:	814a983a 	sll	r5,r16,r5
    d980:	00800434 	movhi	r2,16
    d984:	10bfffc4 	addi	r2,r2,-1
    d988:	288a703a 	and	r5,r5,r2
    d98c:	0021883a 	mov	r16,zero
    d990:	003ff206 	br	d95c <__floatunsidf+0x64>

0000d994 <__clzsi2>:
    d994:	f811883a 	mov	r8,ra
    d998:	000e1ac0 	call	e1ac <_mcount>
    d99c:	403f883a 	mov	ra,r8
    d9a0:	00bfffd4 	movui	r2,65535
    d9a4:	11000436 	bltu	r2,r4,d9b8 <__clzsi2+0x24>
    d9a8:	20804030 	cmpltui	r2,r4,256
    d9ac:	10000e26 	beq	r2,zero,d9e8 <__clzsi2+0x54>
    d9b0:	01400804 	movi	r5,32
    d9b4:	00000406 	br	d9c8 <__clzsi2+0x34>
    d9b8:	00804034 	movhi	r2,256
    d9bc:	20800736 	bltu	r4,r2,d9dc <__clzsi2+0x48>
    d9c0:	2008d63a 	srli	r4,r4,24
    d9c4:	01400204 	movi	r5,8
    d9c8:	00c00074 	movhi	r3,1
    d9cc:	20c7883a 	add	r3,r4,r3
    d9d0:	18815803 	ldbu	r2,1376(r3)
    d9d4:	2885c83a 	sub	r2,r5,r2
    d9d8:	f800283a 	ret
    d9dc:	2008d43a 	srli	r4,r4,16
    d9e0:	01400404 	movi	r5,16
    d9e4:	003ff806 	br	d9c8 <__clzsi2+0x34>
    d9e8:	2008d23a 	srli	r4,r4,8
    d9ec:	01400604 	movi	r5,24
    d9f0:	003ff506 	br	d9c8 <__clzsi2+0x34>

0000d9f4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d9f4:	f811883a 	mov	r8,ra
    d9f8:	000e1ac0 	call	e1ac <_mcount>
    d9fc:	403f883a 	mov	ra,r8
    da00:	defffd04 	addi	sp,sp,-12
    da04:	dfc00215 	stw	ra,8(sp)
    da08:	dc400115 	stw	r17,4(sp)
    da0c:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    da10:	20001f16 	blt	r4,zero,da90 <close+0x9c>
    da14:	20800324 	muli	r2,r4,12
    da18:	00c00074 	movhi	r3,1
    da1c:	18c44504 	addi	r3,r3,4372
    da20:	10c5883a 	add	r2,r2,r3

  if (fd)
    da24:	2021883a 	mov	r16,r4
    da28:	10001926 	beq	r2,zero,da90 <close+0x9c>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    da2c:	10c00017 	ldw	r3,0(r2)
    da30:	18c00417 	ldw	r3,16(r3)
    da34:	18000c26 	beq	r3,zero,da68 <close+0x74>
    da38:	1009883a 	mov	r4,r2
    da3c:	183ee83a 	callr	r3

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    da40:	8009883a 	mov	r4,r16
    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    da44:	1023883a 	mov	r17,r2
    alt_release_fd (fildes);
    da48:	000e3200 	call	e320 <alt_release_fd>
    if (rval < 0)
    {
      ALT_ERRNO = -rval;
      return -1;
    }
    return 0;
    da4c:	0005883a 	mov	r2,zero
    if (rval < 0)
    da50:	88000816 	blt	r17,zero,da74 <close+0x80>
  else
  {
    ALT_ERRNO = EBADFD;
    return -1;
  }
}
    da54:	dfc00217 	ldw	ra,8(sp)
    da58:	dc400117 	ldw	r17,4(sp)
    da5c:	dc000017 	ldw	r16,0(sp)
    da60:	dec00304 	addi	sp,sp,12
    da64:	f800283a 	ret
    alt_release_fd (fildes);
    da68:	000e3200 	call	e320 <alt_release_fd>
    return 0;
    da6c:	0005883a 	mov	r2,zero
    da70:	003ff806 	br	da54 <close+0x60>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
    da74:	d0a00917 	ldw	r2,-32732(gp)
    da78:	10000c26 	beq	r2,zero,daac <close+0xb8>
    da7c:	103ee83a 	callr	r2
      ALT_ERRNO = -rval;
    da80:	0463c83a 	sub	r17,zero,r17
    da84:	14400015 	stw	r17,0(r2)
      return -1;
    da88:	00bfffc4 	movi	r2,-1
    da8c:	003ff106 	br	da54 <close+0x60>
    da90:	d0a00917 	ldw	r2,-32732(gp)
    da94:	10000726 	beq	r2,zero,dab4 <close+0xc0>
    da98:	103ee83a 	callr	r2
    ALT_ERRNO = EBADFD;
    da9c:	00c01444 	movi	r3,81
    daa0:	10c00015 	stw	r3,0(r2)
    return -1;
    daa4:	00bfffc4 	movi	r2,-1
    daa8:	003fea06 	br	da54 <close+0x60>
    daac:	d0a01304 	addi	r2,gp,-32692
    dab0:	003ff306 	br	da80 <close+0x8c>
    dab4:	d0a01304 	addi	r2,gp,-32692
    dab8:	003ff806 	br	da9c <close+0xa8>

0000dabc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    dabc:	f811883a 	mov	r8,ra
    dac0:	000e1ac0 	call	e1ac <_mcount>
    dac4:	403f883a 	mov	ra,r8
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
    dac8:	0005883a 	mov	r2,zero
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
    dacc:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
    dad0:	10800804 	addi	r2,r2,32
    dad4:	10c40018 	cmpnei	r3,r2,4096
    dad8:	183ffc1e 	bne	r3,zero,dacc <alt_dcache_flush_all+0x10>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    dadc:	f800283a 	ret

0000dae0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    dae0:	f811883a 	mov	r8,ra
    dae4:	000e1ac0 	call	e1ac <_mcount>
    dae8:	403f883a 	mov	ra,r8
    daec:	3005883a 	mov	r2,r6
  return len;
}
    daf0:	f800283a 	ret

0000daf4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    daf4:	f811883a 	mov	r8,ra
    daf8:	000e1ac0 	call	e1ac <_mcount>
    dafc:	403f883a 	mov	ra,r8
    db00:	2005883a 	mov	r2,r4

  register int r3 asm ("r3") = (1 << 2);

#ifdef ALT_PROVIDE_GMON
  extern unsigned int alt_gmon_data[];
  register int r4 asm ("r4") = (int)alt_gmon_data;
    db04:	01000074 	movhi	r4,1
    db08:	2104af04 	addi	r4,r4,4796
  r3 |= (1 << 4);
    db0c:	00c00504 	movi	r3,20
#define ALT_GMON_DATA ,"r"(r4)
#else
#define ALT_GMON_DATA
#endif /* ALT_PROVIDE_GMON */

  if (r2) {
    db10:	10000726 	beq	r2,zero,db30 <_exit+0x3c>
    ALT_SIM_FAIL();
    db14:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }

  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */
    db18:	01400234 	movhi	r5,8
    db1c:	29684804 	addi	r5,r5,-24288
    db20:	297fffc4 	addi	r5,r5,-1
    db24:	017ffe16 	blt	zero,r5,db20 <_exit+0x2c>

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );
    db28:	003da0ba 	break	2
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    db2c:	003fff06 	br	db2c <_exit+0x38>
    ALT_SIM_PASS();
    db30:	002af0b0 	cmpltui	zero,zero,43970
    db34:	003ff806 	br	db18 <_exit+0x24>

0000db38 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    db38:	f811883a 	mov	r8,ra
    db3c:	000e1ac0 	call	e1ac <_mcount>
    db40:	403f883a 	mov	ra,r8
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    db44:	20000d16 	blt	r4,zero,db7c <fstat+0x44>
    db48:	21000324 	muli	r4,r4,12
    db4c:	00800074 	movhi	r2,1
    db50:	10844504 	addi	r2,r2,4372
    db54:	2089883a 	add	r4,r4,r2
  
  if (fd)
    db58:	20000826 	beq	r4,zero,db7c <fstat+0x44>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    db5c:	20800017 	ldw	r2,0(r4)
    db60:	10800817 	ldw	r2,32(r2)
    db64:	10000126 	beq	r2,zero,db6c <fstat+0x34>
    {
      return fd->dev->fstat(fd, st);
    db68:	1000683a 	jmp	r2
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    db6c:	00880004 	movi	r2,8192
    db70:	28800115 	stw	r2,4(r5)
      return 0;
    db74:	0005883a 	mov	r2,zero
    db78:	f800283a 	ret
    db7c:	d0a00917 	ldw	r2,-32732(gp)
    db80:	10000926 	beq	r2,zero,dba8 <fstat+0x70>
{
    db84:	deffff04 	addi	sp,sp,-4
    db88:	dfc00015 	stw	ra,0(sp)
    db8c:	103ee83a 	callr	r2
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    db90:	00c01444 	movi	r3,81
    db94:	10c00015 	stw	r3,0(r2)
    return -1;
    db98:	00bfffc4 	movi	r2,-1
  }
}
    db9c:	dfc00017 	ldw	ra,0(sp)
    dba0:	dec00104 	addi	sp,sp,4
    dba4:	f800283a 	ret
    dba8:	d0a01304 	addi	r2,gp,-32692
    ALT_ERRNO = EBADFD;
    dbac:	00c01444 	movi	r3,81
    dbb0:	10c00015 	stw	r3,0(r2)
    return -1;
    dbb4:	00bfffc4 	movi	r2,-1
}
    dbb8:	f800283a 	ret

0000dbbc <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
    dbbc:	f811883a 	mov	r8,ra
    dbc0:	000e1ac0 	call	e1ac <_mcount>
    dbc4:	403f883a 	mov	ra,r8
  return 0;
}
    dbc8:	0005883a 	mov	r2,zero
    dbcc:	f800283a 	ret

0000dbd0 <nios2_pcsample>:

  /*
   * If we're within the profilable range then increment the relevant
   * bucket in the histogram
   */
  if (pc >= s_low_pc && pc < s_high_pc && s_pcsamples != 0)
    dbd0:	00800034 	movhi	r2,0
    dbd4:	10806a04 	addi	r2,r2,424
  NIOS2_READ_EA(pc);
    dbd8:	e807883a 	mov	r3,ea
  if (pc >= s_low_pc && pc < s_high_pc && s_pcsamples != 0)
    dbdc:	18800c36 	bltu	r3,r2,dc10 <nios2_pcsample+0x40>
    dbe0:	01000074 	movhi	r4,1
    dbe4:	213e0304 	addi	r4,r4,-2036
    dbe8:	1900092e 	bgeu	r3,r4,dc10 <nios2_pcsample+0x40>
    dbec:	d1201717 	ldw	r4,-32676(gp)
    dbf0:	20000726 	beq	r4,zero,dc10 <nios2_pcsample+0x40>
  {
    bucket = (pc - s_low_pc)/PCSAMPLE_BYTES_PER_BUCKET;
    dbf4:	1885c83a 	sub	r2,r3,r2
    dbf8:	1004d17a 	srli	r2,r2,5
    s_pcsamples[bucket]++;
    dbfc:	1085883a 	add	r2,r2,r2
    dc00:	2085883a 	add	r2,r4,r2
    dc04:	10c0000b 	ldhu	r3,0(r2)
    dc08:	18c00044 	addi	r3,r3,1
    dc0c:	10c0000d 	sth	r3,0(r2)
  }

  /* Sample every tick */
  return 1;
}
    dc10:	00800044 	movi	r2,1
    dc14:	f800283a 	ret

0000dc18 <__mcount_record>:
  if (pcsample_need_init)
    dc18:	d0e00a17 	ldw	r3,-32728(gp)
{
    dc1c:	defff904 	addi	sp,sp,-28
    dc20:	dd000415 	stw	r20,16(sp)
    dc24:	dcc00315 	stw	r19,12(sp)
    dc28:	dc800215 	stw	r18,8(sp)
    dc2c:	dc000015 	stw	r16,0(sp)
    dc30:	dfc00615 	stw	ra,24(sp)
    dc34:	dd400515 	stw	r21,20(sp)
    dc38:	dc400115 	stw	r17,4(sp)
    dc3c:	2029883a 	mov	r20,r4
    dc40:	2827883a 	mov	r19,r5
    dc44:	3021883a 	mov	r16,r6
    dc48:	3825883a 	mov	r18,r7
  if (pcsample_need_init)
    dc4c:	18001d1e 	bne	r3,zero,dcc4 <__mcount_record+0xac>
  NIOS2_READ_STATUS (context);
    dc50:	0023303a 	rdctl	r17,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    dc54:	00bfff84 	movi	r2,-2
    dc58:	8884703a 	and	r2,r17,r2
    dc5c:	1001703a 	wrctl	status,r2
  if (size > mcount_slab_size)
    dc60:	d0e01517 	ldw	r3,-32684(gp)
  if (fn_entry == NULL)
    dc64:	80003e26 	beq	r16,zero,dd60 <__mcount_record+0x148>
  if (size > mcount_slab_size)
    dc68:	18800330 	cmpltui	r2,r3,12
    dc6c:	10001b1e 	bne	r2,zero,dcdc <__mcount_record+0xc4>
  data = mcount_slab_ptr;
    dc70:	d0a01617 	ldw	r2,-32680(gp)
  mcount_slab_size -= size;
    dc74:	18fffd04 	addi	r3,r3,-12
  arc_entry->next = fn_entry->arc_head;
    dc78:	81800217 	ldw	r6,8(r16)
  arc_entry->count = 1;
    dc7c:	01400044 	movi	r5,1
  mcount_slab_ptr += size;
    dc80:	11000304 	addi	r4,r2,12
  arc_entry->from_pc = from_pc;
    dc84:	14c00115 	stw	r19,4(r2)
  arc_entry->count = 1;
    dc88:	11400215 	stw	r5,8(r2)
  arc_entry->next = fn_entry->arc_head;
    dc8c:	11800015 	stw	r6,0(r2)
  mcount_slab_ptr += size;
    dc90:	d1201615 	stw	r4,-32680(gp)
  mcount_slab_size -= size;
    dc94:	d0e01515 	stw	r3,-32684(gp)
  fn_entry->arc_head = arc_entry;
    dc98:	80800215 	stw	r2,8(r16)
  NIOS2_WRITE_STATUS (context);
    dc9c:	8801703a 	wrctl	status,r17
}
    dca0:	dfc00617 	ldw	ra,24(sp)
    dca4:	dd400517 	ldw	r21,20(sp)
    dca8:	dd000417 	ldw	r20,16(sp)
    dcac:	dcc00317 	ldw	r19,12(sp)
    dcb0:	dc800217 	ldw	r18,8(sp)
    dcb4:	dc400117 	ldw	r17,4(sp)
    dcb8:	dc000017 	ldw	r16,0(sp)
    dcbc:	dec00704 	addi	sp,sp,28
    dcc0:	f800283a 	ret
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    dcc4:	d5601d17 	ldw	r21,-32652(gp)
    pcsample_need_init = 0;
    dcc8:	d0200a15 	stw	zero,-32728(gp)
  if (prof_rate == 0)
    dccc:	a800071e 	bne	r21,zero,dcec <__mcount_record+0xd4>
    return 1;
    dcd0:	00800044 	movi	r2,1
    pcsample_need_init = nios2_pcsample_init();
    dcd4:	d0a00a15 	stw	r2,-32728(gp)
    dcd8:	003fdd06 	br	dc50 <__mcount_record+0x38>
    mcount_slab_ptr = sbrk(MCOUNT_SLAB_INCREMENT);
    dcdc:	0100ff04 	movi	r4,1020
    dce0:	000e3500 	call	e350 <sbrk>
    dce4:	00c0fc04 	movi	r3,1008
    dce8:	003fe306 	br	dc78 <__mcount_record+0x60>
  pcsamples_size = (s_high_pc - s_low_pc)/PCSAMPLE_BYTES_PER_BUCKET;
    dcec:	00800074 	movhi	r2,1
    dcf0:	01800034 	movhi	r6,0
    dcf4:	31806a04 	addi	r6,r6,424
    dcf8:	10be0304 	addi	r2,r2,-2036
    dcfc:	1185c83a 	sub	r2,r2,r6
    dd00:	100cd17a 	srli	r6,r2,5
  s_pcsamples    = (unsigned short*)sbrk(pcsamples_size * sizeof(unsigned short));
    dd04:	31a3883a 	add	r17,r6,r6
    dd08:	8809883a 	mov	r4,r17
    dd0c:	000e3500 	call	e350 <sbrk>
    dd10:	d0a01715 	stw	r2,-32676(gp)
  if (s_pcsamples != 0)
    dd14:	10002026 	beq	r2,zero,dd98 <__mcount_record+0x180>
    memset(s_pcsamples, 0, pcsamples_size * sizeof(unsigned short));
    dd18:	880d883a 	mov	r6,r17
    dd1c:	000b883a 	mov	r5,zero
    dd20:	1009883a 	mov	r4,r2
    dd24:	00064540 	call	6454 <memset>
    dd28:	1007883a 	mov	r3,r2
    alt_gmon_data[GMON_DATA_PROFILE_DATA] = (int)s_pcsamples;
    dd2c:	00800074 	movhi	r2,1
    dd30:	1084af04 	addi	r2,r2,4796
    alt_alarm_start(&s_nios2_pcsample_alarm, 1, nios2_pcsample, 0);
    dd34:	01800074 	movhi	r6,1
    dd38:	01000074 	movhi	r4,1
    dd3c:	000f883a 	mov	r7,zero
    dd40:	31b6f404 	addi	r6,r6,-9264
    dd44:	01400044 	movi	r5,1
    dd48:	2108f904 	addi	r4,r4,9188
    alt_gmon_data[GMON_DATA_PROFILE_DATA] = (int)s_pcsamples;
    dd4c:	10c00215 	stw	r3,8(r2)
    alt_gmon_data[GMON_DATA_PROFILE_RATE] = prof_rate;
    dd50:	15400615 	stw	r21,24(r2)
    alt_alarm_start(&s_nios2_pcsample_alarm, 1, nios2_pcsample, 0);
    dd54:	000ef0c0 	call	ef0c <alt_alarm_start>
  return 0;
    dd58:	0005883a 	mov	r2,zero
    dd5c:	003fdd06 	br	dcd4 <__mcount_record+0xbc>
  if (size > mcount_slab_size)
    dd60:	18800330 	cmpltui	r2,r3,12
    dd64:	10000e1e 	bne	r2,zero,dda0 <__mcount_record+0x188>
  data = mcount_slab_ptr;
    dd68:	d4201617 	ldw	r16,-32680(gp)
  mcount_slab_size -= size;
    dd6c:	18fffd04 	addi	r3,r3,-12
    dd70:	180b883a 	mov	r5,r3
    fn_entry->self_pc = self_pc;
    dd74:	85000115 	stw	r20,4(r16)
    fn_entry->next = *fn_head;
    dd78:	91000017 	ldw	r4,0(r18)
  mcount_slab_ptr += size;
    dd7c:	80800304 	addi	r2,r16,12
    fn_entry->arc_head = NULL;
    dd80:	80000215 	stw	zero,8(r16)
    fn_entry->next = *fn_head;
    dd84:	81000015 	stw	r4,0(r16)
  mcount_slab_ptr += size;
    dd88:	d0a01615 	stw	r2,-32680(gp)
  mcount_slab_size -= size;
    dd8c:	d1601515 	stw	r5,-32684(gp)
    *fn_head = fn_entry;
    dd90:	94000015 	stw	r16,0(r18)
    dd94:	003fb406 	br	dc68 <__mcount_record+0x50>
  return 0;
    dd98:	0005883a 	mov	r2,zero
    dd9c:	003fcd06 	br	dcd4 <__mcount_record+0xbc>
    mcount_slab_ptr = sbrk(MCOUNT_SLAB_INCREMENT);
    dda0:	0100ff04 	movi	r4,1020
    dda4:	000e3500 	call	e350 <sbrk>
    dda8:	1021883a 	mov	r16,r2
    ddac:	0140fc04 	movi	r5,1008
    ddb0:	00c0fc04 	movi	r3,1008
    ddb4:	003fef06 	br	dd74 <__mcount_record+0x15c>

0000ddb8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    ddb8:	f811883a 	mov	r8,ra
    ddbc:	000e1ac0 	call	e1ac <_mcount>
    ddc0:	403f883a 	mov	ra,r8
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
    ddc4:	01440004 	movi	r5,4096
    ddc8:	0009883a 	mov	r4,zero
    ddcc:	000f0b81 	jmpi	f0b8 <alt_icache_flush>

0000ddd0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ddd0:	f811883a 	mov	r8,ra
    ddd4:	000e1ac0 	call	e1ac <_mcount>
    ddd8:	403f883a 	mov	ra,r8
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    dddc:	000de8c1 	jmpi	de8c <alt_iic_isr_register>

0000dde0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    dde0:	f811883a 	mov	r8,ra
    dde4:	000e1ac0 	call	e1ac <_mcount>
    dde8:	403f883a 	mov	ra,r8
  NIOS2_READ_STATUS (context);
    ddec:	0007303a 	rdctl	r3,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ddf0:	00bfff84 	movi	r2,-2
    ddf4:	1884703a 	and	r2,r3,r2
    ddf8:	1001703a 	wrctl	status,r2
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
    ddfc:	00800044 	movi	r2,1
    de00:	d1201817 	ldw	r4,-32672(gp)
    de04:	114a983a 	sll	r5,r2,r5
    de08:	290ab03a 	or	r5,r5,r4
    de0c:	d1601815 	stw	r5,-32672(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    de10:	d0a01817 	ldw	r2,-32672(gp)
    de14:	100170fa 	wrctl	ienable,r2
  NIOS2_WRITE_STATUS (context);
    de18:	1801703a 	wrctl	status,r3
    return alt_irq_enable(irq);
}
    de1c:	0005883a 	mov	r2,zero
    de20:	f800283a 	ret

0000de24 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    de24:	f811883a 	mov	r8,ra
    de28:	000e1ac0 	call	e1ac <_mcount>
    de2c:	403f883a 	mov	ra,r8
  NIOS2_READ_STATUS (context);
    de30:	0007303a 	rdctl	r3,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    de34:	00bfff84 	movi	r2,-2
    de38:	1884703a 	and	r2,r3,r2
    de3c:	1001703a 	wrctl	status,r2
  alt_irq_active &= ~(1 << id);
    de40:	00bfff84 	movi	r2,-2
    de44:	d1201817 	ldw	r4,-32672(gp)
    de48:	114a183a 	rol	r5,r2,r5
    de4c:	290a703a 	and	r5,r5,r4
    de50:	d1601815 	stw	r5,-32672(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    de54:	d0a01817 	ldw	r2,-32672(gp)
    de58:	100170fa 	wrctl	ienable,r2
  NIOS2_WRITE_STATUS (context);
    de5c:	1801703a 	wrctl	status,r3
    return alt_irq_disable(irq);
}
    de60:	0005883a 	mov	r2,zero
    de64:	f800283a 	ret

0000de68 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    de68:	f811883a 	mov	r8,ra
    de6c:	000e1ac0 	call	e1ac <_mcount>
    de70:	403f883a 	mov	ra,r8
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    de74:	000730fa 	rdctl	r3,ienable

    return (irq_enabled & (1 << irq)) ? 1: 0;
    de78:	00800044 	movi	r2,1
    de7c:	1144983a 	sll	r2,r2,r5
    de80:	10c4703a 	and	r2,r2,r3
}
    de84:	1004c03a 	cmpne	r2,r2,zero
    de88:	f800283a 	ret

0000de8c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    de8c:	f811883a 	mov	r8,ra
    de90:	000e1ac0 	call	e1ac <_mcount>
    de94:	403f883a 	mov	ra,r8
  int rc = -EINVAL;  
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  alt_irq_context status;

  if (id < ALT_NIRQ)
    de98:	28c00808 	cmpgei	r3,r5,32
    de9c:	1800161e 	bne	r3,zero,def8 <alt_iic_isr_register+0x6c>
{
    dea0:	defffe04 	addi	sp,sp,-8
    dea4:	dfc00115 	stw	ra,4(sp)
    dea8:	dc000015 	stw	r16,0(sp)
  NIOS2_READ_STATUS (context);
    deac:	0021303a 	rdctl	r16,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    deb0:	00ffff84 	movi	r3,-2
    deb4:	80c6703a 	and	r3,r16,r3
    deb8:	1801703a 	wrctl	status,r3
     * state.
     */

    status = alt_irq_disable_all();

    alt_irq[id].handler = isr;
    debc:	280490fa 	slli	r2,r5,3
    dec0:	00c00074 	movhi	r3,1
    dec4:	18c93f04 	addi	r3,r3,9468
    dec8:	1885883a 	add	r2,r3,r2
    decc:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = isr_context;
    ded0:	11c00115 	stw	r7,4(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ded4:	30000626 	beq	r6,zero,def0 <alt_iic_isr_register+0x64>
    ded8:	000dde00 	call	dde0 <alt_ic_irq_enable>
  NIOS2_WRITE_STATUS (context);
    dedc:	8001703a 	wrctl	status,r16

    alt_irq_enable_all(status);
  }

  return rc; 
}
    dee0:	dfc00117 	ldw	ra,4(sp)
    dee4:	dc000017 	ldw	r16,0(sp)
    dee8:	dec00204 	addi	sp,sp,8
    deec:	f800283a 	ret
    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    def0:	000de240 	call	de24 <alt_ic_irq_disable>
    def4:	003ff906 	br	dedc <alt_iic_isr_register+0x50>
  int rc = -EINVAL;  
    def8:	00bffa84 	movi	r2,-22
}
    defc:	f800283a 	ret

0000df00 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    df00:	f811883a 	mov	r8,ra
    df04:	000e1ac0 	call	e1ac <_mcount>
    df08:	403f883a 	mov	ra,r8
    df0c:	deffed04 	addi	sp,sp,-76
    df10:	dfc01215 	stw	ra,72(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    df14:	20001316 	blt	r4,zero,df64 <isatty+0x64>
    df18:	20800324 	muli	r2,r4,12
    df1c:	00c00074 	movhi	r3,1
    df20:	18c44504 	addi	r3,r3,4372
    df24:	10c5883a 	add	r2,r2,r3
  
  if (fd)
    df28:	10000e26 	beq	r2,zero,df64 <isatty+0x64>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    df2c:	10800017 	ldw	r2,0(r2)
    df30:	10800817 	ldw	r2,32(r2)
    df34:	10000726 	beq	r2,zero,df54 <isatty+0x54>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    df38:	d80b883a 	mov	r5,sp
    df3c:	000db380 	call	db38 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    df40:	d8800117 	ldw	r2,4(sp)
    df44:	10880020 	cmpeqi	r2,r2,8192
  else
  {
    ALT_ERRNO = EBADFD;
    return 0;
  }
}
    df48:	dfc01217 	ldw	ra,72(sp)
    df4c:	dec01304 	addi	sp,sp,76
    df50:	f800283a 	ret
      return 1;
    df54:	00800044 	movi	r2,1
}
    df58:	dfc01217 	ldw	ra,72(sp)
    df5c:	dec01304 	addi	sp,sp,76
    df60:	f800283a 	ret
    df64:	d0a00917 	ldw	r2,-32732(gp)
    df68:	10000726 	beq	r2,zero,df88 <isatty+0x88>
    df6c:	103ee83a 	callr	r2
    ALT_ERRNO = EBADFD;
    df70:	00c01444 	movi	r3,81
    df74:	10c00015 	stw	r3,0(r2)
    return 0;
    df78:	0005883a 	mov	r2,zero
}
    df7c:	dfc01217 	ldw	ra,72(sp)
    df80:	dec01304 	addi	sp,sp,76
    df84:	f800283a 	ret
    df88:	d0a01304 	addi	r2,gp,-32692
    df8c:	003ff806 	br	df70 <isatty+0x70>

0000df90 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
    df90:	f811883a 	mov	r8,ra
    df94:	000e1ac0 	call	e1ac <_mcount>
    df98:	403f883a 	mov	ra,r8
    df9c:	defffe04 	addi	sp,sp,-8
    dfa0:	dfc00115 	stw	ra,4(sp)
    dfa4:	dc000015 	stw	r16,0(sp)
  int status = 0;

  if (pid <= 0)
    dfa8:	01003a16 	blt	zero,r4,e094 <kill+0x104>
  {
    switch (sig)
    dfac:	28800828 	cmpgeui	r2,r5,32
    dfb0:	1000271e 	bne	r2,zero,e050 <kill+0xc0>
    dfb4:	280a90ba 	slli	r5,r5,2
    dfb8:	00800074 	movhi	r2,1
    dfbc:	2885883a 	add	r2,r5,r2
    dfc0:	10b7f217 	ldw	r2,-8248(r2)
    dfc4:	1000683a 	jmp	r2
    dfc8:	0000e078 	rdprs	zero,zero,897
    dfcc:	0000e050 	cmplti	zero,zero,897
    dfd0:	0000e050 	cmplti	zero,zero,897
    dfd4:	0000e048 	cmpgei	zero,zero,897
    dfd8:	0000e048 	cmpgei	zero,zero,897
    dfdc:	0000e048 	cmpgei	zero,zero,897
    dfe0:	0000e048 	cmpgei	zero,zero,897
    dfe4:	0000e050 	cmplti	zero,zero,897
    dfe8:	0000e048 	cmpgei	zero,zero,897
    dfec:	0000e048 	cmpgei	zero,zero,897
    dff0:	0000e048 	cmpgei	zero,zero,897
    dff4:	0000e048 	cmpgei	zero,zero,897
    dff8:	0000e048 	cmpgei	zero,zero,897
    dffc:	0000e048 	cmpgei	zero,zero,897
    e000:	0000e048 	cmpgei	zero,zero,897
    e004:	0000e048 	cmpgei	zero,zero,897
    e008:	0000e078 	rdprs	zero,zero,897
    e00c:	0000e050 	cmplti	zero,zero,897
    e010:	0000e050 	cmplti	zero,zero,897
    e014:	0000e050 	cmplti	zero,zero,897
    e018:	0000e078 	rdprs	zero,zero,897
    e01c:	0000e050 	cmplti	zero,zero,897
    e020:	0000e050 	cmplti	zero,zero,897
    e024:	0000e048 	cmpgei	zero,zero,897
    e028:	0000e048 	cmpgei	zero,zero,897
    e02c:	0000e048 	cmpgei	zero,zero,897
    e030:	0000e048 	cmpgei	zero,zero,897
    e034:	0000e048 	cmpgei	zero,zero,897
    e038:	0000e050 	cmplti	zero,zero,897
    e03c:	0000e050 	cmplti	zero,zero,897
    e040:	0000e048 	cmpgei	zero,zero,897
    e044:	0000e048 	cmpgei	zero,zero,897
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
    e048:	0009883a 	mov	r4,zero
    e04c:	000daf40 	call	daf4 <_exit>
  if (pid <= 0)
    e050:	04000584 	movi	r16,22
    e054:	d0a00917 	ldw	r2,-32732(gp)
    e058:	10000c26 	beq	r2,zero,e08c <kill+0xfc>
    e05c:	103ee83a 	callr	r2
    status = ESRCH;
  }

  if (status)
  {
    ALT_ERRNO = status;
    e060:	14000015 	stw	r16,0(r2)
    return -1;
    e064:	00bfffc4 	movi	r2,-1
  }

  return 0;
}
    e068:	dfc00117 	ldw	ra,4(sp)
    e06c:	dc000017 	ldw	r16,0(sp)
    e070:	dec00204 	addi	sp,sp,8
    e074:	f800283a 	ret
  if (pid <= 0)
    e078:	0005883a 	mov	r2,zero
}
    e07c:	dfc00117 	ldw	ra,4(sp)
    e080:	dc000017 	ldw	r16,0(sp)
    e084:	dec00204 	addi	sp,sp,8
    e088:	f800283a 	ret
    e08c:	d0a01304 	addi	r2,gp,-32692
    e090:	003ff306 	br	e060 <kill+0xd0>
    status = ESRCH;
    e094:	040000c4 	movi	r16,3
    e098:	003fee06 	br	e054 <kill+0xc4>

0000e09c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    e09c:	f811883a 	mov	r8,ra
    e0a0:	000e1ac0 	call	e1ac <_mcount>
    e0a4:	403f883a 	mov	ra,r8
    e0a8:	defffe04 	addi	sp,sp,-8
    e0ac:	dfc00115 	stw	ra,4(sp)
    e0b0:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e0b4:	20000f16 	blt	r4,zero,e0f4 <lseek+0x58>
    e0b8:	21000324 	muli	r4,r4,12
    e0bc:	00800074 	movhi	r2,1
    e0c0:	10844504 	addi	r2,r2,4372
    e0c4:	2089883a 	add	r4,r4,r2
  
  if (fd) 
    e0c8:	20000a26 	beq	r4,zero,e0f4 <lseek+0x58>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    e0cc:	20800017 	ldw	r2,0(r4)
    e0d0:	10800717 	ldw	r2,28(r2)
    e0d4:	10001026 	beq	r2,zero,e118 <lseek+0x7c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    e0d8:	103ee83a 	callr	r2
    rc = -EBADFD;
  }

  if (rc < 0)
  {
    ALT_ERRNO = -rc;
    e0dc:	00a1c83a 	sub	r16,zero,r2
  if (rc < 0)
    e0e0:	10000516 	blt	r2,zero,e0f8 <lseek+0x5c>
    rc = -1;
  }

  return rc;
}
    e0e4:	dfc00117 	ldw	ra,4(sp)
    e0e8:	dc000017 	ldw	r16,0(sp)
    e0ec:	dec00204 	addi	sp,sp,8
    e0f0:	f800283a 	ret
    e0f4:	04001444 	movi	r16,81
    e0f8:	d0a00917 	ldw	r2,-32732(gp)
    e0fc:	10000426 	beq	r2,zero,e110 <lseek+0x74>
    e100:	103ee83a 	callr	r2
    ALT_ERRNO = -rc;
    e104:	14000015 	stw	r16,0(r2)
    rc = -1;
    e108:	00bfffc4 	movi	r2,-1
  return rc;
    e10c:	003ff506 	br	e0e4 <lseek+0x48>
    e110:	d0a01304 	addi	r2,gp,-32692
    e114:	003ffb06 	br	e104 <lseek+0x68>
    e118:	04002184 	movi	r16,134
    e11c:	003ff606 	br	e0f8 <lseek+0x5c>

0000e120 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    e120:	f811883a 	mov	r8,ra
    e124:	000e1ac0 	call	e1ac <_mcount>
    e128:	403f883a 	mov	ra,r8
    e12c:	defffe04 	addi	sp,sp,-8
    e130:	dfc00115 	stw	ra,4(sp)
    e134:	dc000015 	stw	r16,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    e138:	0009883a 	mov	r4,zero
    e13c:	000e5ac0 	call	e5ac <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    e140:	000e5d80 	call	e5d8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    e144:	01800074 	movhi	r6,1
    e148:	31819b04 	addi	r6,r6,1644
    e14c:	300b883a 	mov	r5,r6
    e150:	3009883a 	mov	r4,r6
    e154:	000f1900 	call	f190 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    e158:	000f0100 	call	f010 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    e15c:	01000074 	movhi	r4,1
    e160:	213c1904 	addi	r4,r4,-3996
    e164:	000f6500 	call	f650 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    e168:	d1a01917 	ldw	r6,-32668(gp)
    e16c:	d1601a17 	ldw	r5,-32664(gp)
    e170:	d1201b17 	ldw	r4,-32660(gp)
    e174:	00002f80 	call	2f8 <main>
  close(STDOUT_FILENO);
    e178:	01000044 	movi	r4,1
  result = main (alt_argc, alt_argv, alt_envp);
    e17c:	1021883a 	mov	r16,r2
  close(STDOUT_FILENO);
    e180:	000d9f40 	call	d9f4 <close>
  exit (result);
    e184:	8009883a 	mov	r4,r16
    e188:	00004ac0 	call	4ac <exit>

0000e18c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    e18c:	f811883a 	mov	r8,ra
    e190:	000e1ac0 	call	e1ac <_mcount>
    e194:	403f883a 	mov	ra,r8
}
    e198:	f800283a 	ret

0000e19c <__malloc_unlock>:
    e19c:	f811883a 	mov	r8,ra
    e1a0:	000e1ac0 	call	e1ac <_mcount>
    e1a4:	403f883a 	mov	ra,r8
    e1a8:	f800283a 	ret

0000e1ac <_mcount>:
         * of values for bits 4:2 won't be even (aligning on cache line boundaries
         * will skew it).  Higher bits should be fairly random.
         */
        /* fn_head = mcount_fn_head + (((unsigned int)self_pc >> 5) & (HASH_BUCKETS - 1)); */

        srli    r2, ra, 3
    e1ac:	f804d0fa 	srli	r2,ra,3
        movhi   r3, %hiadj(__mcount_fn_head)
    e1b0:	00c00074 	movhi	r3,1
        addi    r3, r3, %lo(__mcount_fn_head)
    e1b4:	18c8ff04 	addi	r3,r3,9212
        andi    r2, r2, 0xFC
    e1b8:	10803f0c 	andi	r2,r2,252
        add     r11, r2, r3
    e1bc:	10d7883a 	add	r11,r2,r3
        /* The fast case is where we have already allocated a function arc, and so
         * also a function pointer.
         */

        /* First find the function being called (using self_pc) */
        mov     r10, r11
    e1c0:	5815883a 	mov	r10,r11
0:
        ldw     r10, 0(r10)
    e1c4:	52800017 	ldw	r10,0(r10)
        beq     r10, zero, .Lnew_arc
    e1c8:	50000726 	beq	r10,zero,e1e8 <_mcount+0x3c>
        ldw     r2, 4(r10)
    e1cc:	50800117 	ldw	r2,4(r10)
        bne     r2, ra, 0b
    e1d0:	17fffc1e 	bne	r2,ra,e1c4 <_mcount+0x18>

        /* Found a function entry for this PC. Now look for an arc with a matching
         * from_pc value. There will always be at least one arc. */
        ldw     r3, 8(r10)
    e1d4:	50c00217 	ldw	r3,8(r10)
0:
        ldw     r2, 4(r3)
    e1d8:	18800117 	ldw	r2,4(r3)
        beq     r2, r8, .Lfound_arc
    e1dc:	12001626 	beq	r2,r8,e238 <_mcount+0x8c>
        ldw     r3, 0(r3)
    e1e0:	18c00017 	ldw	r3,0(r3)
        bne     r3, zero, 0b
    e1e4:	183ffc1e 	bne	r3,zero,e1d8 <_mcount+0x2c>

.Lnew_arc:
        addi    sp, sp, -24
    e1e8:	defffa04 	addi	sp,sp,-24

.LCFI0:
        stw     ra, 0(sp)
    e1ec:	dfc00015 	stw	ra,0(sp)
        stw     r4, 4(sp)
    e1f0:	d9000115 	stw	r4,4(sp)
        stw     r5, 8(sp)
    e1f4:	d9400215 	stw	r5,8(sp)
        stw     r6, 12(sp)
    e1f8:	d9800315 	stw	r6,12(sp)
        stw     r7, 16(sp)
    e1fc:	d9c00415 	stw	r7,16(sp)
        stw     r8, 20(sp)
    e200:	da000515 	stw	r8,20(sp)

.LCFI1:
        /* __mcount_record(orig_ra, orig_r8, fn_entry, *fn_head); */
        mov     r4, ra
    e204:	f809883a 	mov	r4,ra
        mov     r5, r8
    e208:	400b883a 	mov	r5,r8
        mov     r6, r10
    e20c:	500d883a 	mov	r6,r10
        mov     r7, r11
    e210:	580f883a 	mov	r7,r11
        call     __mcount_record
    e214:	000dc180 	call	dc18 <__mcount_record>
        
        /* restore registers from the stack */
        ldw     ra, 0(sp)
    e218:	dfc00017 	ldw	ra,0(sp)
        ldw     r4, 4(sp)
    e21c:	d9000117 	ldw	r4,4(sp)
        ldw     r5, 8(sp)
    e220:	d9400217 	ldw	r5,8(sp)
        ldw     r6, 12(sp)
    e224:	d9800317 	ldw	r6,12(sp)
        ldw     r7, 16(sp)
    e228:	d9c00417 	ldw	r7,16(sp)
        ldw     r8, 20(sp)
    e22c:	da000517 	ldw	r8,20(sp)

        addi    sp, sp, 24
    e230:	dec00604 	addi	sp,sp,24

.LCFI2:
        ret
    e234:	f800283a 	ret

.Lfound_arc:
        /* We've found the correct arc record.  Increment the count and return */
        ldw     r2, 8(r3)
    e238:	18800217 	ldw	r2,8(r3)
        addi    r2, r2, 1
    e23c:	10800044 	addi	r2,r2,1
        stw     r2, 8(r3)
    e240:	18800215 	stw	r2,8(r3)
        ret
    e244:	f800283a 	ret

0000e248 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    e248:	f811883a 	mov	r8,ra
    e24c:	000e1ac0 	call	e1ac <_mcount>
    e250:	403f883a 	mov	ra,r8
    e254:	defffe04 	addi	sp,sp,-8
    e258:	dfc00115 	stw	ra,4(sp)
    e25c:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e260:	20001416 	blt	r4,zero,e2b4 <read+0x6c>
    e264:	21000324 	muli	r4,r4,12
    e268:	00800074 	movhi	r2,1
    e26c:	10844504 	addi	r2,r2,4372
    e270:	2089883a 	add	r4,r4,r2
  
  if (fd)
    e274:	20000f26 	beq	r4,zero,e2b4 <read+0x6c>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e278:	20800217 	ldw	r2,8(r4)
    e27c:	108000cc 	andi	r2,r2,3
    e280:	10800060 	cmpeqi	r2,r2,1
    e284:	1000121e 	bne	r2,zero,e2d0 <read+0x88>
        (fd->dev->read))
    e288:	20800017 	ldw	r2,0(r4)
    e28c:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    e290:	10000f26 	beq	r2,zero,e2d0 <read+0x88>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    e294:	103ee83a 	callr	r2
    e298:	1021883a 	mov	r16,r2
    e29c:	10001316 	blt	r2,zero,e2ec <read+0xa4>
  else
  {
    ALT_ERRNO = EBADFD;
  }
  return -1;
}
    e2a0:	8005883a 	mov	r2,r16
    e2a4:	dfc00117 	ldw	ra,4(sp)
    e2a8:	dc000017 	ldw	r16,0(sp)
    e2ac:	dec00204 	addi	sp,sp,8
    e2b0:	f800283a 	ret
    e2b4:	d0a00917 	ldw	r2,-32732(gp)
    e2b8:	10001326 	beq	r2,zero,e308 <read+0xc0>
    e2bc:	103ee83a 	callr	r2
    ALT_ERRNO = EBADFD;
    e2c0:	00c01444 	movi	r3,81
    e2c4:	10c00015 	stw	r3,0(r2)
  return -1;
    e2c8:	043fffc4 	movi	r16,-1
    e2cc:	003ff406 	br	e2a0 <read+0x58>
    e2d0:	d0a00917 	ldw	r2,-32732(gp)
    e2d4:	10000e26 	beq	r2,zero,e310 <read+0xc8>
    e2d8:	103ee83a 	callr	r2
        ALT_ERRNO = EACCES;
    e2dc:	00c00344 	movi	r3,13
    e2e0:	10c00015 	stw	r3,0(r2)
  return -1;
    e2e4:	043fffc4 	movi	r16,-1
    e2e8:	003fed06 	br	e2a0 <read+0x58>
    e2ec:	d0a00917 	ldw	r2,-32732(gp)
    e2f0:	10000926 	beq	r2,zero,e318 <read+0xd0>
    e2f4:	103ee83a 	callr	r2
          ALT_ERRNO = -rval;
    e2f8:	0421c83a 	sub	r16,zero,r16
    e2fc:	14000015 	stw	r16,0(r2)
          return -1;
    e300:	043fffc4 	movi	r16,-1
    e304:	003fe606 	br	e2a0 <read+0x58>
    e308:	d0a01304 	addi	r2,gp,-32692
    e30c:	003fec06 	br	e2c0 <read+0x78>
    e310:	d0a01304 	addi	r2,gp,-32692
    e314:	003ff106 	br	e2dc <read+0x94>
    e318:	d0a01304 	addi	r2,gp,-32692
    e31c:	003ff606 	br	e2f8 <read+0xb0>

0000e320 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    e320:	f811883a 	mov	r8,ra
    e324:	000e1ac0 	call	e1ac <_mcount>
    e328:	403f883a 	mov	ra,r8
  if (fd > 2)
    e32c:	208000d0 	cmplti	r2,r4,3
    e330:	1000061e 	bne	r2,zero,e34c <alt_release_fd+0x2c>
  {
    alt_fd_list[fd].fd_flags = 0;
    e334:	21000324 	muli	r4,r4,12
    e338:	00800074 	movhi	r2,1
    e33c:	10844504 	addi	r2,r2,4372
    e340:	1109883a 	add	r4,r2,r4
    e344:	20000215 	stw	zero,8(r4)
    alt_fd_list[fd].dev      = 0;
    e348:	20000015 	stw	zero,0(r4)
  }
}
    e34c:	f800283a 	ret

0000e350 <sbrk>:
  NIOS2_READ_STATUS (context);
    e350:	000b303a 	rdctl	r5,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e354:	00bfff84 	movi	r2,-2
    e358:	2884703a 	and	r2,r5,r2
    e35c:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    e360:	d0a00c17 	ldw	r2,-32720(gp)
    e364:	01bfff04 	movi	r6,-4
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    e368:	00c20034 	movhi	r3,2048
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    e36c:	108000c4 	addi	r2,r2,3
    e370:	1184703a 	and	r2,r2,r6
    e374:	d0a00c15 	stw	r2,-32720(gp)
  if ((heap_end + incr) > __alt_heap_limit) {
    e378:	1109883a 	add	r4,r2,r4
    e37c:	18c00004 	addi	r3,r3,0
    e380:	19000336 	bltu	r3,r4,e390 <sbrk+0x40>
    return (caddr_t)-1;
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
    e384:	d1200c15 	stw	r4,-32720(gp)
  NIOS2_WRITE_STATUS (context);
    e388:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
    e38c:	f800283a 	ret
    e390:	2801703a 	wrctl	status,r5
    return (caddr_t)-1;
    e394:	00bfffc4 	movi	r2,-1
    e398:	f800283a 	ret

0000e39c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    e39c:	f811883a 	mov	r8,ra
    e3a0:	000e1ac0 	call	e1ac <_mcount>
    e3a4:	403f883a 	mov	ra,r8
  NIOS2_READ_STATUS (context);
    e3a8:	0007303a 	rdctl	r3,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e3ac:	00bfff84 	movi	r2,-2
    e3b0:	1884703a 	and	r2,r3,r2
    e3b4:	1001703a 	wrctl	status,r2
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    e3b8:	21400017 	ldw	r5,0(r4)
    e3bc:	20800117 	ldw	r2,4(r4)
    e3c0:	28800115 	stw	r2,4(r5)
  entry->previous->next = entry->next;
    e3c4:	11400015 	stw	r5,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    e3c8:	21000115 	stw	r4,4(r4)
  entry->next     = entry;
    e3cc:	21000015 	stw	r4,0(r4)
  NIOS2_WRITE_STATUS (context);
    e3d0:	1801703a 	wrctl	status,r3
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  alt_llist_remove (&alarm->llist);
  alt_irq_enable_all (irq_context);
}
    e3d4:	f800283a 	ret

0000e3d8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    e3d8:	f811883a 	mov	r8,ra
    e3dc:	000e1ac0 	call	e1ac <_mcount>
    e3e0:	403f883a 	mov	ra,r8
    e3e4:	defffa04 	addi	sp,sp,-24
    e3e8:	dfc00515 	stw	ra,20(sp)
    e3ec:	dd000415 	stw	r20,16(sp)
    e3f0:	dcc00315 	stw	r19,12(sp)
    e3f4:	dc800215 	stw	r18,8(sp)
    e3f8:	dc400115 	stw	r17,4(sp)
    e3fc:	dc000015 	stw	r16,0(sp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    e400:	d0a01c17 	ldw	r2,-32656(gp)
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    e404:	d4600d17 	ldw	r17,-32716(gp)
    e408:	d5200d04 	addi	r20,gp,-32716
  _alt_nticks++;
    e40c:	10800044 	addi	r2,r2,1
    e410:	d0a01c15 	stw	r2,-32656(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    e414:	8d000d26 	beq	r17,r20,e44c <alt_tick+0x74>
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
        {
          alarm->rollover = 1;
    e418:	04c00044 	movi	r19,1
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e41c:	04bfff84 	movi	r18,-2
    if ((alarm->rollover) && (_alt_nticks == 0))
    e420:	88800403 	ldbu	r2,16(r17)
    e424:	8821883a 	mov	r16,r17
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    e428:	80c00217 	ldw	r3,8(r16)
    next = (alt_alarm*) alarm->llist.next;
    e42c:	8c400017 	ldw	r17,0(r17)
    if ((alarm->rollover) && (_alt_nticks == 0))
    e430:	10000326 	beq	r2,zero,e440 <alt_tick+0x68>
    e434:	d0a01c17 	ldw	r2,-32656(gp)
    e438:	10001c1e 	bne	r2,zero,e4ac <alt_tick+0xd4>
      alarm->rollover = 0;
    e43c:	80000405 	stb	zero,16(r16)
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    e440:	d0a01c17 	ldw	r2,-32656(gp)
    e444:	10c0092e 	bgeu	r2,r3,e46c <alt_tick+0x94>
  while (alarm != (alt_alarm*) &alt_alarm_list)
    e448:	8d3ff51e 	bne	r17,r20,e420 <alt_tick+0x48>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
    e44c:	dfc00517 	ldw	ra,20(sp)
    e450:	dd000417 	ldw	r20,16(sp)
    e454:	dcc00317 	ldw	r19,12(sp)
    e458:	dc800217 	ldw	r18,8(sp)
    e45c:	dc400117 	ldw	r17,4(sp)
    e460:	dc000017 	ldw	r16,0(sp)
    e464:	dec00604 	addi	sp,sp,24
    e468:	f800283a 	ret
      next_callback = alarm->callback (alarm->context);
    e46c:	80800317 	ldw	r2,12(r16)
    e470:	81000517 	ldw	r4,20(r16)
    e474:	103ee83a 	callr	r2
      if (next_callback == 0)
    e478:	10000f1e 	bne	r2,zero,e4b8 <alt_tick+0xe0>
  NIOS2_READ_STATUS (context);
    e47c:	0005303a 	rdctl	r2,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e480:	1486703a 	and	r3,r2,r18
    e484:	1801703a 	wrctl	status,r3
  entry->next->previous = entry->previous;
    e488:	81000017 	ldw	r4,0(r16)
    e48c:	80c00117 	ldw	r3,4(r16)
    e490:	20c00115 	stw	r3,4(r4)
  entry->previous->next = entry->next;
    e494:	19000015 	stw	r4,0(r3)
  entry->previous = entry;
    e498:	84000115 	stw	r16,4(r16)
  entry->next     = entry;
    e49c:	84000015 	stw	r16,0(r16)
  NIOS2_WRITE_STATUS (context);
    e4a0:	1001703a 	wrctl	status,r2
  while (alarm != (alt_alarm*) &alt_alarm_list)
    e4a4:	8d3fde1e 	bne	r17,r20,e420 <alt_tick+0x48>
    e4a8:	003fe806 	br	e44c <alt_tick+0x74>
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    e4ac:	d0a01c17 	ldw	r2,-32656(gp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    e4b0:	8d3fdb1e 	bne	r17,r20,e420 <alt_tick+0x48>
    e4b4:	003fe506 	br	e44c <alt_tick+0x74>
        alarm->time += next_callback;
    e4b8:	81000217 	ldw	r4,8(r16)
        if(alarm->time < _alt_nticks)
    e4bc:	d0e01c17 	ldw	r3,-32656(gp)
        alarm->time += next_callback;
    e4c0:	1105883a 	add	r2,r2,r4
    e4c4:	80800215 	stw	r2,8(r16)
        if(alarm->time < _alt_nticks)
    e4c8:	10ffdf2e 	bgeu	r2,r3,e448 <alt_tick+0x70>
          alarm->rollover = 1;
    e4cc:	84c00405 	stb	r19,16(r16)
  while (alarm != (alt_alarm*) &alt_alarm_list)
    e4d0:	8d3fd31e 	bne	r17,r20,e420 <alt_tick+0x48>
    e4d4:	003fdd06 	br	e44c <alt_tick+0x74>

0000e4d8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    e4d8:	f811883a 	mov	r8,ra
    e4dc:	000e1ac0 	call	e1ac <_mcount>
    e4e0:	403f883a 	mov	ra,r8
    e4e4:	defffe04 	addi	sp,sp,-8
    e4e8:	dfc00115 	stw	ra,4(sp)
    e4ec:	dc000015 	stw	r16,0(sp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    e4f0:	20001a16 	blt	r4,zero,e55c <write+0x84>
    e4f4:	21000324 	muli	r4,r4,12
    e4f8:	00800074 	movhi	r2,1
    e4fc:	10844504 	addi	r2,r2,4372
    e500:	2089883a 	add	r4,r4,r2
  
  if (fd)
    e504:	20001526 	beq	r4,zero,e55c <write+0x84>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    e508:	20800217 	ldw	r2,8(r4)
    e50c:	108000cc 	andi	r2,r2,3
    e510:	10000b26 	beq	r2,zero,e540 <write+0x68>
    e514:	20800017 	ldw	r2,0(r4)
    e518:	10800617 	ldw	r2,24(r2)
    e51c:	10000826 	beq	r2,zero,e540 <write+0x68>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    e520:	103ee83a 	callr	r2
    e524:	1021883a 	mov	r16,r2
    e528:	10001316 	blt	r2,zero,e578 <write+0xa0>
  else  
  {
    ALT_ERRNO = EBADFD;
  }
  return -1;
}
    e52c:	8005883a 	mov	r2,r16
    e530:	dfc00117 	ldw	ra,4(sp)
    e534:	dc000017 	ldw	r16,0(sp)
    e538:	dec00204 	addi	sp,sp,8
    e53c:	f800283a 	ret
    e540:	d0a00917 	ldw	r2,-32732(gp)
    e544:	10001326 	beq	r2,zero,e594 <write+0xbc>
    e548:	103ee83a 	callr	r2
      ALT_ERRNO = EACCES;
    e54c:	00c00344 	movi	r3,13
    e550:	10c00015 	stw	r3,0(r2)
  return -1;
    e554:	043fffc4 	movi	r16,-1
    e558:	003ff406 	br	e52c <write+0x54>
    e55c:	d0a00917 	ldw	r2,-32732(gp)
    e560:	10000e26 	beq	r2,zero,e59c <write+0xc4>
    e564:	103ee83a 	callr	r2
    ALT_ERRNO = EBADFD;
    e568:	00c01444 	movi	r3,81
    e56c:	10c00015 	stw	r3,0(r2)
  return -1;
    e570:	043fffc4 	movi	r16,-1
    e574:	003fed06 	br	e52c <write+0x54>
    e578:	d0a00917 	ldw	r2,-32732(gp)
    e57c:	10000926 	beq	r2,zero,e5a4 <write+0xcc>
    e580:	103ee83a 	callr	r2
        ALT_ERRNO = -rval;
    e584:	0421c83a 	sub	r16,zero,r16
    e588:	14000015 	stw	r16,0(r2)
        return -1;
    e58c:	043fffc4 	movi	r16,-1
    e590:	003fe606 	br	e52c <write+0x54>
    e594:	d0a01304 	addi	r2,gp,-32692
    e598:	003fec06 	br	e54c <write+0x74>
    e59c:	d0a01304 	addi	r2,gp,-32692
    e5a0:	003ff106 	br	e568 <write+0x90>
    e5a4:	d0a01304 	addi	r2,gp,-32692
    e5a8:	003ff606 	br	e584 <write+0xac>

0000e5ac <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    e5ac:	f811883a 	mov	r8,ra
    e5b0:	000e1ac0 	call	e1ac <_mcount>
    e5b4:	403f883a 	mov	ra,r8
    e5b8:	deffff04 	addi	sp,sp,-4
    e5bc:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
    e5c0:	000f4180 	call	f418 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    e5c4:	00800044 	movi	r2,1
    e5c8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    e5cc:	dfc00017 	ldw	ra,0(sp)
    e5d0:	dec00104 	addi	sp,sp,4
    e5d4:	f800283a 	ret

0000e5d8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    e5d8:	f811883a 	mov	r8,ra
    e5dc:	000e1ac0 	call	e1ac <_mcount>
    e5e0:	403f883a 	mov	ra,r8
    e5e4:	deffff04 	addi	sp,sp,-4
    e5e8:	dfc00015 	stw	ra,0(sp)
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
    e5ec:	01020034 	movhi	r4,2048
    e5f0:	01c0fa04 	movi	r7,1000
    e5f4:	000d883a 	mov	r6,zero
    e5f8:	000b883a 	mov	r5,zero
    e5fc:	21041004 	addi	r4,r4,4160
    e600:	000ecc00 	call	ecc0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
    e604:	01000074 	movhi	r4,1
    e608:	01800044 	movi	r6,1
    e60c:	000b883a 	mov	r5,zero
    e610:	2104c204 	addi	r4,r4,4872
    e614:	000e8140 	call	e814 <altera_avalon_jtag_uart_init>

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    e618:	01000074 	movhi	r4,1
    e61c:	d1600504 	addi	r5,gp,-32748
    e620:	2104b804 	addi	r4,r4,4832
    e624:	000ef980 	call	ef98 <alt_dev_llist_insert>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
    e628:	00c00044 	movi	r3,1
    e62c:	00820034 	movhi	r2,2048
    e630:	10c40035 	stwio	r3,4096(r2)
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
}
    e634:	dfc00017 	ldw	ra,0(sp)
    e638:	dec00104 	addi	sp,sp,4
    e63c:	f800283a 	ret

0000e640 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    e640:	f811883a 	mov	r8,ra
    e644:	000e1ac0 	call	e1ac <_mcount>
    e648:	403f883a 	mov	ra,r8
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    e64c:	20800017 	ldw	r2,0(r4)
    e650:	21c00217 	ldw	r7,8(r4)
    e654:	11000a04 	addi	r4,r2,40
    e658:	000e9781 	jmpi	e978 <altera_avalon_jtag_uart_read>

0000e65c <altera_avalon_jtag_uart_write_fd>:
      fd->fd_flags);
}

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    e65c:	f811883a 	mov	r8,ra
    e660:	000e1ac0 	call	e1ac <_mcount>
    e664:	403f883a 	mov	ra,r8
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    e668:	20800017 	ldw	r2,0(r4)
    e66c:	21c00217 	ldw	r7,8(r4)
    e670:	11000a04 	addi	r4,r2,40
    e674:	000eac81 	jmpi	eac8 <altera_avalon_jtag_uart_write>

0000e678 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    e678:	f811883a 	mov	r8,ra
    e67c:	000e1ac0 	call	e1ac <_mcount>
    e680:	403f883a 	mov	ra,r8
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    e684:	20800017 	ldw	r2,0(r4)
    e688:	21400217 	ldw	r5,8(r4)
    e68c:	11000a04 	addi	r4,r2,40
    e690:	000e8981 	jmpi	e898 <altera_avalon_jtag_uart_close>

0000e694 <altera_avalon_jtag_uart_ioctl_fd>:
}

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    e694:	f811883a 	mov	r8,ra
    e698:	000e1ac0 	call	e1ac <_mcount>
    e69c:	403f883a 	mov	ra,r8
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    e6a0:	21000017 	ldw	r4,0(r4)
    e6a4:	21000a04 	addi	r4,r4,40
    e6a8:	000e8ec1 	jmpi	e8ec <altera_avalon_jtag_uart_ioctl>

0000e6ac <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e6ac:	f811883a 	mov	r8,ra
    e6b0:	000e1ac0 	call	e1ac <_mcount>
    e6b4:	403f883a 	mov	ra,r8
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e6b8:	20c00017 	ldw	r3,0(r4)
    e6bc:	18800137 	ldwio	r2,4(r3)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e6c0:	1081000c 	andi	r2,r2,1024
    e6c4:	10000626 	beq	r2,zero,e6e0 <altera_avalon_jtag_uart_timeout+0x34>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e6c8:	20800817 	ldw	r2,32(r4)
    e6cc:	10810014 	ori	r2,r2,1024
    e6d0:	18800135 	stwio	r2,4(r3)
    sp->host_inactive = 0;
    e6d4:	20000915 	stw	zero,36(r4)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e6d8:	d0a01d17 	ldw	r2,-32652(gp)
    e6dc:	f800283a 	ret
  else if (sp->host_inactive < INT_MAX - 2) {
    e6e0:	20c00917 	ldw	r3,36(r4)
    e6e4:	00a00034 	movhi	r2,32768
    e6e8:	10bfff04 	addi	r2,r2,-4
    e6ec:	10fffa36 	bltu	r2,r3,e6d8 <altera_avalon_jtag_uart_timeout+0x2c>
}
    e6f0:	d0a01d17 	ldw	r2,-32652(gp)
    sp->host_inactive++;
    e6f4:	18c00044 	addi	r3,r3,1
    e6f8:	20c00915 	stw	r3,36(r4)
}
    e6fc:	f800283a 	ret

0000e700 <altera_avalon_jtag_uart_irq>:
{
    e700:	f811883a 	mov	r8,ra
    e704:	000e1ac0 	call	e1ac <_mcount>
    e708:	403f883a 	mov	ra,r8
  unsigned int base = sp->base;
    e70c:	21c00017 	ldw	r7,0(r4)
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e710:	027fff84 	movi	r9,-2
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e714:	02bfff44 	movi	r10,-3
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e718:	3a000104 	addi	r8,r7,4
    e71c:	00000206 	br	e728 <altera_avalon_jtag_uart_irq+0x28>
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e720:	2880800c 	andi	r2,r5,512
    e724:	1000231e 	bne	r2,zero,e7b4 <altera_avalon_jtag_uart_irq+0xb4>
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e728:	41400037 	ldwio	r5,0(r8)
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    e72c:	2880c00c 	andi	r2,r5,768
    e730:	10003726 	beq	r2,zero,e810 <altera_avalon_jtag_uart_irq+0x110>
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    e734:	2880400c 	andi	r2,r5,256
    e738:	103ff926 	beq	r2,zero,e720 <altera_avalon_jtag_uart_irq+0x20>
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e73c:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e740:	20c00b17 	ldw	r3,44(r4)
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e744:	10800044 	addi	r2,r2,1
    e748:	1081ffcc 	andi	r2,r2,2047
        if (next == sp->rx_out)
    e74c:	10c00d1e 	bne	r2,r3,e784 <altera_avalon_jtag_uart_irq+0x84>
    e750:	00001106 	br	e798 <altera_avalon_jtag_uart_irq+0x98>
        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e754:	20800a17 	ldw	r2,40(r4)
    e758:	2085883a 	add	r2,r4,r2
    e75c:	10c00e05 	stb	r3,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e760:	20800a17 	ldw	r2,40(r4)
        if (next == sp->rx_out)
    e764:	21800b17 	ldw	r6,44(r4)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e768:	10800044 	addi	r2,r2,1
    e76c:	1081ffcc 	andi	r2,r2,2047
    e770:	20800a15 	stw	r2,40(r4)
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e774:	20800a17 	ldw	r2,40(r4)
    e778:	10800044 	addi	r2,r2,1
    e77c:	1081ffcc 	andi	r2,r2,2047
        if (next == sp->rx_out)
    e780:	30800326 	beq	r6,r2,e790 <altera_avalon_jtag_uart_irq+0x90>
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    e784:	38c00037 	ldwio	r3,0(r7)
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    e788:	18a0000c 	andi	r2,r3,32768
    e78c:	103ff11e 	bne	r2,zero,e754 <altera_avalon_jtag_uart_irq+0x54>
      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e790:	18ffffec 	andhi	r3,r3,65535
    e794:	183fe226 	beq	r3,zero,e720 <altera_avalon_jtag_uart_irq+0x20>
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e798:	20800817 	ldw	r2,32(r4)
    e79c:	1244703a 	and	r2,r2,r9
    e7a0:	20800815 	stw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e7a4:	40800035 	stwio	r2,0(r8)
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e7a8:	40800037 	ldwio	r2,0(r8)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e7ac:	2880800c 	andi	r2,r5,512
    e7b0:	103fdd26 	beq	r2,zero,e728 <altera_avalon_jtag_uart_irq+0x28>
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e7b4:	280ad43a 	srli	r5,r5,16
      while (space > 0 && sp->tx_out != sp->tx_in)
    e7b8:	28000b1e 	bne	r5,zero,e7e8 <altera_avalon_jtag_uart_irq+0xe8>
    e7bc:	003fda06 	br	e728 <altera_avalon_jtag_uart_irq+0x28>
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e7c0:	20800d17 	ldw	r2,52(r4)
    e7c4:	2085883a 	add	r2,r4,r2
    e7c8:	10820e07 	ldb	r2,2104(r2)
    e7cc:	38800035 	stwio	r2,0(r7)
        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e7d0:	20800d17 	ldw	r2,52(r4)
        space--;
    e7d4:	297fffc4 	addi	r5,r5,-1
        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e7d8:	10800044 	addi	r2,r2,1
    e7dc:	1081ffcc 	andi	r2,r2,2047
    e7e0:	20800d15 	stw	r2,52(r4)
      while (space > 0 && sp->tx_out != sp->tx_in)
    e7e4:	283fd026 	beq	r5,zero,e728 <altera_avalon_jtag_uart_irq+0x28>
    e7e8:	20c00d17 	ldw	r3,52(r4)
    e7ec:	20800c17 	ldw	r2,48(r4)
    e7f0:	18bff31e 	bne	r3,r2,e7c0 <altera_avalon_jtag_uart_irq+0xc0>
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e7f4:	20800817 	ldw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e7f8:	20c00017 	ldw	r3,0(r4)
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e7fc:	1284703a 	and	r2,r2,r10
    e800:	20800815 	stw	r2,32(r4)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e804:	18800135 	stwio	r2,4(r3)
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e808:	40800037 	ldwio	r2,0(r8)
    e80c:	003fc606 	br	e728 <altera_avalon_jtag_uart_irq+0x28>
}
    e810:	f800283a 	ret

0000e814 <altera_avalon_jtag_uart_init>:
{
    e814:	f811883a 	mov	r8,ra
    e818:	000e1ac0 	call	e1ac <_mcount>
    e81c:	403f883a 	mov	ra,r8
    e820:	defffd04 	addi	sp,sp,-12
    e824:	dfc00215 	stw	ra,8(sp)
    e828:	dc000115 	stw	r16,4(sp)
  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e82c:	20c00017 	ldw	r3,0(r4)
{
    e830:	2021883a 	mov	r16,r4
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e834:	00800044 	movi	r2,1
{
    e838:	2809883a 	mov	r4,r5
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e83c:	80800815 	stw	r2,32(r16)
{
    e840:	300b883a 	mov	r5,r6
  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    e844:	18800135 	stwio	r2,4(r3)
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    e848:	01800074 	movhi	r6,1
    e84c:	800f883a 	mov	r7,r16
    e850:	31b9c004 	addi	r6,r6,-6400
    e854:	d8000015 	stw	zero,0(sp)
    e858:	000ddd00 	call	ddd0 <alt_ic_isr_register>
  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e85c:	d1601d17 	ldw	r5,-32652(gp)
    e860:	01800074 	movhi	r6,1
  sp->host_inactive = 0;
    e864:	80000915 	stw	zero,36(r16)
  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    e868:	800f883a 	mov	r7,r16
    e86c:	31b9ab04 	addi	r6,r6,-6484
    e870:	81000204 	addi	r4,r16,8
    e874:	000ef0c0 	call	ef0c <alt_alarm_start>
    e878:	1000030e 	bge	r2,zero,e888 <altera_avalon_jtag_uart_init+0x74>
    sp->timeout = INT_MAX;
    e87c:	00a00034 	movhi	r2,32768
    e880:	10bfffc4 	addi	r2,r2,-1
    e884:	80800115 	stw	r2,4(r16)
}
    e888:	dfc00217 	ldw	ra,8(sp)
    e88c:	dc000117 	ldw	r16,4(sp)
    e890:	dec00304 	addi	sp,sp,12
    e894:	f800283a 	ret

0000e898 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e898:	f811883a 	mov	r8,ra
    e89c:	000e1ac0 	call	e1ac <_mcount>
    e8a0:	403f883a 	mov	ra,r8
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    if (flags & O_NONBLOCK) {
    e8a4:	2890000c 	andi	r2,r5,16384
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e8a8:	21c00c17 	ldw	r7,48(r4)
    e8ac:	10000426 	beq	r2,zero,e8c0 <altera_avalon_jtag_uart_close+0x28>
    e8b0:	00000606 	br	e8cc <altera_avalon_jtag_uart_close+0x34>
    e8b4:	21800917 	ldw	r6,36(r4)
    e8b8:	20c00117 	ldw	r3,4(r4)
    e8bc:	30c0092e 	bgeu	r6,r3,e8e4 <altera_avalon_jtag_uart_close+0x4c>
    e8c0:	20c00d17 	ldw	r3,52(r4)
    e8c4:	38fffb1e 	bne	r7,r3,e8b4 <altera_avalon_jtag_uart_close+0x1c>
      return -EWOULDBLOCK; 
    }
  }

  return 0;
}
    e8c8:	f800283a 	ret
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e8cc:	20800d17 	ldw	r2,52(r4)
    e8d0:	11c00426 	beq	r2,r7,e8e4 <altera_avalon_jtag_uart_close+0x4c>
    e8d4:	21400917 	ldw	r5,36(r4)
    e8d8:	20c00117 	ldw	r3,4(r4)
      return -EWOULDBLOCK; 
    e8dc:	00bffd44 	movi	r2,-11
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e8e0:	28fff936 	bltu	r5,r3,e8c8 <altera_avalon_jtag_uart_close+0x30>
  return 0;
    e8e4:	0005883a 	mov	r2,zero
}
    e8e8:	f800283a 	ret

0000e8ec <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e8ec:	f811883a 	mov	r8,ra
    e8f0:	000e1ac0 	call	e1ac <_mcount>
    e8f4:	403f883a 	mov	ra,r8
  int rc = -ENOTTY;

  switch (req)
    e8f8:	289a8060 	cmpeqi	r2,r5,27137
    e8fc:	10000d1e 	bne	r2,zero,e934 <altera_avalon_jtag_uart_ioctl+0x48>
    e900:	295a80a0 	cmpeqi	r5,r5,27138
    e904:	28000926 	beq	r5,zero,e92c <altera_avalon_jtag_uart_ioctl+0x40>
    }
    break;

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e908:	21400117 	ldw	r5,4(r4)
    e90c:	00a00034 	movhi	r2,32768
    e910:	10bfffc4 	addi	r2,r2,-1
    e914:	28800526 	beq	r5,r2,e92c <altera_avalon_jtag_uart_ioctl+0x40>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e918:	20c00917 	ldw	r3,36(r4)
      rc = 0;
    e91c:	0005883a 	mov	r2,zero
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e920:	1947803a 	cmpltu	r3,r3,r5
    e924:	30c00015 	stw	r3,0(r6)
  default:
    break;
  }

  return rc;
}
    e928:	f800283a 	ret
  int rc = -ENOTTY;
    e92c:	00bff9c4 	movi	r2,-25
}
    e930:	f800283a 	ret
    if (sp->timeout != INT_MAX)
    e934:	20c00117 	ldw	r3,4(r4)
    e938:	00a00034 	movhi	r2,32768
    e93c:	10bfffc4 	addi	r2,r2,-1
    e940:	18bffa26 	beq	r3,r2,e92c <altera_avalon_jtag_uart_ioctl+0x40>
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e944:	30800017 	ldw	r2,0(r6)
    e948:	00e00034 	movhi	r3,32768
    e94c:	18ffff04 	addi	r3,r3,-4
    e950:	117fff84 	addi	r5,r2,-2
    e954:	19400336 	bltu	r3,r5,e964 <altera_avalon_jtag_uart_ioctl+0x78>
    e958:	20800115 	stw	r2,4(r4)
      rc = 0;
    e95c:	0005883a 	mov	r2,zero
}
    e960:	f800283a 	ret
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e964:	00a00034 	movhi	r2,32768
    e968:	10bfff84 	addi	r2,r2,-2
    e96c:	20800115 	stw	r2,4(r4)
      rc = 0;
    e970:	0005883a 	mov	r2,zero
    e974:	003ffa06 	br	e960 <altera_avalon_jtag_uart_ioctl+0x74>

0000e978 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e978:	f811883a 	mov	r8,ra
    e97c:	000e1ac0 	call	e1ac <_mcount>
    e980:	403f883a 	mov	ra,r8
    e984:	defff504 	addi	sp,sp,-44
    e988:	dfc00a15 	stw	ra,40(sp)
    e98c:	df000915 	stw	fp,36(sp)
    e990:	ddc00815 	stw	r23,32(sp)
    e994:	dd800715 	stw	r22,28(sp)
    e998:	dd400615 	stw	r21,24(sp)
    e99c:	dd000515 	stw	r20,20(sp)
    e9a0:	dcc00415 	stw	r19,16(sp)
    e9a4:	dc800315 	stw	r18,12(sp)
    e9a8:	dc400215 	stw	r17,8(sp)
    e9ac:	dc000115 	stw	r16,4(sp)
    /* If we read any data then return it */
    if (ptr != buffer)
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e9b0:	3890000c 	andi	r2,r7,16384
{
    e9b4:	2025883a 	mov	r18,r4
    e9b8:	282d883a 	mov	r22,r5
    e9bc:	3027883a 	mov	r19,r6
    if (flags & O_NONBLOCK)
    e9c0:	d8800015 	stw	r2,0(sp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
    e9c4:	282f883a 	mov	r23,r5
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e9c8:	05420004 	movi	r21,2048
      memcpy(ptr, sp->rx_buf + out, n);
    e9cc:	25000e04 	addi	r20,r4,56
  while (space > 0)
    e9d0:	04c0210e 	bge	zero,r19,ea58 <altera_avalon_jtag_uart_read+0xe0>
      out = sp->rx_out;
    e9d4:	94000b17 	ldw	r16,44(r18)
    e9d8:	00000b06 	br	ea08 <altera_avalon_jtag_uart_read+0x90>
    e9dc:	9823883a 	mov	r17,r19
    e9e0:	14c0012e 	bgeu	r2,r19,e9e8 <altera_avalon_jtag_uart_read+0x70>
    e9e4:	1023883a 	mov	r17,r2
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e9e8:	8c21883a 	add	r16,r17,r16
      memcpy(ptr, sp->rx_buf + out, n);
    e9ec:	880d883a 	mov	r6,r17
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e9f0:	8401ffcc 	andi	r16,r16,2047
      memcpy(ptr, sp->rx_buf + out, n);
    e9f4:	00004ec0 	call	4ec <memcpy>
      space -= n;
    e9f8:	9c67c83a 	sub	r19,r19,r17
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e9fc:	94000b15 	stw	r16,44(r18)
      ptr   += n;
    ea00:	bc6f883a 	add	r23,r23,r17
    while (space > 0);
    ea04:	04c0070e 	bge	zero,r19,ea24 <altera_avalon_jtag_uart_read+0xac>
      in  = sp->rx_in;
    ea08:	97000a17 	ldw	fp,40(r18)
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    ea0c:	ac05c83a 	sub	r2,r21,r16
      if (in >= out)
    ea10:	e4000136 	bltu	fp,r16,ea18 <altera_avalon_jtag_uart_read+0xa0>
        n = in - out;
    ea14:	e405c83a 	sub	r2,fp,r16
      memcpy(ptr, sp->rx_buf + out, n);
    ea18:	a40b883a 	add	r5,r20,r16
    ea1c:	b809883a 	mov	r4,r23
      if (n == 0)
    ea20:	103fee1e 	bne	r2,zero,e9dc <altera_avalon_jtag_uart_read+0x64>
    if (ptr != buffer)
    ea24:	bd800d1e 	bne	r23,r22,ea5c <altera_avalon_jtag_uart_read+0xe4>
    if (flags & O_NONBLOCK)
    ea28:	d8800017 	ldw	r2,0(sp)
    ea2c:	10000426 	beq	r2,zero,ea40 <altera_avalon_jtag_uart_read+0xc8>
    ea30:	00002306 	br	eac0 <altera_avalon_jtag_uart_read+0x148>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    ea34:	91000917 	ldw	r4,36(r18)
    ea38:	90800117 	ldw	r2,4(r18)
    ea3c:	2080022e 	bgeu	r4,r2,ea48 <altera_avalon_jtag_uart_read+0xd0>
    ea40:	90800a17 	ldw	r2,40(r18)
    ea44:	173ffb26 	beq	r2,fp,ea34 <altera_avalon_jtag_uart_read+0xbc>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    ea48:	90800a17 	ldw	r2,40(r18)
    ea4c:	173fe01e 	bne	r2,fp,e9d0 <altera_avalon_jtag_uart_read+0x58>
  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
  else
    return -EIO;
    ea50:	00bffec4 	movi	r2,-5
    ea54:	00000c06 	br	ea88 <altera_avalon_jtag_uart_read+0x110>
  if (ptr != buffer)
    ea58:	bd801726 	beq	r23,r22,eab8 <altera_avalon_jtag_uart_read+0x140>
  NIOS2_READ_STATUS (context);
    ea5c:	0009303a 	rdctl	r4,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ea60:	00bfff84 	movi	r2,-2
    ea64:	2084703a 	and	r2,r4,r2
    ea68:	1001703a 	wrctl	status,r2
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ea6c:	90800817 	ldw	r2,32(r18)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ea70:	91400017 	ldw	r5,0(r18)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    ea74:	10800054 	ori	r2,r2,1
    ea78:	90800815 	stw	r2,32(r18)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ea7c:	28800135 	stwio	r2,4(r5)
  NIOS2_WRITE_STATUS (context);
    ea80:	2001703a 	wrctl	status,r4
    return ptr - buffer;
    ea84:	bd85c83a 	sub	r2,r23,r22
}
    ea88:	dfc00a17 	ldw	ra,40(sp)
    ea8c:	df000917 	ldw	fp,36(sp)
    ea90:	ddc00817 	ldw	r23,32(sp)
    ea94:	dd800717 	ldw	r22,28(sp)
    ea98:	dd400617 	ldw	r21,24(sp)
    ea9c:	dd000517 	ldw	r20,20(sp)
    eaa0:	dcc00417 	ldw	r19,16(sp)
    eaa4:	dc800317 	ldw	r18,12(sp)
    eaa8:	dc400217 	ldw	r17,8(sp)
    eaac:	dc000117 	ldw	r16,4(sp)
    eab0:	dec00b04 	addi	sp,sp,44
    eab4:	f800283a 	ret
  else if (flags & O_NONBLOCK)
    eab8:	d8800017 	ldw	r2,0(sp)
    eabc:	103fe426 	beq	r2,zero,ea50 <altera_avalon_jtag_uart_read+0xd8>
    return -EWOULDBLOCK;
    eac0:	00bffd44 	movi	r2,-11
    eac4:	003ff006 	br	ea88 <altera_avalon_jtag_uart_read+0x110>

0000eac8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    eac8:	f811883a 	mov	r8,ra
    eacc:	000e1ac0 	call	e1ac <_mcount>
    ead0:	403f883a 	mov	ra,r8
    ead4:	defff604 	addi	sp,sp,-40
    ead8:	dfc00915 	stw	ra,36(sp)
    eadc:	df000815 	stw	fp,32(sp)
    eae0:	ddc00715 	stw	r23,28(sp)
    eae4:	dd800615 	stw	r22,24(sp)
    eae8:	dd400515 	stw	r21,20(sp)
    eaec:	dd000415 	stw	r20,16(sp)
    eaf0:	dcc00315 	stw	r19,12(sp)
    eaf4:	dc800215 	stw	r18,8(sp)
    eaf8:	dc400115 	stw	r17,4(sp)
    eafc:	dc000015 	stw	r16,0(sp)
    eb00:	2021883a 	mov	r16,r4
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    eb04:	01804c0e 	bge	zero,r6,ec38 <altera_avalon_jtag_uart_write+0x170>
    eb08:	302f883a 	mov	r23,r6
    eb0c:	2827883a 	mov	r19,r5
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
    eb10:	3d10000c 	andi	r20,r7,16384
    eb14:	282d883a 	mov	r22,r5
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb18:	057fff84 	movi	r21,-2
      memcpy(sp->tx_buf + in, ptr, n);
    eb1c:	24820e04 	addi	r18,r4,2104
      in  = sp->tx_in;
    eb20:	84400c17 	ldw	r17,48(r16)
      out = sp->tx_out;
    eb24:	80c00d17 	ldw	r3,52(r16)
      if (in < out)
    eb28:	88c03c2e 	bgeu	r17,r3,ec1c <altera_avalon_jtag_uart_write+0x154>
        n = out - 1 - in;
    eb2c:	18bfffc4 	addi	r2,r3,-1
    eb30:	1445c83a 	sub	r2,r2,r17
      if (n == 0)
    eb34:	1000141e 	bne	r2,zero,eb88 <altera_avalon_jtag_uart_write+0xc0>
  NIOS2_READ_STATUS (context);
    eb38:	0009303a 	rdctl	r4,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb3c:	2544703a 	and	r2,r4,r21
    eb40:	1001703a 	wrctl	status,r2
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    eb44:	80800817 	ldw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    eb48:	81800017 	ldw	r6,0(r16)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    eb4c:	10800094 	ori	r2,r2,2
    eb50:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    eb54:	30800135 	stwio	r2,4(r6)
  NIOS2_WRITE_STATUS (context);
    eb58:	2001703a 	wrctl	status,r4
      if (flags & O_NONBLOCK)
    eb5c:	a000441e 	bne	r20,zero,ec70 <altera_avalon_jtag_uart_write+0x1a8>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    eb60:	81000917 	ldw	r4,36(r16)
    eb64:	00000206 	br	eb70 <altera_avalon_jtag_uart_write+0xa8>
    eb68:	80800117 	ldw	r2,4(r16)
    eb6c:	2080022e 	bgeu	r4,r2,eb78 <altera_avalon_jtag_uart_write+0xb0>
    eb70:	80800d17 	ldw	r2,52(r16)
    eb74:	10fffc26 	beq	r2,r3,eb68 <altera_avalon_jtag_uart_write+0xa0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    eb78:	203fe926 	beq	r4,zero,eb20 <altera_avalon_jtag_uart_write+0x58>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    eb7c:	9d801a1e 	bne	r19,r22,ebe8 <altera_avalon_jtag_uart_write+0x120>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    eb80:	00bffec4 	movi	r2,-5
    eb84:	00001906 	br	ebec <altera_avalon_jtag_uart_write+0x124>
      if (n > count)
    eb88:	b839883a 	mov	fp,r23
    eb8c:	15c0012e 	bgeu	r2,r23,eb94 <altera_avalon_jtag_uart_write+0xcc>
    eb90:	1039883a 	mov	fp,r2
      memcpy(sp->tx_buf + in, ptr, n);
    eb94:	9449883a 	add	r4,r18,r17
      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    eb98:	8f23883a 	add	r17,r17,fp
      memcpy(sp->tx_buf + in, ptr, n);
    eb9c:	b00b883a 	mov	r5,r22
    eba0:	e00d883a 	mov	r6,fp
      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    eba4:	8c41ffcc 	andi	r17,r17,2047
      memcpy(sp->tx_buf + in, ptr, n);
    eba8:	00004ec0 	call	4ec <memcpy>
      count -= n;
    ebac:	bf2fc83a 	sub	r23,r23,fp
      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ebb0:	84400c15 	stw	r17,48(r16)
      ptr   += n;
    ebb4:	b72d883a 	add	r22,r22,fp
    while (count > 0)
    ebb8:	05ffd916 	blt	zero,r23,eb20 <altera_avalon_jtag_uart_write+0x58>
  NIOS2_READ_STATUS (context);
    ebbc:	0007303a 	rdctl	r3,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ebc0:	00bfff84 	movi	r2,-2
    ebc4:	1884703a 	and	r2,r3,r2
    ebc8:	1001703a 	wrctl	status,r2
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ebcc:	80800817 	ldw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ebd0:	81000017 	ldw	r4,0(r16)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ebd4:	10800094 	ori	r2,r2,2
    ebd8:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ebdc:	20800135 	stwio	r2,4(r4)
  NIOS2_WRITE_STATUS (context);
    ebe0:	1801703a 	wrctl	status,r3
  if (ptr != start)
    ebe4:	9d801f26 	beq	r19,r22,ec64 <altera_avalon_jtag_uart_write+0x19c>
    return ptr - start;
    ebe8:	b4c5c83a 	sub	r2,r22,r19
}
    ebec:	dfc00917 	ldw	ra,36(sp)
    ebf0:	df000817 	ldw	fp,32(sp)
    ebf4:	ddc00717 	ldw	r23,28(sp)
    ebf8:	dd800617 	ldw	r22,24(sp)
    ebfc:	dd400517 	ldw	r21,20(sp)
    ec00:	dd000417 	ldw	r20,16(sp)
    ec04:	dcc00317 	ldw	r19,12(sp)
    ec08:	dc800217 	ldw	r18,8(sp)
    ec0c:	dc400117 	ldw	r17,4(sp)
    ec10:	dc000017 	ldw	r16,0(sp)
    ec14:	dec00a04 	addi	sp,sp,40
    ec18:	f800283a 	ret
      else if (out > 0)
    ec1c:	18000326 	beq	r3,zero,ec2c <altera_avalon_jtag_uart_write+0x164>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    ec20:	00820004 	movi	r2,2048
    ec24:	1445c83a 	sub	r2,r2,r17
    ec28:	003fc206 	br	eb34 <altera_avalon_jtag_uart_write+0x6c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    ec2c:	0081ffc4 	movi	r2,2047
    ec30:	1445c83a 	sub	r2,r2,r17
    ec34:	003fbf06 	br	eb34 <altera_avalon_jtag_uart_write+0x6c>
  NIOS2_READ_STATUS (context);
    ec38:	0007303a 	rdctl	r3,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec3c:	00bfff84 	movi	r2,-2
    ec40:	1884703a 	and	r2,r3,r2
    ec44:	1001703a 	wrctl	status,r2
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ec48:	20800817 	ldw	r2,32(r4)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ec4c:	21000017 	ldw	r4,0(r4)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    ec50:	10800094 	ori	r2,r2,2
    ec54:	80800815 	stw	r2,32(r16)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    ec58:	20800135 	stwio	r2,4(r4)
  NIOS2_WRITE_STATUS (context);
    ec5c:	1801703a 	wrctl	status,r3
  if (ptr != start)
    ec60:	3d10000c 	andi	r20,r7,16384
  else if (flags & O_NONBLOCK)
    ec64:	a03fc626 	beq	r20,zero,eb80 <altera_avalon_jtag_uart_write+0xb8>
    return -EWOULDBLOCK;
    ec68:	00bffd44 	movi	r2,-11
    ec6c:	003fdf06 	br	ebec <altera_avalon_jtag_uart_write+0x124>
  if (ptr != start)
    ec70:	9dbfdd1e 	bne	r19,r22,ebe8 <altera_avalon_jtag_uart_write+0x120>
    ec74:	003ffc06 	br	ec68 <altera_avalon_jtag_uart_write+0x1a0>

0000ec78 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
    ec78:	f811883a 	mov	r8,ra
    ec7c:	000e1ac0 	call	e1ac <_mcount>
    ec80:	403f883a 	mov	ra,r8
    ec84:	defffe04 	addi	sp,sp,-8
    ec88:	dfc00115 	stw	ra,4(sp)
    ec8c:	dc000015 	stw	r16,0(sp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
    ec90:	20000035 	stwio	zero,0(r4)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
    ec94:	20800137 	ldwio	r2,4(r4)
  NIOS2_READ_STATUS (context);
    ec98:	0021303a 	rdctl	r16,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec9c:	00bfff84 	movi	r2,-2
    eca0:	8084703a 	and	r2,r16,r2
    eca4:	1001703a 	wrctl	status,r2
  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  alt_tick ();
    eca8:	000e3d80 	call	e3d8 <alt_tick>
  NIOS2_WRITE_STATUS (context);
    ecac:	8001703a 	wrctl	status,r16
  alt_irq_enable_all(cpu_sr);
}
    ecb0:	dfc00117 	ldw	ra,4(sp)
    ecb4:	dc000017 	ldw	r16,0(sp)
    ecb8:	dec00204 	addi	sp,sp,8
    ecbc:	f800283a 	ret

0000ecc0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
    ecc0:	f811883a 	mov	r8,ra
    ecc4:	000e1ac0 	call	e1ac <_mcount>
    ecc8:	403f883a 	mov	ra,r8
    eccc:	defffe04 	addi	sp,sp,-8
    ecd0:	dfc00115 	stw	ra,4(sp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
    ecd4:	d0e01d17 	ldw	r3,-32652(gp)
    ecd8:	2005883a 	mov	r2,r4
    ecdc:	2809883a 	mov	r4,r5
    ece0:	300b883a 	mov	r5,r6
    ece4:	1800011e 	bne	r3,zero,ecec <alt_avalon_timer_sc_init+0x2c>
  {
    _alt_tick_rate = nticks;
    ece8:	d1e01d15 	stw	r7,-32652(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
    ecec:	00c001c4 	movi	r3,7
    ecf0:	10c00135 	stwio	r3,4(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
    ecf4:	01800074 	movhi	r6,1
    ecf8:	d8000015 	stw	zero,0(sp)
    ecfc:	100f883a 	mov	r7,r2
    ed00:	31bb1e04 	addi	r6,r6,-5000
    ed04:	000ddd00 	call	ddd0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
    ed08:	dfc00117 	ldw	ra,4(sp)
    ed0c:	dec00204 	addi	sp,sp,8
    ed10:	f800283a 	ret

0000ed14 <perf_print_formatted_report>:

#ifndef SMALL_C_LIB 
int perf_print_formatted_report (void* perf_base, 
                                 alt_u32 clock_freq_hertz,
                                 int num_sections, ...)
{
    ed14:	f811883a 	mov	r8,ra
    ed18:	000e1ac0 	call	e1ac <_mcount>
    ed1c:	403f883a 	mov	ra,r8
    ed20:	deffe704 	addi	sp,sp,-100
    ed24:	dfc01715 	stw	ra,92(sp)
    ed28:	df001615 	stw	fp,88(sp)
    ed2c:	ddc01515 	stw	r23,84(sp)
    ed30:	dd801415 	stw	r22,80(sp)
    ed34:	dd401315 	stw	r21,76(sp)
    ed38:	dd001215 	stw	r20,72(sp)
    ed3c:	dcc01115 	stw	r19,68(sp)
    ed40:	dc801015 	stw	r18,64(sp)
    ed44:	dc400f15 	stw	r17,60(sp)
    ed48:	dc000e15 	stw	r16,56(sp)
    ed4c:	2023883a 	mov	r17,r4
    ed50:	2825883a 	mov	r18,r5
    ed54:	3029883a 	mov	r20,r6
    ed58:	d9800715 	stw	r6,28(sp)
    ed5c:	d9c01815 	stw	r7,96(sp)
  const char* separator = 
    "+---------------+-----+-----------+---------------+-----------+\n";
  const char* column_header = 
    "| Section       |  %  | Time (sec)|  Time (clocks)|Occurrences|\n";

  PERF_STOP_MEASURING (perf_base);
    ed60:	20000035 	stwio	zero,0(r4)

  va_start (name_args, num_sections);

  total_clocks = perf_get_total_time (perf_base);
    ed64:	000f45c0 	call	f45c <perf_get_total_time>
  total_sec    = ((double)total_clocks) / clock_freq_hertz;
    ed68:	180b883a 	mov	r5,r3
    ed6c:	1009883a 	mov	r4,r2
  total_clocks = perf_get_total_time (perf_base);
    ed70:	1021883a 	mov	r16,r2
    ed74:	1839883a 	mov	fp,r3
  total_sec    = ((double)total_clocks) / clock_freq_hertz;
    ed78:	000f7900 	call	f790 <__floatundidf>
    ed7c:	9009883a 	mov	r4,r18
    ed80:	1027883a 	mov	r19,r2
    ed84:	1825883a 	mov	r18,r3
    ed88:	d8800815 	stw	r2,32(sp)
    ed8c:	d8c00915 	stw	r3,36(sp)
    ed90:	000d8f80 	call	d8f8 <__floatunsidf>
    ed94:	900b883a 	mov	r5,r18
    ed98:	100d883a 	mov	r6,r2
    ed9c:	180f883a 	mov	r7,r3
    eda0:	9809883a 	mov	r4,r19
    eda4:	d8800a15 	stw	r2,40(sp)
    eda8:	d8c00b15 	stw	r3,44(sp)
    edac:	000bd2c0 	call	bd2c <__divdf3>

  // Print the total at the top:
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
    edb0:	01000074 	movhi	r4,1
    edb4:	2101b404 	addi	r4,r4,1744
    edb8:	01c00074 	movhi	r7,1
    edbc:	200b883a 	mov	r5,r4
    edc0:	d9000c15 	stw	r4,48(sp)
    edc4:	39c1c504 	addi	r7,r7,1812
    edc8:	01000074 	movhi	r4,1
    edcc:	d9400315 	stw	r5,12(sp)
    edd0:	d9c00215 	stw	r7,8(sp)
    edd4:	d9400115 	stw	r5,4(sp)
    edd8:	df000015 	stw	fp,0(sp)
    eddc:	100b883a 	mov	r5,r2
    ede0:	800f883a 	mov	r7,r16

  for (section_num = 1; section_num <= num_sections; section_num++)
    {
      section_clocks = perf_get_section_time (perf_base, section_num);

      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
    ede4:	00800074 	movhi	r2,1
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
    ede8:	180d883a 	mov	r6,r3
    edec:	21019f04 	addi	r4,r4,1660
      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
    edf0:	102b883a 	mov	r21,r2
  printf ("--Performance Counter Report--\nTotal Time: %3G seconds  (%lld clock-cycles)\n%s%s%s",
    edf4:	00006340 	call	634 <printf>
      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
    edf8:	a881d604 	addi	r2,r21,1880
    edfc:	d8800d15 	stw	r2,52(sp)
  section_name = va_arg(name_args, char*);
    ee00:	dc801817 	ldw	r18,96(sp)
  for (section_num = 1; section_num <= num_sections; section_num++)
    ee04:	0500340e 	bge	zero,r20,eed8 <perf_print_formatted_report+0x1c4>
    ee08:	dc001904 	addi	r16,sp,100
    ee0c:	04c00044 	movi	r19,1
      section_clocks = perf_get_section_time (perf_base, section_num);
    ee10:	980b883a 	mov	r5,r19
    ee14:	8809883a 	mov	r4,r17
    ee18:	000f42c0 	call	f42c <perf_get_section_time>
              section_name,
              ((((double) section_clocks)) * 100) / total_clocks,
    ee1c:	1009883a 	mov	r4,r2
    ee20:	180b883a 	mov	r5,r3
      section_clocks = perf_get_section_time (perf_base, section_num);
    ee24:	1039883a 	mov	fp,r2
    ee28:	182f883a 	mov	r23,r3
              ((((double) section_clocks)) * 100) / total_clocks,
    ee2c:	000f7900 	call	f790 <__floatundidf>
    ee30:	000d883a 	mov	r6,zero
    ee34:	01d01674 	movhi	r7,16473
    ee38:	1009883a 	mov	r4,r2
    ee3c:	180b883a 	mov	r5,r3
    ee40:	102b883a 	mov	r21,r2
    ee44:	1829883a 	mov	r20,r3
    ee48:	000c8080 	call	c808 <__muldf3>
      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
    ee4c:	d9800817 	ldw	r6,32(sp)
    ee50:	d9c00917 	ldw	r7,36(sp)
    ee54:	1009883a 	mov	r4,r2
    ee58:	180b883a 	mov	r5,r3
    ee5c:	000bd2c0 	call	bd2c <__divdf3>
    ee60:	d9800a17 	ldw	r6,40(sp)
    ee64:	d9c00b17 	ldw	r7,44(sp)
    ee68:	a809883a 	mov	r4,r21
    ee6c:	a00b883a 	mov	r5,r20
    ee70:	102b883a 	mov	r21,r2
    ee74:	1829883a 	mov	r20,r3
    ee78:	000bd2c0 	call	bd2c <__divdf3>
              (((double) section_clocks)) / clock_freq_hertz,
              section_clocks,
              (unsigned int) perf_get_num_starts (perf_base, section_num),
    ee7c:	980b883a 	mov	r5,r19
    ee80:	8809883a 	mov	r4,r17
      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
    ee84:	102d883a 	mov	r22,r2
    ee88:	d8c00615 	stw	r3,24(sp)
              (unsigned int) perf_get_num_starts (perf_base, section_num),
    ee8c:	000f4780 	call	f478 <perf_get_num_starts>
      printf ("|%-15s|%5.3g|%11.5f|%15lld|%11u|\n%s",
    ee90:	d8c00c17 	ldw	r3,48(sp)
    ee94:	d9000d17 	ldw	r4,52(sp)
    ee98:	900b883a 	mov	r5,r18
    ee9c:	d8c00515 	stw	r3,20(sp)
    eea0:	d8c00617 	ldw	r3,24(sp)
    eea4:	d8800415 	stw	r2,16(sp)
    eea8:	df000215 	stw	fp,8(sp)
    eeac:	ddc00315 	stw	r23,12(sp)
    eeb0:	dd800015 	stw	r22,0(sp)
    eeb4:	d8c00115 	stw	r3,4(sp)
    eeb8:	a80d883a 	mov	r6,r21
    eebc:	a00f883a 	mov	r7,r20
    eec0:	00006340 	call	634 <printf>
  for (section_num = 1; section_num <= num_sections; section_num++)
    eec4:	d8800717 	ldw	r2,28(sp)
    eec8:	9cc00044 	addi	r19,r19,1
              separator
              );

      section_name = va_arg(name_args, char*);
    eecc:	84000104 	addi	r16,r16,4
    eed0:	84bfff17 	ldw	r18,-4(r16)
  for (section_num = 1; section_num <= num_sections; section_num++)
    eed4:	14ffce0e 	bge	r2,r19,ee10 <perf_print_formatted_report+0xfc>
    }

  va_end (name_args);

  return 0;
}
    eed8:	0005883a 	mov	r2,zero
    eedc:	dfc01717 	ldw	ra,92(sp)
    eee0:	df001617 	ldw	fp,88(sp)
    eee4:	ddc01517 	ldw	r23,84(sp)
    eee8:	dd801417 	ldw	r22,80(sp)
    eeec:	dd401317 	ldw	r21,76(sp)
    eef0:	dd001217 	ldw	r20,72(sp)
    eef4:	dcc01117 	ldw	r19,68(sp)
    eef8:	dc801017 	ldw	r18,64(sp)
    eefc:	dc400f17 	ldw	r17,60(sp)
    ef00:	dc000e17 	ldw	r16,56(sp)
    ef04:	dec01904 	addi	sp,sp,100
    ef08:	f800283a 	ret

0000ef0c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    ef0c:	f811883a 	mov	r8,ra
    ef10:	000e1ac0 	call	e1ac <_mcount>
    ef14:	403f883a 	mov	ra,r8
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  
  if (alt_ticks_per_second ())
    ef18:	d0a01d17 	ldw	r2,-32652(gp)
    ef1c:	10001a26 	beq	r2,zero,ef88 <alt_alarm_start+0x7c>
  {
    if (alarm)
    ef20:	20001b26 	beq	r4,zero,ef90 <alt_alarm_start+0x84>
    {
      alarm->callback = callback;
    ef24:	21800315 	stw	r6,12(r4)
      alarm->context  = context;
    ef28:	21c00515 	stw	r7,20(r4)
  NIOS2_READ_STATUS (context);
    ef2c:	0007303a 	rdctl	r3,status
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ef30:	00bfff84 	movi	r2,-2
    ef34:	1884703a 	and	r2,r3,r2
    ef38:	1001703a 	wrctl	status,r2
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    ef3c:	d1a01c17 	ldw	r6,-32656(gp)
 
      irq_context = alt_irq_disable_all ();
      
      current_nticks = alt_nticks();
      
      alarm->time = nticks + current_nticks + 1; 
    ef40:	30800044 	addi	r2,r6,1
    ef44:	114b883a 	add	r5,r2,r5
    ef48:	21400215 	stw	r5,8(r4)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    ef4c:	29800b36 	bltu	r5,r6,ef7c <alt_alarm_start+0x70>
      {
        alarm->rollover = 1;
      }
      else
      {
        alarm->rollover = 0;
    ef50:	20000405 	stb	zero,16(r4)
  entry->previous = list;
    ef54:	d0a00d04 	addi	r2,gp,-32716
    ef58:	20800115 	stw	r2,4(r4)
  entry->next     = list->next;
    ef5c:	d0a00d17 	ldw	r2,-32716(gp)
    ef60:	20800015 	stw	r2,0(r4)
  list->next->previous = entry;
    ef64:	d0a00d17 	ldw	r2,-32716(gp)
  list->next           = entry;
    ef68:	d1200d15 	stw	r4,-32716(gp)
  list->next->previous = entry;
    ef6c:	11000115 	stw	r4,4(r2)
  NIOS2_WRITE_STATUS (context);
    ef70:	1801703a 	wrctl	status,r3
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
      alt_irq_enable_all (irq_context);

      return 0;
    ef74:	0005883a 	mov	r2,zero
  }
  else
  {
    return -ENOTSUP;
  }
}
    ef78:	f800283a 	ret
        alarm->rollover = 1;
    ef7c:	00800044 	movi	r2,1
    ef80:	20800405 	stb	r2,16(r4)
    ef84:	003ff306 	br	ef54 <alt_alarm_start+0x48>
    return -ENOTSUP;
    ef88:	00bfde84 	movi	r2,-134
    ef8c:	003ffa06 	br	ef78 <alt_alarm_start+0x6c>
      return -EINVAL;
    ef90:	00bffa84 	movi	r2,-22
    ef94:	003ff806 	br	ef78 <alt_alarm_start+0x6c>

0000ef98 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    ef98:	f811883a 	mov	r8,ra
    ef9c:	000e1ac0 	call	e1ac <_mcount>
    efa0:	403f883a 	mov	ra,r8
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    efa4:	20000a26 	beq	r4,zero,efd0 <alt_dev_llist_insert+0x38>
    efa8:	20800217 	ldw	r2,8(r4)
    efac:	10000826 	beq	r2,zero,efd0 <alt_dev_llist_insert+0x38>
  entry->next     = list->next;
    efb0:	28c00017 	ldw	r3,0(r5)
  entry->previous = list;
    efb4:	21400115 	stw	r5,4(r4)
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
    efb8:	0005883a 	mov	r2,zero
  entry->next     = list->next;
    efbc:	20c00015 	stw	r3,0(r4)
  list->next->previous = entry;
    efc0:	28c00017 	ldw	r3,0(r5)
    efc4:	19000115 	stw	r4,4(r3)
  list->next           = entry;
    efc8:	29000015 	stw	r4,0(r5)
    efcc:	f800283a 	ret
    efd0:	d0a00917 	ldw	r2,-32732(gp)
    efd4:	10000926 	beq	r2,zero,effc <alt_dev_llist_insert+0x64>
{
    efd8:	deffff04 	addi	sp,sp,-4
    efdc:	dfc00015 	stw	ra,0(sp)
    efe0:	103ee83a 	callr	r2
    ALT_ERRNO = EINVAL;
    efe4:	00c00584 	movi	r3,22
    efe8:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
    efec:	00bffa84 	movi	r2,-22
}
    eff0:	dfc00017 	ldw	ra,0(sp)
    eff4:	dec00104 	addi	sp,sp,4
    eff8:	f800283a 	ret
    effc:	d0a01304 	addi	r2,gp,-32692
    ALT_ERRNO = EINVAL;
    f000:	00c00584 	movi	r3,22
    f004:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
    f008:	00bffa84 	movi	r2,-22
}
    f00c:	f800283a 	ret

0000f010 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    f010:	f811883a 	mov	r8,ra
    f014:	000e1ac0 	call	e1ac <_mcount>
    f018:	403f883a 	mov	ra,r8
    f01c:	defffd04 	addi	sp,sp,-12
    f020:	dfc00215 	stw	ra,8(sp)
    f024:	dc400115 	stw	r17,4(sp)
    f028:	dc000015 	stw	r16,0(sp)
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f02c:	04000074 	movhi	r16,1
    f030:	04400074 	movhi	r17,1
    f034:	843e0204 	addi	r16,r16,-2040
    f038:	8c7e0304 	addi	r17,r17,-2036
    f03c:	84400436 	bltu	r16,r17,f050 <_do_ctors+0x40>
        (*ctor) (); 
    f040:	80800017 	ldw	r2,0(r16)
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f044:	843fff04 	addi	r16,r16,-4
        (*ctor) (); 
    f048:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    f04c:	847ffc2e 	bgeu	r16,r17,f040 <_do_ctors+0x30>
}
    f050:	dfc00217 	ldw	ra,8(sp)
    f054:	dc400117 	ldw	r17,4(sp)
    f058:	dc000017 	ldw	r16,0(sp)
    f05c:	dec00304 	addi	sp,sp,12
    f060:	f800283a 	ret

0000f064 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    f064:	f811883a 	mov	r8,ra
    f068:	000e1ac0 	call	e1ac <_mcount>
    f06c:	403f883a 	mov	ra,r8
    f070:	defffd04 	addi	sp,sp,-12
    f074:	dfc00215 	stw	ra,8(sp)
    f078:	dc400115 	stw	r17,4(sp)
    f07c:	dc000015 	stw	r16,0(sp)
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f080:	04000074 	movhi	r16,1
    f084:	04400074 	movhi	r17,1
    f088:	843e0204 	addi	r16,r16,-2040
    f08c:	8c7e0304 	addi	r17,r17,-2036
    f090:	84400436 	bltu	r16,r17,f0a4 <_do_dtors+0x40>
        (*dtor) (); 
    f094:	80800017 	ldw	r2,0(r16)
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f098:	843fff04 	addi	r16,r16,-4
        (*dtor) (); 
    f09c:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    f0a0:	847ffc2e 	bgeu	r16,r17,f094 <_do_dtors+0x30>
}
    f0a4:	dfc00217 	ldw	ra,8(sp)
    f0a8:	dc400117 	ldw	r17,4(sp)
    f0ac:	dc000017 	ldw	r16,0(sp)
    f0b0:	dec00304 	addi	sp,sp,12
    f0b4:	f800283a 	ret

0000f0b8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
    f0b8:	f811883a 	mov	r8,ra
    f0bc:	000e1ac0 	call	e1ac <_mcount>
    f0c0:	403f883a 	mov	ra,r8
  if (len > NIOS2_ICACHE_SIZE)
  {
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;
    f0c4:	28840070 	cmpltui	r2,r5,4097
    f0c8:	1000011e 	bne	r2,zero,f0d0 <alt_icache_flush+0x18>
    f0cc:	01440004 	movi	r5,4096
    f0d0:	214b883a 	add	r5,r4,r5

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
    f0d4:	2005883a 	mov	r2,r4
    f0d8:	2140092e 	bgeu	r4,r5,f100 <alt_icache_flush+0x48>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
    f0dc:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
    f0e0:	10800804 	addi	r2,r2,32
    f0e4:	117ffd36 	bltu	r2,r5,f0dc <alt_icache_flush+0x24>
    f0e8:	0104303a 	nor	r2,zero,r4
    f0ec:	2885883a 	add	r2,r5,r2
    f0f0:	1004d17a 	srli	r2,r2,5
    f0f4:	10800044 	addi	r2,r2,1
    f0f8:	1004917a 	slli	r2,r2,5
    f0fc:	2085883a 	add	r2,r4,r2
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
    f100:	210007cc 	andi	r4,r4,31
    f104:	20000126 	beq	r4,zero,f10c <alt_icache_flush+0x54>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
    f108:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
    f10c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
    f110:	f800283a 	ret

0000f114 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f114:	f811883a 	mov	r8,ra
    f118:	000e1ac0 	call	e1ac <_mcount>
    f11c:	403f883a 	mov	ra,r8
  switch (cause) {
    f120:	213ffe84 	addi	r4,r4,-6
    f124:	20800428 	cmpgeui	r2,r4,16
    f128:	1000171e 	bne	r2,zero,f188 <alt_exception_cause_generated_bad_addr+0x74>
    f12c:	200890ba 	slli	r4,r4,2
    f130:	00800074 	movhi	r2,1
    f134:	2085883a 	add	r2,r4,r2
    f138:	10bc5017 	ldw	r2,-3776(r2)
    f13c:	1000683a 	jmp	r2
    f140:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
    f144:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
    f148:	0000f188 	cmpgei	zero,zero,966
    f14c:	0000f188 	cmpgei	zero,zero,966
    f150:	0000f188 	cmpgei	zero,zero,966
    f154:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
    f158:	0000f188 	cmpgei	zero,zero,966
    f15c:	0000f188 	cmpgei	zero,zero,966
    f160:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
    f164:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
    f168:	0000f188 	cmpgei	zero,zero,966
    f16c:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
    f170:	0000f188 	cmpgei	zero,zero,966
    f174:	0000f188 	cmpgei	zero,zero,966
    f178:	0000f188 	cmpgei	zero,zero,966
    f17c:	0000f180 	call	f18 <___vfprintf_internal_r+0x708>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f180:	00800044 	movi	r2,1
    return 0;

  default:
    return 0;
  }
}
    f184:	f800283a 	ret
    return 1;
    f188:	0005883a 	mov	r2,zero
}
    f18c:	f800283a 	ret

0000f190 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    f190:	f811883a 	mov	r8,ra
    f194:	000e1ac0 	call	e1ac <_mcount>
    f198:	403f883a 	mov	ra,r8
    f19c:	defffd04 	addi	sp,sp,-12
    f1a0:	dfc00215 	stw	ra,8(sp)
    f1a4:	dc400115 	stw	r17,4(sp)
    f1a8:	dc000015 	stw	r16,0(sp)
    f1ac:	2823883a 	mov	r17,r5
    f1b0:	3021883a 	mov	r16,r6
  old = open (name, flags, mode);
    f1b4:	01400044 	movi	r5,1
    f1b8:	01807fc4 	movi	r6,511
    f1bc:	000f2ac0 	call	f2ac <open>
  if (old >= 0)
    f1c0:	10000c16 	blt	r2,zero,f1f4 <alt_io_redirect+0x64>
    fd->dev      = alt_fd_list[old].dev;
    f1c4:	10c00324 	muli	r3,r2,12
    f1c8:	1009883a 	mov	r4,r2
    f1cc:	00800074 	movhi	r2,1
    f1d0:	10844504 	addi	r2,r2,4372
    f1d4:	10c7883a 	add	r3,r2,r3
    f1d8:	19800017 	ldw	r6,0(r3)
    fd->priv     = alt_fd_list[old].priv;
    f1dc:	19400117 	ldw	r5,4(r3)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f1e0:	18c00217 	ldw	r3,8(r3)
    fd->dev      = alt_fd_list[old].dev;
    f1e4:	11800315 	stw	r6,12(r2)
    fd->priv     = alt_fd_list[old].priv;
    f1e8:	11400415 	stw	r5,16(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f1ec:	10c00515 	stw	r3,20(r2)
    alt_release_fd (old);
    f1f0:	000e3200 	call	e320 <alt_release_fd>
  old = open (name, flags, mode);
    f1f4:	8809883a 	mov	r4,r17
    f1f8:	01807fc4 	movi	r6,511
    f1fc:	000b883a 	mov	r5,zero
    f200:	000f2ac0 	call	f2ac <open>
    f204:	1009883a 	mov	r4,r2
  if (old >= 0)
    f208:	10000e16 	blt	r2,zero,f244 <alt_io_redirect+0xb4>
    fd->dev      = alt_fd_list[old].dev;
    f20c:	11800324 	muli	r6,r2,12
    f210:	00800074 	movhi	r2,1
    f214:	10844504 	addi	r2,r2,4372
    f218:	118b883a 	add	r5,r2,r6
    f21c:	00c00074 	movhi	r3,1
    f220:	29c00017 	ldw	r7,0(r5)
    f224:	30c7883a 	add	r3,r6,r3
    f228:	18c44617 	ldw	r3,4376(r3)
    f22c:	01800074 	movhi	r6,1
    f230:	31c44515 	stw	r7,4372(r6)
    f234:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f238:	28c00217 	ldw	r3,8(r5)
    f23c:	10c00215 	stw	r3,8(r2)
    alt_release_fd (old);
    f240:	000e3200 	call	e320 <alt_release_fd>
  old = open (name, flags, mode);
    f244:	8009883a 	mov	r4,r16
    f248:	01807fc4 	movi	r6,511
    f24c:	01400044 	movi	r5,1
    f250:	000f2ac0 	call	f2ac <open>
    f254:	1009883a 	mov	r4,r2
  if (old >= 0)
    f258:	1000050e 	bge	r2,zero,f270 <alt_io_redirect+0xe0>
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
}  
    f25c:	dfc00217 	ldw	ra,8(sp)
    f260:	dc400117 	ldw	r17,4(sp)
    f264:	dc000017 	ldw	r16,0(sp)
    f268:	dec00304 	addi	sp,sp,12
    f26c:	f800283a 	ret
    fd->dev      = alt_fd_list[old].dev;
    f270:	10c00324 	muli	r3,r2,12
    f274:	00800074 	movhi	r2,1
    f278:	10844504 	addi	r2,r2,4372
    f27c:	10c7883a 	add	r3,r2,r3
    f280:	19800017 	ldw	r6,0(r3)
    fd->priv     = alt_fd_list[old].priv;
    f284:	19400117 	ldw	r5,4(r3)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f288:	18c00217 	ldw	r3,8(r3)
    fd->dev      = alt_fd_list[old].dev;
    f28c:	11800615 	stw	r6,24(r2)
    fd->priv     = alt_fd_list[old].priv;
    f290:	11400715 	stw	r5,28(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    f294:	10c00815 	stw	r3,32(r2)
}  
    f298:	dfc00217 	ldw	ra,8(sp)
    f29c:	dc400117 	ldw	r17,4(sp)
    f2a0:	dc000017 	ldw	r16,0(sp)
    f2a4:	dec00304 	addi	sp,sp,12
    alt_release_fd (old);
    f2a8:	000e3201 	jmpi	e320 <alt_release_fd>

0000f2ac <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    f2ac:	f811883a 	mov	r8,ra
    f2b0:	000e1ac0 	call	e1ac <_mcount>
    f2b4:	403f883a 	mov	ra,r8
    f2b8:	defffa04 	addi	sp,sp,-24
    f2bc:	dfc00515 	stw	ra,20(sp)
    f2c0:	dd000415 	stw	r20,16(sp)
    f2c4:	dcc00315 	stw	r19,12(sp)
    f2c8:	dc800215 	stw	r18,8(sp)
    f2cc:	dc400115 	stw	r17,4(sp)
    f2d0:	dc000015 	stw	r16,0(sp)
    f2d4:	2825883a 	mov	r18,r5
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f2d8:	d1600504 	addi	r5,gp,-32748
{ 
    f2dc:	2027883a 	mov	r19,r4
    f2e0:	3029883a 	mov	r20,r6
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f2e4:	000f4c80 	call	f4c8 <alt_find_dev>
    f2e8:	10002526 	beq	r2,zero,f380 <open+0xd4>
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  {
    if ((index = alt_get_fd (dev)) < 0)
    f2ec:	1009883a 	mov	r4,r2
    f2f0:	1021883a 	mov	r16,r2
    f2f4:	000f5f40 	call	f5f4 <alt_get_fd>
    f2f8:	1023883a 	mov	r17,r2
    f2fc:	1000090e 	bge	r2,zero,f324 <open+0x78>
  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  {
    alt_release_fd (index);  
    ALT_ERRNO = -status;
    f300:	0461c83a 	sub	r16,zero,r17
    alt_release_fd (index);  
    f304:	8809883a 	mov	r4,r17
    f308:	000e3200 	call	e320 <alt_release_fd>
    f30c:	d0a00917 	ldw	r2,-32732(gp)
    f310:	10003c26 	beq	r2,zero,f404 <open+0x158>
    f314:	103ee83a 	callr	r2
    ALT_ERRNO = -status;
    f318:	14000015 	stw	r16,0(r2)
    return -1;
    f31c:	047fffc4 	movi	r17,-1
    f320:	00002f06 	br	f3e0 <open+0x134>
      fd = &alt_fd_list[index];
    f324:	89000324 	muli	r4,r17,12
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f328:	00900034 	movhi	r2,16384
      fd = &alt_fd_list[index];
    f32c:	00c00074 	movhi	r3,1
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f330:	10bfffc4 	addi	r2,r2,-1
    f334:	9084703a 	and	r2,r18,r2
      fd = &alt_fd_list[index];
    f338:	18c44504 	addi	r3,r3,4372
    f33c:	20c9883a 	add	r4,r4,r3
  fd->fd_flags |= ALT_FD_DEV;
    f340:	11900034 	orhi	r6,r2,16384
  for (i = 0; i <= alt_max_fd; i++)
    f344:	d1600417 	ldw	r5,-32752(gp)
    if ((alt_fd_list[i].dev == fd->dev) &&
    f348:	20800017 	ldw	r2,0(r4)
  fd->fd_flags |= ALT_FD_DEV;
    f34c:	21800215 	stw	r6,8(r4)
  for (i = 0; i <= alt_max_fd; i++)
    f350:	0011883a 	mov	r8,zero
    f354:	00000206 	br	f360 <open+0xb4>
    f358:	18c00304 	addi	r3,r3,12
    f35c:	2a001836 	bltu	r5,r8,f3c0 <open+0x114>
    if ((alt_fd_list[i].dev == fd->dev) &&
    f360:	1a400017 	ldw	r9,0(r3)
  for (i = 0; i <= alt_max_fd; i++)
    f364:	42000044 	addi	r8,r8,1
    if ((alt_fd_list[i].dev == fd->dev) &&
    f368:	48bffb1e 	bne	r9,r2,f358 <open+0xac>
    f36c:	19800217 	ldw	r6,8(r3)
    f370:	303ff90e 	bge	r6,zero,f358 <open+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f374:	20fff826 	beq	r4,r3,f358 <open+0xac>
    f378:	04000344 	movi	r16,13
    f37c:	003fe106 	br	f304 <open+0x58>
    dev   = alt_find_file (file);
    f380:	9809883a 	mov	r4,r19
    f384:	000f54c0 	call	f54c <alt_find_file>
    f388:	1021883a 	mov	r16,r2
  if (dev)
    f38c:	10001f26 	beq	r2,zero,f40c <open+0x160>
    if ((index = alt_get_fd (dev)) < 0)
    f390:	1009883a 	mov	r4,r2
    f394:	000f5f40 	call	f5f4 <alt_get_fd>
    f398:	1023883a 	mov	r17,r2
    f39c:	103fd816 	blt	r2,zero,f300 <open+0x54>
      fd = &alt_fd_list[index];
    f3a0:	89000324 	muli	r4,r17,12
    f3a4:	00c00074 	movhi	r3,1
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f3a8:	00900034 	movhi	r2,16384
      fd = &alt_fd_list[index];
    f3ac:	18c44504 	addi	r3,r3,4372
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f3b0:	10bfffc4 	addi	r2,r2,-1
      fd = &alt_fd_list[index];
    f3b4:	20c9883a 	add	r4,r4,r3
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f3b8:	9084703a 	and	r2,r18,r2
    f3bc:	20800215 	stw	r2,8(r4)
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f3c0:	80800317 	ldw	r2,12(r16)
    f3c4:	10000626 	beq	r2,zero,f3e0 <open+0x134>
    f3c8:	a00f883a 	mov	r7,r20
    f3cc:	900d883a 	mov	r6,r18
    f3d0:	980b883a 	mov	r5,r19
    f3d4:	103ee83a 	callr	r2
    ALT_ERRNO = -status;
    f3d8:	00a1c83a 	sub	r16,zero,r2
  if (status < 0)
    f3dc:	103fc916 	blt	r2,zero,f304 <open+0x58>
  }
  
  /* return the reference upon success */

  return index;
}
    f3e0:	8805883a 	mov	r2,r17
    f3e4:	dfc00517 	ldw	ra,20(sp)
    f3e8:	dd000417 	ldw	r20,16(sp)
    f3ec:	dcc00317 	ldw	r19,12(sp)
    f3f0:	dc800217 	ldw	r18,8(sp)
    f3f4:	dc400117 	ldw	r17,4(sp)
    f3f8:	dc000017 	ldw	r16,0(sp)
    f3fc:	dec00604 	addi	sp,sp,24
    f400:	f800283a 	ret
    f404:	d0a01304 	addi	r2,gp,-32692
    f408:	003fc306 	br	f318 <open+0x6c>
    f40c:	040004c4 	movi	r16,19
  int index  = -1;
    f410:	047fffc4 	movi	r17,-1
    f414:	003fbb06 	br	f304 <open+0x58>

0000f418 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    f418:	f811883a 	mov	r8,ra
    f41c:	000e1ac0 	call	e1ac <_mcount>
    f420:	403f883a 	mov	ra,r8
    NIOS2_WRITE_IENABLE(0);
    f424:	000170fa 	wrctl	ienable,zero
}
    f428:	f800283a 	ret

0000f42c <perf_get_section_time>:

#include "altera_avalon_performance_counter.h"
#include "system.h"

alt_u64 perf_get_section_time (void* hw_base_address, int which_section)
{
    f42c:	f811883a 	mov	r8,ra
    f430:	000e1ac0 	call	e1ac <_mcount>
    f434:	403f883a 	mov	ra,r8
  alt_u32 lo;
  alt_u32 hi;
  alt_u64 result = 0;

  PERF_STOP_MEASURING(hw_base_address);
    f438:	20000035 	stwio	zero,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
    f43c:	2804913a 	slli	r2,r5,4
    f440:	2085883a 	add	r2,r4,r2
    f444:	10800037 	ldwio	r2,0(r2)
  hi = IORD(hw_base_address, ((which_section*4)+1));
    f448:	280a913a 	slli	r5,r5,4
    f44c:	29400104 	addi	r5,r5,4
    f450:	214b883a 	add	r5,r4,r5
    f454:	28c00037 	ldwio	r3,0(r5)

  result = ((alt_u64)(((alt_u64) hi) << ((alt_u64)32))) | 
           ((alt_u64)(((alt_u64) lo)                 ))  ;
  return result;
}
    f458:	f800283a 	ret

0000f45c <perf_get_total_time>:

alt_u64 perf_get_total_time   (void* hw_base_address)
{
    f45c:	f811883a 	mov	r8,ra
    f460:	000e1ac0 	call	e1ac <_mcount>
    f464:	403f883a 	mov	ra,r8
  PERF_STOP_MEASURING(hw_base_address);
    f468:	20000035 	stwio	zero,0(r4)
  lo = IORD(hw_base_address, ( which_section*4   ));
    f46c:	20800037 	ldwio	r2,0(r4)
  hi = IORD(hw_base_address, ((which_section*4)+1));
    f470:	20c00137 	ldwio	r3,4(r4)
  return perf_get_section_time (hw_base_address, 0);
}
    f474:	f800283a 	ret

0000f478 <perf_get_num_starts>:

alt_u32 perf_get_num_starts   (void* hw_base_address, int which_section)
{
    f478:	f811883a 	mov	r8,ra
    f47c:	000e1ac0 	call	e1ac <_mcount>
    f480:	403f883a 	mov	ra,r8
  return IORD(hw_base_address, ((which_section*4)+2));
    f484:	280a913a 	slli	r5,r5,4
    f488:	29400204 	addi	r5,r5,8
    f48c:	214b883a 	add	r5,r4,r5
}
    f490:	28800037 	ldwio	r2,0(r5)
    f494:	f800283a 	ret

0000f498 <alt_get_performance_counter_base>:
 * in Nios II IDE just like is done for the system clock timer and
 * timestamp timer.
 */
void* 
alt_get_performance_counter_base()
{
    f498:	f811883a 	mov	r8,ra
    f49c:	000e1ac0 	call	e1ac <_mcount>
    f4a0:	403f883a 	mov	ra,r8
#ifdef PERFORMANCE_COUNTER_0_BASE
    return (void*)PERFORMANCE_COUNTER_0_BASE;
#else
    return (void*)0;
#endif
}
    f4a4:	00820034 	movhi	r2,2048
    f4a8:	10840004 	addi	r2,r2,4096
    f4ac:	f800283a 	ret

0000f4b0 <alt_get_cpu_freq>:
 * If the performance counter peripheral is in a different time domain,
 * this won't necessarily be the same frequency of the CPU.
 */
alt_u32 
alt_get_cpu_freq()
{
    f4b0:	f811883a 	mov	r8,ra
    f4b4:	000e1ac0 	call	e1ac <_mcount>
    f4b8:	403f883a 	mov	ra,r8
    return ALT_CPU_FREQ;
}
    f4bc:	0080bef4 	movhi	r2,763
    f4c0:	10bc2004 	addi	r2,r2,-3968
    f4c4:	f800283a 	ret

0000f4c8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f4c8:	f811883a 	mov	r8,ra
    f4cc:	000e1ac0 	call	e1ac <_mcount>
    f4d0:	403f883a 	mov	ra,r8
    f4d4:	defffb04 	addi	sp,sp,-20
    f4d8:	dfc00415 	stw	ra,16(sp)
    f4dc:	dcc00315 	stw	r19,12(sp)
    f4e0:	dc800215 	stw	r18,8(sp)
    f4e4:	dc400115 	stw	r17,4(sp)
    f4e8:	dc000015 	stw	r16,0(sp)
  alt_dev* next = (alt_dev*) llist->next;
    f4ec:	2c000017 	ldw	r16,0(r5)
{
    f4f0:	2823883a 	mov	r17,r5
    f4f4:	2027883a 	mov	r19,r4
  alt_32 len;

  len  = strlen(name) + 1;
    f4f8:	000076c0 	call	76c <strlen>
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f4fc:	8c001126 	beq	r17,r16,f544 <alt_find_dev+0x7c>
    f500:	14800044 	addi	r18,r2,1
    f504:	00000206 	br	f510 <alt_find_dev+0x48>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    f508:	84000017 	ldw	r16,0(r16)
  while (next != (alt_dev*) llist)
    f50c:	8c000d26 	beq	r17,r16,f544 <alt_find_dev+0x7c>
    if (!memcmp (next->name, name, len))
    f510:	81000217 	ldw	r4,8(r16)
    f514:	900d883a 	mov	r6,r18
    f518:	980b883a 	mov	r5,r19
    f51c:	000f6700 	call	f670 <memcmp>
    f520:	103ff91e 	bne	r2,zero,f508 <alt_find_dev+0x40>
  }
  
  /* No match found */
  
  return NULL;
}
    f524:	8005883a 	mov	r2,r16
    f528:	dfc00417 	ldw	ra,16(sp)
    f52c:	dcc00317 	ldw	r19,12(sp)
    f530:	dc800217 	ldw	r18,8(sp)
    f534:	dc400117 	ldw	r17,4(sp)
    f538:	dc000017 	ldw	r16,0(sp)
    f53c:	dec00504 	addi	sp,sp,20
    f540:	f800283a 	ret
  return NULL;
    f544:	0021883a 	mov	r16,zero
    f548:	003ff606 	br	f524 <alt_find_dev+0x5c>

0000f54c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f54c:	f811883a 	mov	r8,ra
    f550:	000e1ac0 	call	e1ac <_mcount>
    f554:	403f883a 	mov	ra,r8
    f558:	defffb04 	addi	sp,sp,-20
    f55c:	dfc00415 	stw	ra,16(sp)
    f560:	dcc00315 	stw	r19,12(sp)
    f564:	dc800215 	stw	r18,8(sp)
    f568:	dc400115 	stw	r17,4(sp)
    f56c:	dc000015 	stw	r16,0(sp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f570:	d4200717 	ldw	r16,-32740(gp)
    f574:	d4e00704 	addi	r19,gp,-32740
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f578:	84c01526 	beq	r16,r19,f5d0 <alt_find_file+0x84>
    f57c:	2025883a 	mov	r18,r4
  {
    len = strlen(next->name);
    f580:	84400217 	ldw	r17,8(r16)
    f584:	8809883a 	mov	r4,r17
    f588:	000076c0 	call	76c <strlen>
    
    if (next->name[len-1] == '/')
    f58c:	11bfffc4 	addi	r6,r2,-1
    f590:	8987883a 	add	r3,r17,r6
    f594:	18c00007 	ldb	r3,0(r3)
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
        !memcmp (next->name, name, len))
    f598:	900b883a 	mov	r5,r18
    f59c:	8809883a 	mov	r4,r17
    if (next->name[len-1] == '/')
    f5a0:	18c00be0 	cmpeqi	r3,r3,47
    f5a4:	1800011e 	bne	r3,zero,f5ac <alt_find_file+0x60>
    f5a8:	100d883a 	mov	r6,r2
    if (((name[len] == '/') || (name[len] == '\0')) && 
    f5ac:	9185883a 	add	r2,r18,r6
    f5b0:	10800007 	ldb	r2,0(r2)
    f5b4:	10c00be0 	cmpeqi	r3,r2,47
    f5b8:	1800011e 	bne	r3,zero,f5c0 <alt_find_file+0x74>
    f5bc:	1000021e 	bne	r2,zero,f5c8 <alt_find_file+0x7c>
        !memcmp (next->name, name, len))
    f5c0:	000f6700 	call	f670 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
    f5c4:	10000326 	beq	r2,zero,f5d4 <alt_find_file+0x88>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
    f5c8:	84000017 	ldw	r16,0(r16)
  while (next != (alt_dev*) &alt_fs_list)
    f5cc:	84ffec1e 	bne	r16,r19,f580 <alt_find_file+0x34>
  }
  
  /* No match found */
  
  return NULL;     
    f5d0:	0021883a 	mov	r16,zero
}
    f5d4:	8005883a 	mov	r2,r16
    f5d8:	dfc00417 	ldw	ra,16(sp)
    f5dc:	dcc00317 	ldw	r19,12(sp)
    f5e0:	dc800217 	ldw	r18,8(sp)
    f5e4:	dc400117 	ldw	r17,4(sp)
    f5e8:	dc000017 	ldw	r16,0(sp)
    f5ec:	dec00504 	addi	sp,sp,20
    f5f0:	f800283a 	ret

0000f5f4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f5f4:	f811883a 	mov	r8,ra
    f5f8:	000e1ac0 	call	e1ac <_mcount>
    f5fc:	403f883a 	mov	ra,r8
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f600:	00c00074 	movhi	r3,1
    f604:	18c44504 	addi	r3,r3,4372
    f608:	0005883a 	mov	r2,zero
    f60c:	00000306 	br	f61c <alt_get_fd+0x28>
    f610:	10800044 	addi	r2,r2,1
    f614:	11400818 	cmpnei	r5,r2,32
    f618:	28000b26 	beq	r5,zero,f648 <alt_get_fd+0x54>
  {
    if (!alt_fd_list[i].dev)
    f61c:	19400017 	ldw	r5,0(r3)
  for (i = 0; i < ALT_MAX_FD; i++)
    f620:	18c00304 	addi	r3,r3,12
    if (!alt_fd_list[i].dev)
    f624:	283ffa1e 	bne	r5,zero,f610 <alt_get_fd+0x1c>
    {
      alt_fd_list[i].dev = dev;
    f628:	11400324 	muli	r5,r2,12
    f62c:	00c00074 	movhi	r3,1
      if (i > alt_max_fd)
    f630:	d1a00417 	ldw	r6,-32752(gp)
      alt_fd_list[i].dev = dev;
    f634:	28c7883a 	add	r3,r5,r3
    f638:	19044515 	stw	r4,4372(r3)
      if (i > alt_max_fd)
    f63c:	3080010e 	bge	r6,r2,f644 <alt_get_fd+0x50>
      {
        alt_max_fd = i;
    f640:	d0a00415 	stw	r2,-32752(gp)
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
}
    f644:	f800283a 	ret
  int rc = -EMFILE;
    f648:	00bffa04 	movi	r2,-24
}
    f64c:	f800283a 	ret

0000f650 <atexit>:
    f650:	f811883a 	mov	r8,ra
    f654:	000e1ac0 	call	e1ac <_mcount>
    f658:	403f883a 	mov	ra,r8
    f65c:	000f883a 	mov	r7,zero
    f660:	200b883a 	mov	r5,r4
    f664:	000d883a 	mov	r6,zero
    f668:	0009883a 	mov	r4,zero
    f66c:	000f6f41 	jmpi	f6f4 <__register_exitproc>

0000f670 <memcmp>:
    f670:	f811883a 	mov	r8,ra
    f674:	000e1ac0 	call	e1ac <_mcount>
    f678:	403f883a 	mov	ra,r8
    f67c:	30800130 	cmpltui	r2,r6,4
    f680:	10000b1e 	bne	r2,zero,f6b0 <memcmp+0x40>
    f684:	2144b03a 	or	r2,r4,r5
    f688:	108000cc 	andi	r2,r2,3
    f68c:	1000171e 	bne	r2,zero,f6ec <memcmp+0x7c>
    f690:	20c00017 	ldw	r3,0(r4)
    f694:	28800017 	ldw	r2,0(r5)
    f698:	1880141e 	bne	r3,r2,f6ec <memcmp+0x7c>
    f69c:	31bfff04 	addi	r6,r6,-4
    f6a0:	30800128 	cmpgeui	r2,r6,4
    f6a4:	21000104 	addi	r4,r4,4
    f6a8:	29400104 	addi	r5,r5,4
    f6ac:	103ff81e 	bne	r2,zero,f690 <memcmp+0x20>
    f6b0:	30bfffc4 	addi	r2,r6,-1
    f6b4:	30000b26 	beq	r6,zero,f6e4 <memcmp+0x74>
    f6b8:	11800044 	addi	r6,r2,1
    f6bc:	218d883a 	add	r6,r4,r6
    f6c0:	00000106 	br	f6c8 <memcmp+0x58>
    f6c4:	21800726 	beq	r4,r6,f6e4 <memcmp+0x74>
    f6c8:	20800003 	ldbu	r2,0(r4)
    f6cc:	28c00003 	ldbu	r3,0(r5)
    f6d0:	21000044 	addi	r4,r4,1
    f6d4:	29400044 	addi	r5,r5,1
    f6d8:	10fffa26 	beq	r2,r3,f6c4 <memcmp+0x54>
    f6dc:	10c5c83a 	sub	r2,r2,r3
    f6e0:	f800283a 	ret
    f6e4:	0005883a 	mov	r2,zero
    f6e8:	f800283a 	ret
    f6ec:	30bfffc4 	addi	r2,r6,-1
    f6f0:	003ff106 	br	f6b8 <memcmp+0x48>

0000f6f4 <__register_exitproc>:
    f6f4:	f811883a 	mov	r8,ra
    f6f8:	000e1ac0 	call	e1ac <_mcount>
    f6fc:	403f883a 	mov	ra,r8
    f700:	00800074 	movhi	r2,1
    f704:	10c8d017 	ldw	r3,9024(r2)
    f708:	18805217 	ldw	r2,328(r3)
    f70c:	10001b26 	beq	r2,zero,f77c <__register_exitproc+0x88>
    f710:	10c00117 	ldw	r3,4(r2)
    f714:	1a000808 	cmpgei	r8,r3,32
    f718:	40001b1e 	bne	r8,zero,f788 <__register_exitproc+0x94>
    f71c:	2000081e 	bne	r4,zero,f740 <__register_exitproc+0x4c>
    f720:	19000084 	addi	r4,r3,2
    f724:	200890ba 	slli	r4,r4,2
    f728:	18c00044 	addi	r3,r3,1
    f72c:	10c00115 	stw	r3,4(r2)
    f730:	1105883a 	add	r2,r2,r4
    f734:	11400015 	stw	r5,0(r2)
    f738:	0005883a 	mov	r2,zero
    f73c:	f800283a 	ret
    f740:	181090ba 	slli	r8,r3,2
    f744:	02400044 	movi	r9,1
    f748:	48d2983a 	sll	r9,r9,r3
    f74c:	1211883a 	add	r8,r2,r8
    f750:	41802215 	stw	r6,136(r8)
    f754:	11806217 	ldw	r6,392(r2)
    f758:	21000098 	cmpnei	r4,r4,2
    f75c:	324cb03a 	or	r6,r6,r9
    f760:	11806215 	stw	r6,392(r2)
    f764:	41c04215 	stw	r7,264(r8)
    f768:	203fed1e 	bne	r4,zero,f720 <__register_exitproc+0x2c>
    f76c:	11006317 	ldw	r4,396(r2)
    f770:	2252b03a 	or	r9,r4,r9
    f774:	12406315 	stw	r9,396(r2)
    f778:	003fe906 	br	f720 <__register_exitproc+0x2c>
    f77c:	18805304 	addi	r2,r3,332
    f780:	18805215 	stw	r2,328(r3)
    f784:	003fe206 	br	f710 <__register_exitproc+0x1c>
    f788:	00bfffc4 	movi	r2,-1
    f78c:	003feb06 	br	f73c <__register_exitproc+0x48>

0000f790 <__floatundidf>:
    f790:	f811883a 	mov	r8,ra
    f794:	000e1ac0 	call	e1ac <_mcount>
    f798:	403f883a 	mov	ra,r8
    f79c:	defffc04 	addi	sp,sp,-16
    f7a0:	dfc00315 	stw	ra,12(sp)
    f7a4:	dc800215 	stw	r18,8(sp)
    f7a8:	dc400115 	stw	r17,4(sp)
    f7ac:	dc000015 	stw	r16,0(sp)
    f7b0:	2025883a 	mov	r18,r4
    f7b4:	2809883a 	mov	r4,r5
    f7b8:	000d8f80 	call	d8f8 <__floatunsidf>
    f7bc:	000d883a 	mov	r6,zero
    f7c0:	01d07c34 	movhi	r7,16880
    f7c4:	180b883a 	mov	r5,r3
    f7c8:	1009883a 	mov	r4,r2
    f7cc:	000c8080 	call	c808 <__muldf3>
    f7d0:	9009883a 	mov	r4,r18
    f7d4:	1023883a 	mov	r17,r2
    f7d8:	1821883a 	mov	r16,r3
    f7dc:	000d8f80 	call	d8f8 <__floatunsidf>
    f7e0:	880d883a 	mov	r6,r17
    f7e4:	800f883a 	mov	r7,r16
    f7e8:	1009883a 	mov	r4,r2
    f7ec:	180b883a 	mov	r5,r3
    f7f0:	000b4300 	call	b430 <__adddf3>
    f7f4:	dfc00317 	ldw	ra,12(sp)
    f7f8:	dc800217 	ldw	r18,8(sp)
    f7fc:	dc400117 	ldw	r17,4(sp)
    f800:	dc000017 	ldw	r16,0(sp)
    f804:	dec00404 	addi	sp,sp,16
    f808:	f800283a 	ret
